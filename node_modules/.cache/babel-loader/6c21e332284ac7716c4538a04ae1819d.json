{"ast":null,"code":"var SemVer = require('../classes/semver');\nvar Comparator = require('../classes/comparator');\nvar ANY = Comparator.ANY;\nvar Range = require('../classes/range');\nvar satisfies = require('../functions/satisfies');\nvar gt = require('../functions/gt');\nvar lt = require('../functions/lt');\nvar lte = require('../functions/lte');\nvar gte = require('../functions/gte');\nvar outside = function outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n  var _loop = function _loop(i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return {\n        v: false\n      };\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return {\n        v: false\n      };\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return {\n        v: false\n      };\n    }\n  };\n  for (var i = 0; i < range.set.length; ++i) {\n    var _ret = _loop(i);\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n  return true;\n};\nmodule.exports = outside;","map":{"version":3,"names":["SemVer","require","Comparator","ANY","Range","satisfies","gt","lt","lte","gte","outside","version","range","hilo","options","gtfn","ltefn","ltfn","comp","ecomp","TypeError","i","comparators","set","high","low","forEach","comparator","semver","operator","length","module","exports"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC3C,IAAMC,UAAU,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACnD,IAAQE,GAAG,GAAKD,UAAU,CAAlBC,GAAG;AACX,IAAMC,KAAK,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AACzC,IAAMI,SAAS,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACnD,IAAMK,EAAE,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AACrC,IAAMM,EAAE,GAAGN,OAAO,CAAC,iBAAiB,CAAC;AACrC,IAAMO,GAAG,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AACvC,IAAMQ,GAAG,GAAGR,OAAO,CAAC,kBAAkB,CAAC;AAEvC,IAAMS,OAAO,GAAG,SAAVA,OAAO,CAAIC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAK;EACjDH,OAAO,GAAG,IAAIX,MAAM,CAACW,OAAO,EAAEG,OAAO,CAAC;EACtCF,KAAK,GAAG,IAAIR,KAAK,CAACQ,KAAK,EAAEE,OAAO,CAAC;EAEjC,IAAIC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK;EAClC,QAAQN,IAAI;IACV,KAAK,GAAG;MACNE,IAAI,GAAGT,EAAE;MACTU,KAAK,GAAGR,GAAG;MACXS,IAAI,GAAGV,EAAE;MACTW,IAAI,GAAG,GAAG;MACVC,KAAK,GAAG,IAAI;MACZ;IACF,KAAK,GAAG;MACNJ,IAAI,GAAGR,EAAE;MACTS,KAAK,GAAGP,GAAG;MACXQ,IAAI,GAAGX,EAAE;MACTY,IAAI,GAAG,GAAG;MACVC,KAAK,GAAG,IAAI;MACZ;IACF;MACE,MAAM,IAAIC,SAAS,CAAC,uCAAuC,CAAC;EAAA;;EAGhE;EACA,IAAIf,SAAS,CAACM,OAAO,EAAEC,KAAK,EAAEE,OAAO,CAAC,EAAE;IACtC,OAAO,KAAK;EACd;;EAEA;EACA;EAAA,2BAESO,CAAC;IACR,IAAMC,WAAW,GAAGV,KAAK,CAACW,GAAG,CAACF,CAAC,CAAC;IAEhC,IAAIG,IAAI,GAAG,IAAI;IACf,IAAIC,GAAG,GAAG,IAAI;IAEdH,WAAW,CAACI,OAAO,CAAC,UAACC,UAAU,EAAK;MAClC,IAAIA,UAAU,CAACC,MAAM,KAAKzB,GAAG,EAAE;QAC7BwB,UAAU,GAAG,IAAIzB,UAAU,CAAC,SAAS,CAAC;MACxC;MACAsB,IAAI,GAAGA,IAAI,IAAIG,UAAU;MACzBF,GAAG,GAAGA,GAAG,IAAIE,UAAU;MACvB,IAAIZ,IAAI,CAACY,UAAU,CAACC,MAAM,EAAEJ,IAAI,CAACI,MAAM,EAAEd,OAAO,CAAC,EAAE;QACjDU,IAAI,GAAGG,UAAU;MACnB,CAAC,MAAM,IAAIV,IAAI,CAACU,UAAU,CAACC,MAAM,EAAEH,GAAG,CAACG,MAAM,EAAEd,OAAO,CAAC,EAAE;QACvDW,GAAG,GAAGE,UAAU;MAClB;IACF,CAAC,CAAC;;IAEF;IACA;IACA,IAAIH,IAAI,CAACK,QAAQ,KAAKX,IAAI,IAAIM,IAAI,CAACK,QAAQ,KAAKV,KAAK,EAAE;MACrD;QAAA,GAAO;MAAK;IACd;;IAEA;IACA;IACA,IAAI,CAAC,CAACM,GAAG,CAACI,QAAQ,IAAIJ,GAAG,CAACI,QAAQ,KAAKX,IAAI,KACvCF,KAAK,CAACL,OAAO,EAAEc,GAAG,CAACG,MAAM,CAAC,EAAE;MAC9B;QAAA,GAAO;MAAK;IACd,CAAC,MAAM,IAAIH,GAAG,CAACI,QAAQ,KAAKV,KAAK,IAAIF,IAAI,CAACN,OAAO,EAAEc,GAAG,CAACG,MAAM,CAAC,EAAE;MAC9D;QAAA,GAAO;MAAK;IACd;EAAC;EAhCH,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACW,GAAG,CAACO,MAAM,EAAE,EAAET,CAAC,EAAE;IAAA,iBAAlCA,CAAC;IAAA;EAiCV;EACA,OAAO,IAAI;AACb,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAGtB,OAAO"},"metadata":{},"sourceType":"script"}