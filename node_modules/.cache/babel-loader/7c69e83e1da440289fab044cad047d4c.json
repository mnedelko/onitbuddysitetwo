{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar solana_gateway_ts_1 = require(\"@identity.com/solana-gateway-ts\");\nvar web3_js_1 = require(\"@solana/web3.js\");\n// @ts-ignore\nvar react_1 = require(\"react\");\nvar connection_1 = require(\"../connection\");\nvar Badge_svg_1 = __importDefault(require(\"./Badge.svg\"));\n// Used to avoid making multiple blockchain calls when rerendering\nfunction usePrevious(value) {\n  var ref = (0, react_1.useRef)();\n  (0, react_1.useEffect)(function () {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\nvar Badge = function Badge(_ref) {\n  var connection = _ref.connection,\n    gatekeeperNetwork = _ref.gatekeeperNetwork,\n    publicKey = _ref.publicKey,\n    _ref$clusterUrl = _ref.clusterUrl,\n    clusterUrl = _ref$clusterUrl === void 0 ? (0, web3_js_1.clusterApiUrl)('mainnet-beta') : _ref$clusterUrl;\n  var _ref2 = (0, react_1.useState)(),\n    _ref3 = _slicedToArray(_ref2, 2),\n    token = _ref3[0],\n    setToken = _ref3[1];\n  var prevGKN = usePrevious(gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58());\n  var prevPubkey = usePrevious(publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58());\n  var prevClusterName = usePrevious(clusterUrl);\n  (0, react_1.useEffect)(function () {\n    // only make another call if anything changes, as we cannot\n    // rely on useEffect to protect us from this\n    if ((gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58()) !== prevGKN || (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) !== prevPubkey || clusterUrl !== prevClusterName) {\n      var normalizedConnection = connection || (0, connection_1.getSolanaConnection)(clusterUrl);\n      // only set the GT if one was found\n      (0, solana_gateway_ts_1.findGatewayToken)(normalizedConnection, publicKey, gatekeeperNetwork).then(function (gt) {\n        return setToken(gt || undefined);\n      });\n    }\n  }, [gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58(), publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58(), clusterUrl, connection]);\n  return (token === null || token === void 0 ? void 0 : token.state) === solana_gateway_ts_1.State.ACTIVE ? (0, jsx_runtime_1.jsx)(\"a\", Object.assign({\n    href: \"https://www.civic.com\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    \"data-testid\": \"badgeLink\"\n  }, {\n    children: (0, jsx_runtime_1.jsx)(Badge_svg_1.default, {})\n  })) : (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {});\n};\nexports.default = Badge;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","jsx_runtime_1","require","solana_gateway_ts_1","web3_js_1","react_1","connection_1","Badge_svg_1","usePrevious","ref","useRef","useEffect","current","Badge","connection","gatekeeperNetwork","publicKey","clusterUrl","clusterApiUrl","useState","token","setToken","prevGKN","toBase58","prevPubkey","prevClusterName","normalizedConnection","getSolanaConnection","findGatewayToken","then","gt","undefined","state","State","ACTIVE","jsx","assign","href","target","rel","children","default","Fragment"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@civic/solana-gateway-react/dist/esm/badge/Badge.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst solana_gateway_ts_1 = require(\"@identity.com/solana-gateway-ts\");\nconst web3_js_1 = require(\"@solana/web3.js\");\n// @ts-ignore\nconst react_1 = require(\"react\");\nconst connection_1 = require(\"../connection\");\nconst Badge_svg_1 = __importDefault(require(\"./Badge.svg\"));\n// Used to avoid making multiple blockchain calls when rerendering\nfunction usePrevious(value) {\n    const ref = (0, react_1.useRef)();\n    (0, react_1.useEffect)(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\nconst Badge = ({ connection, gatekeeperNetwork, publicKey, clusterUrl = (0, web3_js_1.clusterApiUrl)('mainnet-beta'), }) => {\n    const [token, setToken] = (0, react_1.useState)();\n    const prevGKN = usePrevious(gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58());\n    const prevPubkey = usePrevious(publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58());\n    const prevClusterName = usePrevious(clusterUrl);\n    (0, react_1.useEffect)(() => {\n        // only make another call if anything changes, as we cannot\n        // rely on useEffect to protect us from this\n        if ((gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58()) !== prevGKN ||\n            (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) !== prevPubkey ||\n            clusterUrl !== prevClusterName) {\n            const normalizedConnection = connection || (0, connection_1.getSolanaConnection)(clusterUrl);\n            // only set the GT if one was found\n            (0, solana_gateway_ts_1.findGatewayToken)(normalizedConnection, publicKey, gatekeeperNetwork).then((gt) => setToken(gt || undefined));\n        }\n    }, [gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58(), publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58(), clusterUrl, connection]);\n    return (token === null || token === void 0 ? void 0 : token.state) === solana_gateway_ts_1.State.ACTIVE ? ((0, jsx_runtime_1.jsx)(\"a\", Object.assign({ href: \"https://www.civic.com\", target: \"_blank\", rel: \"noreferrer\", \"data-testid\": \"badgeLink\" }, { children: (0, jsx_runtime_1.jsx)(Badge_svg_1.default, {}) }))) : ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {}));\n};\nexports.default = Badge;\n"],"mappings":"AAAA,YAAY;;AAAC;AACb,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAMC,aAAa,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAClD,IAAMC,mBAAmB,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AACtE,IAAME,SAAS,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC5C;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,OAAO,CAAC;AAChC,IAAMI,YAAY,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAC7C,IAAMK,WAAW,GAAGb,eAAe,CAACQ,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3D;AACA,SAASM,WAAW,CAACR,KAAK,EAAE;EACxB,IAAMS,GAAG,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAACK,MAAM,GAAG;EACjC,CAAC,CAAC,EAAEL,OAAO,CAACM,SAAS,EAAE,YAAM;IACzBF,GAAG,CAACG,OAAO,GAAGZ,KAAK;EACvB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;EACb;EACA,OAAOS,GAAG,CAACG,OAAO;AACtB;AACA,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAiH;EAAA,IAA3GC,UAAU,QAAVA,UAAU;IAAEC,iBAAiB,QAAjBA,iBAAiB;IAAEC,SAAS,QAATA,SAAS;IAAA,uBAAEC,UAAU;IAAVA,UAAU,gCAAG,CAAC,CAAC,EAAEb,SAAS,CAACc,aAAa,EAAE,cAAc,CAAC;EAChH,YAA0B,CAAC,CAAC,EAAEb,OAAO,CAACc,QAAQ,GAAG;IAAA;IAA1CC,KAAK;IAAEC,QAAQ;EACtB,IAAMC,OAAO,GAAGd,WAAW,CAACO,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACQ,QAAQ,EAAE,CAAC;EAC/H,IAAMC,UAAU,GAAGhB,WAAW,CAACQ,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACO,QAAQ,EAAE,CAAC;EAC1G,IAAME,eAAe,GAAGjB,WAAW,CAACS,UAAU,CAAC;EAC/C,CAAC,CAAC,EAAEZ,OAAO,CAACM,SAAS,EAAE,YAAM;IACzB;IACA;IACA,IAAI,CAACI,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACQ,QAAQ,EAAE,MAAMD,OAAO,IAChH,CAACN,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACO,QAAQ,EAAE,MAAMC,UAAU,IAC3FP,UAAU,KAAKQ,eAAe,EAAE;MAChC,IAAMC,oBAAoB,GAAGZ,UAAU,IAAI,CAAC,CAAC,EAAER,YAAY,CAACqB,mBAAmB,EAAEV,UAAU,CAAC;MAC5F;MACA,CAAC,CAAC,EAAEd,mBAAmB,CAACyB,gBAAgB,EAAEF,oBAAoB,EAAEV,SAAS,EAAED,iBAAiB,CAAC,CAACc,IAAI,CAAC,UAACC,EAAE;QAAA,OAAKT,QAAQ,CAACS,EAAE,IAAIC,SAAS,CAAC;MAAA,EAAC;IACzI;EACJ,CAAC,EAAE,CAAChB,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACQ,QAAQ,EAAE,EAAEP,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACO,QAAQ,EAAE,EAAEN,UAAU,EAAEH,UAAU,CAAC,CAAC;EAC5M,OAAO,CAACM,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACY,KAAK,MAAM7B,mBAAmB,CAAC8B,KAAK,CAACC,MAAM,GAAI,CAAC,CAAC,EAAEjC,aAAa,CAACkC,GAAG,EAAE,GAAG,EAAEtC,MAAM,CAACuC,MAAM,CAAC;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,MAAM,EAAE,QAAQ;IAAEC,GAAG,EAAE,YAAY;IAAE,aAAa,EAAE;EAAY,CAAC,EAAE;IAAEC,QAAQ,EAAE,CAAC,CAAC,EAAEvC,aAAa,CAACkC,GAAG,EAAE5B,WAAW,CAACkC,OAAO,EAAE,CAAC,CAAC;EAAE,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,EAAExC,aAAa,CAACkC,GAAG,EAAElC,aAAa,CAACyC,QAAQ,EAAE,CAAC,CAAC,CAAE;AACpX,CAAC;AACD3C,OAAO,CAAC0C,OAAO,GAAG5B,KAAK"},"metadata":{},"sourceType":"script"}