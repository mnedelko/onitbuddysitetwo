{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletSignMessageError, WalletSignTransactionError, WalletTimeoutError, WalletWindowBlockedError, WalletWindowClosedError } from '@solana/wallet-adapter-base';\nexport var SolletWalletAdapter = /*#__PURE__*/function (_BaseMessageSignerWal) {\n  _inherits(SolletWalletAdapter, _BaseMessageSignerWal);\n  var _super = _createSuper(SolletWalletAdapter);\n  function SolletWalletAdapter() {\n    var _this;\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, SolletWalletAdapter);\n    _this = _super.call(this);\n    _this._disconnected = function () {\n      var wallet = _this._wallet;\n      if (wallet) {\n        wallet.off('disconnect', _this._disconnected);\n        _this._wallet = null;\n        _this.emit('error', new WalletDisconnectedError());\n        _this.emit('disconnect');\n      }\n    };\n    _this._provider = config.provider || (typeof window === 'undefined' ? undefined : window.sollet);\n    _this._network = config.network || WalletAdapterNetwork.Mainnet;\n    _this._connecting = false;\n    _this._wallet = null;\n    if (!_this.ready) pollUntilReady(_assertThisInitialized(_this), config.pollInterval || 1000, config.pollCount || 3);\n    return _this;\n  }\n  _createClass(SolletWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      var _a;\n      return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      var _a;\n      return typeof this._provider === 'string' || typeof window !== 'undefined' && typeof ((_a = window.sollet) === null || _a === void 0 ? void 0 : _a.postMessage) === 'function';\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var provider, wallet, handleDisconnect, timeout, interval;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                this._connecting = true;\n                provider = this._provider || typeof window !== 'undefined' && window.sollet;\n                if (provider) {\n                  _context.next = 7;\n                  break;\n                }\n                throw new WalletNotFoundError();\n              case 7:\n                _context.prev = 7;\n                wallet = new Wallet(provider, this._network);\n                // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup or extension is closed or blocked\n                handleDisconnect = wallet.handleDisconnect;\n                _context.prev = 10;\n                _context.next = 13;\n                return new Promise(function (resolve, reject) {\n                  var connect = function connect() {\n                    if (timeout) clearTimeout(timeout);\n                    wallet.off('connect', connect);\n                    resolve();\n                  };\n                  wallet.handleDisconnect = function () {\n                    wallet.off('connect', connect);\n                    reject(new WalletWindowClosedError());\n                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                      args[_key] = arguments[_key];\n                    }\n                    return handleDisconnect.apply(wallet, args);\n                  };\n                  wallet.on('connect', connect);\n                  wallet.connect().catch(function (reason) {\n                    wallet.off('connect', connect);\n                    reject(reason);\n                  });\n                  if (typeof provider === 'string') {\n                    var count = 0;\n                    interval = setInterval(function () {\n                      var popup = wallet._popup;\n                      if (popup) {\n                        if (popup.closed) reject(new WalletWindowClosedError());\n                      } else {\n                        if (count > 50) reject(new WalletWindowBlockedError());\n                      }\n                      count++;\n                    }, 100);\n                  } else {\n                    // HACK: sol-wallet-adapter doesn't reject or emit an event if the extension is closed or ignored\n                    timeout = setTimeout(function () {\n                      return reject(new WalletTimeoutError());\n                    }, 10000);\n                  }\n                });\n              case 13:\n                _context.prev = 13;\n                wallet.handleDisconnect = handleDisconnect;\n                if (interval) clearInterval(interval);\n                return _context.finish(13);\n              case 17:\n                _context.next = 24;\n                break;\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](7);\n                if (!(_context.t0 instanceof WalletError)) {\n                  _context.next = 23;\n                  break;\n                }\n                throw _context.t0;\n              case 23:\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n              case 24:\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this.emit('connect');\n                _context.next = 33;\n                break;\n              case 29:\n                _context.prev = 29;\n                _context.t1 = _context[\"catch\"](0);\n                this.emit('error', _context.t1);\n                throw _context.t1;\n              case 33:\n                _context.prev = 33;\n                this._connecting = false;\n                return _context.finish(33);\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 29, 33, 36], [7, 19], [10,, 13, 17]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var wallet, handleDisconnect;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n                if (!wallet) {\n                  _context2.next = 16;\n                  break;\n                }\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                // HACK: sol-wallet-adapter doesn't reliably fulfill its promise or emit an event on disconnect\n                handleDisconnect = wallet.handleDisconnect;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return new Promise(function (resolve, reject) {\n                  var timeout = setTimeout(function () {\n                    return resolve();\n                  }, 250);\n                  wallet.handleDisconnect = function () {\n                    clearTimeout(timeout);\n                    resolve();\n                    // HACK: sol-wallet-adapter rejects with an uncaught promise error\n                    wallet._responsePromises = new Map();\n                    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                      args[_key2] = arguments[_key2];\n                    }\n                    return handleDisconnect.apply(wallet, args);\n                  };\n                  wallet.disconnect().then(function () {\n                    clearTimeout(timeout);\n                    resolve();\n                  }, function (error) {\n                    clearTimeout(timeout);\n                    // HACK: sol-wallet-adapter rejects with an error on disconnect\n                    if ((error === null || error === void 0 ? void 0 : error.message) === 'Wallet disconnected') {\n                      resolve();\n                    } else {\n                      reject(error);\n                    }\n                  });\n                });\n              case 8:\n                _context2.next = 13;\n                break;\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.emit('error', new WalletDisconnectionError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0));\n              case 13:\n                _context2.prev = 13;\n                wallet.handleDisconnect = handleDisconnect;\n                return _context2.finish(13);\n              case 16:\n                this.emit('disconnect');\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 10, 13, 16]]);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var wallet;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return wallet.signTransaction(transaction);\n              case 7:\n                _context3.t0 = _context3.sent;\n                if (_context3.t0) {\n                  _context3.next = 10;\n                  break;\n                }\n                _context3.t0 = transaction;\n              case 10:\n                return _context3.abrupt(\"return\", _context3.t0);\n              case 13:\n                _context3.prev = 13;\n                _context3.t1 = _context3[\"catch\"](4);\n                throw new WalletSignTransactionError(_context3.t1 === null || _context3.t1 === void 0 ? void 0 : _context3.t1.message, _context3.t1);\n              case 16:\n                _context3.next = 22;\n                break;\n              case 18:\n                _context3.prev = 18;\n                _context3.t2 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t2);\n                throw _context3.t2;\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var wallet;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context4.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context4.prev = 4;\n                _context4.next = 7;\n                return wallet.signAllTransactions(transactions);\n              case 7:\n                _context4.t0 = _context4.sent;\n                if (_context4.t0) {\n                  _context4.next = 10;\n                  break;\n                }\n                _context4.t0 = transactions;\n              case 10:\n                return _context4.abrupt(\"return\", _context4.t0);\n              case 13:\n                _context4.prev = 13;\n                _context4.t1 = _context4[\"catch\"](4);\n                throw new WalletSignTransactionError(_context4.t1 === null || _context4.t1 === void 0 ? void 0 : _context4.t1.message, _context4.t1);\n              case 16:\n                _context4.next = 22;\n                break;\n              case 18:\n                _context4.prev = 18;\n                _context4.t2 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t2);\n                throw _context4.t2;\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var wallet, _yield$wallet$sign, signature;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context5.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context5.prev = 4;\n                _context5.next = 7;\n                return wallet.sign(message, 'utf8');\n              case 7:\n                _yield$wallet$sign = _context5.sent;\n                signature = _yield$wallet$sign.signature;\n                return _context5.abrupt(\"return\", Uint8Array.from(signature));\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](4);\n                throw new WalletSignMessageError(_context5.t0 === null || _context5.t0 === void 0 ? void 0 : _context5.t0.message, _context5.t0);\n              case 15:\n                _context5.next = 21;\n                break;\n              case 17:\n                _context5.prev = 17;\n                _context5.t1 = _context5[\"catch\"](0);\n                this.emit('error', _context5.t1);\n                throw _context5.t1;\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 17], [4, 12]]);\n      }));\n    }\n  }]);\n  return SolletWalletAdapter;\n}(BaseMessageSignerWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletSignMessageError, WalletSignTransactionError, WalletTimeoutError, WalletWindowBlockedError, WalletWindowClosedError, } from '@solana/wallet-adapter-base';\nexport class SolletWalletAdapter extends BaseMessageSignerWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._disconnected = () => {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this.emit('error', new WalletDisconnectedError());\n                this.emit('disconnect');\n            }\n        };\n        this._provider = config.provider || (typeof window === 'undefined' ? undefined : window.sollet);\n        this._network = config.network || WalletAdapterNetwork.Mainnet;\n        this._connecting = false;\n        this._wallet = null;\n        if (!this.ready)\n            pollUntilReady(this, config.pollInterval || 1000, config.pollCount || 3);\n    }\n    get publicKey() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n    }\n    get ready() {\n        var _a;\n        return (typeof this._provider === 'string' ||\n            (typeof window !== 'undefined' && typeof ((_a = window.sollet) === null || _a === void 0 ? void 0 : _a.postMessage) === 'function'));\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                const provider = this._provider || (typeof window !== 'undefined' && window.sollet);\n                if (!provider)\n                    throw new WalletNotFoundError();\n                let wallet;\n                try {\n                    wallet = new Wallet(provider, this._network);\n                    // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup or extension is closed or blocked\n                    const handleDisconnect = wallet.handleDisconnect;\n                    let timeout;\n                    let interval;\n                    try {\n                        yield new Promise((resolve, reject) => {\n                            const connect = () => {\n                                if (timeout)\n                                    clearTimeout(timeout);\n                                wallet.off('connect', connect);\n                                resolve();\n                            };\n                            wallet.handleDisconnect = (...args) => {\n                                wallet.off('connect', connect);\n                                reject(new WalletWindowClosedError());\n                                return handleDisconnect.apply(wallet, args);\n                            };\n                            wallet.on('connect', connect);\n                            wallet.connect().catch((reason) => {\n                                wallet.off('connect', connect);\n                                reject(reason);\n                            });\n                            if (typeof provider === 'string') {\n                                let count = 0;\n                                interval = setInterval(() => {\n                                    const popup = wallet._popup;\n                                    if (popup) {\n                                        if (popup.closed)\n                                            reject(new WalletWindowClosedError());\n                                    }\n                                    else {\n                                        if (count > 50)\n                                            reject(new WalletWindowBlockedError());\n                                    }\n                                    count++;\n                                }, 100);\n                            }\n                            else {\n                                // HACK: sol-wallet-adapter doesn't reject or emit an event if the extension is closed or ignored\n                                timeout = setTimeout(() => reject(new WalletTimeoutError()), 10000);\n                            }\n                        });\n                    }\n                    finally {\n                        wallet.handleDisconnect = handleDisconnect;\n                        if (interval)\n                            clearInterval(interval);\n                    }\n                }\n                catch (error) {\n                    if (error instanceof WalletError)\n                        throw error;\n                    throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                // HACK: sol-wallet-adapter doesn't reliably fulfill its promise or emit an event on disconnect\n                const handleDisconnect = wallet.handleDisconnect;\n                try {\n                    yield new Promise((resolve, reject) => {\n                        const timeout = setTimeout(() => resolve(), 250);\n                        wallet.handleDisconnect = (...args) => {\n                            clearTimeout(timeout);\n                            resolve();\n                            // HACK: sol-wallet-adapter rejects with an uncaught promise error\n                            wallet._responsePromises = new Map();\n                            return handleDisconnect.apply(wallet, args);\n                        };\n                        wallet.disconnect().then(() => {\n                            clearTimeout(timeout);\n                            resolve();\n                        }, (error) => {\n                            clearTimeout(timeout);\n                            // HACK: sol-wallet-adapter rejects with an error on disconnect\n                            if ((error === null || error === void 0 ? void 0 : error.message) === 'Wallet disconnected') {\n                                resolve();\n                            }\n                            else {\n                                reject(error);\n                            }\n                        });\n                    });\n                }\n                catch (error) {\n                    this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n                }\n                finally {\n                    wallet.handleDisconnect = handleDisconnect;\n                }\n            }\n            this.emit('disconnect');\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return (yield wallet.signTransaction(transaction)) || transaction;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return (yield wallet.signAllTransactions(transactions)) || transactions;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    const { signature } = yield wallet.sign(message, 'utf8');\n                    return Uint8Array.from(signature);\n                }\n                catch (error) {\n                    throw new WalletSignMessageError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}