{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = require(\"react\");\nvar logger_1 = __importDefault(require(\"../logger\"));\nvar useWalletHooks_1 = __importDefault(require(\"./useWalletHooks\"));\nvar useGatekeeper = function useGatekeeper(_ref, state, dispatch) {\n  var wallet = _ref.wallet,\n    stage = _ref.stage,\n    gatekeeperClient = _ref.gatekeeperClient;\n  var _ref2 = (0, useWalletHooks_1.default)(wallet, state, dispatch),\n    expectWalletConnected = _ref2.expectWalletConnected;\n  var gatekeeperNetworkAddress = state.gatekeeperNetworkAddress,\n    ownerSigns = state.ownerSigns;\n  /**\n   * if a request is not already in progress, initiate a request to the gatekeeper for a new token\n   * and dispatch an event so we know it's in progress\n   */\n  var waitForGatekeeperIssuanceRequest = (0, react_1.useCallback)(\n  /*#__PURE__*/\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref3) {\n      var payload, proof, connectedWallet, requestGatewayTokenFromGatekeeperResult, transaction;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = _ref3.payload, proof = _ref3.proof;\n              connectedWallet = expectWalletConnected();\n              logger_1.default.debug('waitForGatekeeperIssuanceRequest ready to call requestGatewayTokenFromGatekeeper', {\n                payload: payload\n              });\n              dispatch({\n                type: 'requestGatekeeperIssuance'\n              });\n              _context.next = 6;\n              return gatekeeperClient().requestGatewayTokenFromGatekeeper({\n                wallet: connectedWallet,\n                payload: payload,\n                proof: proof,\n                ownerSigns: ownerSigns !== null && ownerSigns !== void 0 ? ownerSigns : false\n              });\n            case 6:\n              requestGatewayTokenFromGatekeeperResult = _context.sent;\n              logger_1.default.debug('requestGatewayTokenFromGatekeeperResult', requestGatewayTokenFromGatekeeperResult);\n              if (!(requestGatewayTokenFromGatekeeperResult.status >= 400)) {\n                _context.next = 12;\n                break;\n              }\n              logger_1.default.error('Error requesting token from gatekeeper');\n              dispatch({\n                type: 'requestGatekeeperIssuanceFailed'\n              });\n              throw new Error('Error requesting token from gatekeeper');\n            case 12:\n              transaction = requestGatewayTokenFromGatekeeperResult.transaction;\n              logger_1.default.debug('Successfully requested gatekeeper token');\n              dispatch({\n                type: 'requestGatekeeperIssuanceComplete',\n                gatewayTokenTransaction: transaction\n              });\n              return _context.abrupt(\"return\", transaction);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [gatekeeperClient, expectWalletConnected, stage, ownerSigns]);\n  /**\n   * Update the state when the Gatekeeper network changes\n   */\n  (0, react_1.useEffect)(function () {\n    if (wallet && wallet.publicKey && gatekeeperNetworkAddress) {\n      dispatch({\n        type: 'gatekeeperNetworkChanged',\n        gatekeeperNetworkAddress: gatekeeperNetworkAddress\n      });\n    }\n  }, [gatekeeperNetworkAddress]);\n  return {\n    waitForGatekeeperIssuanceRequest: waitForGatekeeperIssuanceRequest,\n    gatekeeperClient: gatekeeperClient\n  };\n};\nexports.default = useGatekeeper;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","logger_1","useWalletHooks_1","useGatekeeper","state","dispatch","wallet","stage","gatekeeperClient","default","expectWalletConnected","gatekeeperNetworkAddress","ownerSigns","waitForGatekeeperIssuanceRequest","useCallback","payload","proof","connectedWallet","debug","type","requestGatewayTokenFromGatekeeper","requestGatewayTokenFromGatekeeperResult","status","error","Error","transaction","gatewayTokenTransaction","useEffect","publicKey"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@civic/common-gateway-react/dist/esm/useHooks/useGatekeeper.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst useWalletHooks_1 = __importDefault(require(\"./useWalletHooks\"));\nconst useGatekeeper = ({ wallet, stage, gatekeeperClient, }, state, dispatch) => {\n    const { expectWalletConnected } = (0, useWalletHooks_1.default)(wallet, state, dispatch);\n    const { gatekeeperNetworkAddress, ownerSigns } = state;\n    /**\n     * if a request is not already in progress, initiate a request to the gatekeeper for a new token\n     * and dispatch an event so we know it's in progress\n     */\n    const waitForGatekeeperIssuanceRequest = (0, react_1.useCallback)(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    async ({ payload, proof }) => {\n        const connectedWallet = expectWalletConnected();\n        logger_1.default.debug('waitForGatekeeperIssuanceRequest ready to call requestGatewayTokenFromGatekeeper', {\n            payload,\n        });\n        dispatch({ type: 'requestGatekeeperIssuance' });\n        const requestGatewayTokenFromGatekeeperResult = await gatekeeperClient().requestGatewayTokenFromGatekeeper({\n            wallet: connectedWallet,\n            payload,\n            proof,\n            ownerSigns: ownerSigns !== null && ownerSigns !== void 0 ? ownerSigns : false,\n        });\n        logger_1.default.debug('requestGatewayTokenFromGatekeeperResult', requestGatewayTokenFromGatekeeperResult);\n        if (requestGatewayTokenFromGatekeeperResult.status >= 400) {\n            logger_1.default.error('Error requesting token from gatekeeper');\n            dispatch({ type: 'requestGatekeeperIssuanceFailed' });\n            throw new Error('Error requesting token from gatekeeper');\n        }\n        const { transaction } = requestGatewayTokenFromGatekeeperResult;\n        logger_1.default.debug('Successfully requested gatekeeper token');\n        dispatch({ type: 'requestGatekeeperIssuanceComplete', gatewayTokenTransaction: transaction });\n        return transaction;\n    }, [gatekeeperClient, expectWalletConnected, stage, ownerSigns]);\n    /**\n     * Update the state when the Gatekeeper network changes\n     */\n    (0, react_1.useEffect)(() => {\n        if (wallet && wallet.publicKey && gatekeeperNetworkAddress) {\n            dispatch({ type: 'gatekeeperNetworkChanged', gatekeeperNetworkAddress });\n        }\n    }, [gatekeeperNetworkAddress]);\n    return {\n        waitForGatekeeperIssuanceRequest,\n        gatekeeperClient,\n    };\n};\nexports.default = useGatekeeper;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}