{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nvar Wallet = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Wallet, _EventEmitter);\n  var _super = _createSuper(Wallet);\n  function Wallet(provider, _network) {\n    var _this;\n    _classCallCheck(this, Wallet);\n    _this = _super.call(this);\n    _this._network = _network;\n    _this._publicKey = null;\n    _this._popup = null;\n    _this._handlerAdded = false;\n    _this._nextRequestId = 1;\n    _this._autoApprove = false;\n    _this._responsePromises = new Map();\n    _this.handleMessage = function (e) {\n      var _a;\n      if (_this._injectedProvider && e.source === window || e.origin === ((_a = _this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === _this._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n          if (!_this._publicKey || !_this._publicKey.equals(newPublicKey)) {\n            if (_this._publicKey && !_this._publicKey.equals(newPublicKey)) {\n              _this.handleDisconnect();\n            }\n            _this._publicKey = newPublicKey;\n            _this._autoApprove = !!e.data.params.autoApprove;\n            _this.emit('connect', _this._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this.handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          var promises = _this._responsePromises.get(e.data.id);\n          if (promises) {\n            var _promises = _slicedToArray(promises, 2),\n              resolve = _promises[0],\n              reject = _promises[1];\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n    _this._beforeUnload = function () {\n      void _this.disconnect();\n    };\n    if (isInjectedProvider(provider)) {\n      _this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      _this._providerUrl = new URL(provider);\n      _this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: _this._network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n    return _this;\n  }\n  _createClass(Wallet, [{\n    key: \"handleConnect\",\n    value: function handleConnect() {\n      var _this2 = this;\n      var _a;\n      if (!this._handlerAdded) {\n        this._handlerAdded = true;\n        window.addEventListener('message', this.handleMessage);\n        window.addEventListener('beforeunload', this._beforeUnload);\n      }\n      if (this._injectedProvider) {\n        return new Promise(function (resolve) {\n          void _this2.sendRequest('connect', {});\n          resolve();\n        });\n      } else {\n        window.name = 'parent';\n        this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n        return new Promise(function (resolve) {\n          _this2.once('connect', resolve);\n        });\n      }\n    }\n  }, {\n    key: \"handleDisconnect\",\n    value: function handleDisconnect() {\n      var _this3 = this;\n      if (this._handlerAdded) {\n        this._handlerAdded = false;\n        window.removeEventListener('message', this.handleMessage);\n        window.removeEventListener('beforeunload', this._beforeUnload);\n      }\n      if (this._publicKey) {\n        this._publicKey = null;\n        this.emit('disconnect');\n      }\n      this._responsePromises.forEach(function (_ref, id) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          reject = _ref2[1];\n        _this3._responsePromises.delete(id);\n        reject(new Error('Wallet disconnected'));\n      });\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(method, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this4 = this;\n        var requestId;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(method !== 'connect' && !this.connected)) {\n                  _context.next = 2;\n                  break;\n                }\n                throw new Error('Wallet not connected');\n              case 2:\n                requestId = this._nextRequestId;\n                ++this._nextRequestId;\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var _a, _b, _c, _d;\n                  _this4._responsePromises.set(requestId, [resolve, reject]);\n                  if (_this4._injectedProvider) {\n                    _this4._injectedProvider.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: Object.assign({\n                        network: _this4._network\n                      }, params)\n                    });\n                  } else {\n                    (_a = _this4._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: params\n                    }, (_c = (_b = _this4._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n                    if (!_this4.autoApprove) {\n                      (_d = _this4._popup) === null || _d === void 0 ? void 0 : _d.focus();\n                    }\n                  }\n                }));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return this._autoApprove;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._popup) {\n                  this._popup.close();\n                }\n                _context2.next = 3;\n                return this.handleConnect();\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this._injectedProvider) {\n                  _context3.next = 3;\n                  break;\n                }\n                _context3.next = 3;\n                return this.sendRequest('disconnect', {});\n              case 3:\n                if (this._popup) {\n                  this._popup.close();\n                }\n                this.handleDisconnect();\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(data, display) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, signature, publicKey;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (data instanceof Uint8Array) {\n                  _context4.next = 2;\n                  break;\n                }\n                throw new Error('Data must be an instance of Uint8Array');\n              case 2:\n                _context4.next = 4;\n                return this.sendRequest('sign', {\n                  data: data,\n                  display: display\n                });\n              case 4:\n                response = _context4.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                return _context4.abrupt(\"return\", {\n                  signature: signature,\n                  publicKey: publicKey\n                });\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, signature, publicKey;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.sendRequest('signTransaction', {\n                  message: bs58.encode(transaction.serializeMessage())\n                });\n              case 2:\n                response = _context5.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                transaction.addSignature(publicKey, signature);\n                return _context5.abrupt(\"return\", transaction);\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response, signatures, publicKey;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.sendRequest('signAllTransactions', {\n                  messages: transactions.map(function (tx) {\n                    return bs58.encode(tx.serializeMessage());\n                  })\n                });\n              case 2:\n                response = _context6.sent;\n                signatures = response.signatures.map(function (s) {\n                  return bs58.decode(s);\n                });\n                publicKey = new PublicKey(response.publicKey);\n                transactions = transactions.map(function (tx, idx) {\n                  tx.addSignature(publicKey, signatures[idx]);\n                  return tx;\n                });\n                return _context6.abrupt(\"return\", transactions);\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"diffieHellman\",\n    value: function diffieHellman(publicKey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (publicKey instanceof Uint8Array) {\n                  _context7.next = 2;\n                  break;\n                }\n                throw new Error('Data must be an instance of Uint8Array');\n              case 2:\n                _context7.next = 4;\n                return this.sendRequest('diffieHellman', {\n                  publicKey: publicKey\n                });\n              case 4:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response);\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }]);\n  return Wallet;\n}(EventEmitter);\nexport { Wallet as default };\nfunction isString(a) {\n  return typeof a === 'string';\n}\nfunction isInjectedProvider(a) {\n  return isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function';\n}\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport default class Wallet extends EventEmitter {\n    constructor(provider, _network) {\n        super();\n        this._network = _network;\n        this._publicKey = null;\n        this._popup = null;\n        this._handlerAdded = false;\n        this._nextRequestId = 1;\n        this._autoApprove = false;\n        this._responsePromises = new Map();\n        this.handleMessage = (e) => {\n            var _a;\n            if ((this._injectedProvider && e.source === window) ||\n                (e.origin === ((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === this._popup)) {\n                if (e.data.method === 'connected') {\n                    const newPublicKey = new PublicKey(e.data.params.publicKey);\n                    if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n                        if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n                            this.handleDisconnect();\n                        }\n                        this._publicKey = newPublicKey;\n                        this._autoApprove = !!e.data.params.autoApprove;\n                        this.emit('connect', this._publicKey);\n                    }\n                }\n                else if (e.data.method === 'disconnected') {\n                    this.handleDisconnect();\n                }\n                else if (e.data.result || e.data.error) {\n                    const promises = this._responsePromises.get(e.data.id);\n                    if (promises) {\n                        const [resolve, reject] = promises;\n                        if (e.data.result) {\n                            resolve(e.data.result);\n                        }\n                        else {\n                            reject(new Error(e.data.error));\n                        }\n                    }\n                }\n            }\n        };\n        this._beforeUnload = () => {\n            void this.disconnect();\n        };\n        if (isInjectedProvider(provider)) {\n            this._injectedProvider = provider;\n        }\n        else if (isString(provider)) {\n            this._providerUrl = new URL(provider);\n            this._providerUrl.hash = new URLSearchParams({\n                origin: window.location.origin,\n                network: this._network,\n            }).toString();\n        }\n        else {\n            throw new Error('provider parameter must be an injected provider or a URL string.');\n        }\n    }\n    handleConnect() {\n        var _a;\n        if (!this._handlerAdded) {\n            this._handlerAdded = true;\n            window.addEventListener('message', this.handleMessage);\n            window.addEventListener('beforeunload', this._beforeUnload);\n        }\n        if (this._injectedProvider) {\n            return new Promise((resolve) => {\n                void this.sendRequest('connect', {});\n                resolve();\n            });\n        }\n        else {\n            window.name = 'parent';\n            this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n            return new Promise((resolve) => {\n                this.once('connect', resolve);\n            });\n        }\n    }\n    handleDisconnect() {\n        if (this._handlerAdded) {\n            this._handlerAdded = false;\n            window.removeEventListener('message', this.handleMessage);\n            window.removeEventListener('beforeunload', this._beforeUnload);\n        }\n        if (this._publicKey) {\n            this._publicKey = null;\n            this.emit('disconnect');\n        }\n        this._responsePromises.forEach(([, reject], id) => {\n            this._responsePromises.delete(id);\n            reject(new Error('Wallet disconnected'));\n        });\n    }\n    sendRequest(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (method !== 'connect' && !this.connected) {\n                throw new Error('Wallet not connected');\n            }\n            const requestId = this._nextRequestId;\n            ++this._nextRequestId;\n            return new Promise((resolve, reject) => {\n                var _a, _b, _c, _d;\n                this._responsePromises.set(requestId, [resolve, reject]);\n                if (this._injectedProvider) {\n                    this._injectedProvider.postMessage({\n                        jsonrpc: '2.0',\n                        id: requestId,\n                        method,\n                        params: Object.assign({ network: this._network }, params),\n                    });\n                }\n                else {\n                    (_a = this._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n                        jsonrpc: '2.0',\n                        id: requestId,\n                        method,\n                        params,\n                    }, (_c = (_b = this._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n                    if (!this.autoApprove) {\n                        (_d = this._popup) === null || _d === void 0 ? void 0 : _d.focus();\n                    }\n                }\n            });\n        });\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get connected() {\n        return this._publicKey !== null;\n    }\n    get autoApprove() {\n        return this._autoApprove;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._popup) {\n                this._popup.close();\n            }\n            yield this.handleConnect();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._injectedProvider) {\n                yield this.sendRequest('disconnect', {});\n            }\n            if (this._popup) {\n                this._popup.close();\n            }\n            this.handleDisconnect();\n        });\n    }\n    sign(data, display) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(data instanceof Uint8Array)) {\n                throw new Error('Data must be an instance of Uint8Array');\n            }\n            const response = (yield this.sendRequest('sign', {\n                data,\n                display,\n            }));\n            const signature = bs58.decode(response.signature);\n            const publicKey = new PublicKey(response.publicKey);\n            return {\n                signature,\n                publicKey,\n            };\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield this.sendRequest('signTransaction', {\n                message: bs58.encode(transaction.serializeMessage()),\n            }));\n            const signature = bs58.decode(response.signature);\n            const publicKey = new PublicKey(response.publicKey);\n            transaction.addSignature(publicKey, signature);\n            return transaction;\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield this.sendRequest('signAllTransactions', {\n                messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n            }));\n            const signatures = response.signatures.map((s) => bs58.decode(s));\n            const publicKey = new PublicKey(response.publicKey);\n            transactions = transactions.map((tx, idx) => {\n                tx.addSignature(publicKey, signatures[idx]);\n                return tx;\n            });\n            return transactions;\n        });\n    }\n    diffieHellman(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(publicKey instanceof Uint8Array)) {\n                throw new Error('Data must be an instance of Uint8Array');\n            }\n            const response = (yield this.sendRequest('diffieHellman', {\n                publicKey,\n            }));\n            return response;\n        });\n    }\n}\nfunction isString(a) {\n    return typeof a === 'string';\n}\nfunction isInjectedProvider(a) {\n    return (isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function');\n}\nfunction isObject(a) {\n    return typeof a === 'object' && a !== null;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}