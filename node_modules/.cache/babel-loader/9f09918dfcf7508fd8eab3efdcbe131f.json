{"ast":null,"code":"import _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport dates from './dates';\n// assumes both are supported or none\nvar supportStyles = false;\nnew Intl.DateTimeFormat(undefined, {\n  // @ts-ignore\n  get dateStyle() {\n    supportStyles = true;\n  }\n});\nvar dateShort = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar timeShort = {\n  hour: 'numeric',\n  minute: 'numeric'\n};\nvar getFormatter = function getFormatter(culture, options) {\n  return Intl.DateTimeFormat(culture, options).format;\n};\n/**\n * A `react-widgets` Localizer using native `Intl` APIs.\n *\n */\nvar IntlDateLocalizer = /*#__PURE__*/function () {\n  function IntlDateLocalizer() {\n    var _this = this;\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$culture = _ref.culture,\n      culture = _ref$culture === void 0 ? undefined : _ref$culture,\n      _ref$firstOfWeek = _ref.firstOfWeek,\n      firstOfWeek = _ref$firstOfWeek === void 0 ? 0 : _ref$firstOfWeek;\n    _classCallCheck(this, IntlDateLocalizer);\n    this.culture = culture;\n    this.firstOfWeek = function () {\n      return firstOfWeek;\n    };\n    function normalizeFormat(date, format) {\n      return typeof format === 'function' ? format(date, culture) : date.toLocaleString(culture, format);\n    }\n    var formats = {\n      date: getFormatter(culture,\n      // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short'\n      } : dateShort),\n      time: getFormatter(culture,\n      // @ts-ignore\n      supportStyles ? {\n        timeStyle: 'short'\n      } : timeShort),\n      datetime: getFormatter(culture,\n      // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      } : Object.assign({}, dateShort, timeShort)),\n      header: getFormatter(culture, {\n        month: 'short',\n        year: 'numeric'\n      }),\n      weekday: getFormatter(culture, {\n        weekday: 'narrow'\n      }),\n      dayOfMonth: getFormatter(culture, {\n        day: '2-digit'\n      }),\n      month: getFormatter(culture, {\n        month: 'short'\n      }),\n      year: getFormatter(culture, {\n        year: 'numeric'\n      }),\n      decade: function decade(date) {\n        return \"\".concat(_this.year(date), \" - \").concat(_this.year(dates.endOf(date, 'decade')));\n      },\n      century: function century(date) {\n        return \"\".concat(_this.year(date), \" - \").concat(_this.year(dates.endOf(date, 'century')));\n      }\n    };\n    Object.keys(formats).forEach(function (key) {\n      _this[key] = function (date, format) {\n        return format ? normalizeFormat(date, format) : formats[key](date);\n      };\n    });\n  }\n  _createClass(IntlDateLocalizer, [{\n    key: \"toFormattedParts\",\n    value: function toFormattedParts(date) {\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      };\n      return Intl.DateTimeFormat(this.culture, format).formatToParts(date).filter(function (p) {\n        return p.type !== 'timeZoneName';\n      });\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      var date = new Date(value);\n      return isNaN(+date) ? null : date;\n    }\n  }]);\n  return IntlDateLocalizer;\n}();\n/**\n * A number localization strategy based on `Intl.NumberFormat`.\n */\nvar IntlNumberLocalizer = /*#__PURE__*/function () {\n  function IntlNumberLocalizer() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$culture = _ref2.culture,\n      culture = _ref2$culture === void 0 ? undefined : _ref2$culture;\n    _classCallCheck(this, IntlNumberLocalizer);\n    var _$toLocaleString$m;\n    this.culture = culture;\n    var decimal = 'formatToParts' in Intl.NumberFormat(culture) ? Intl.NumberFormat(culture).formatToParts(1.1)[1].value : ((_$toLocaleString$m = 1.1.toLocaleString(culture).match(/[^\\d]/)) == null ? void 0 : _$toLocaleString$m[0]) || '.';\n    var formatter = Intl.NumberFormat(culture).format;\n    this.decimalCharacter = function () {\n      return decimal;\n    };\n    this.format = function (num, format) {\n      if (format) {\n        return typeof format === 'function' ? format(num, culture) : num.toLocaleString(culture, format);\n      }\n      return formatter(num);\n    };\n  }\n  _createClass(IntlNumberLocalizer, [{\n    key: \"parse\",\n    value: function parse(value) {\n      return parseFloat(value.replace(this.decimalCharacter(), '.'));\n    }\n  }]);\n  return IntlNumberLocalizer;\n}();\nexport { IntlDateLocalizer as DateLocalizer, IntlNumberLocalizer as NumberLocalizer };","map":{"version":3,"names":["dates","supportStyles","Intl","DateTimeFormat","undefined","dateStyle","dateShort","day","month","year","timeShort","hour","minute","getFormatter","culture","options","format","IntlDateLocalizer","firstOfWeek","normalizeFormat","date","toLocaleString","formats","time","timeStyle","datetime","Object","assign","header","weekday","dayOfMonth","decade","endOf","century","keys","forEach","key","formatToParts","filter","p","type","value","Date","isNaN","IntlNumberLocalizer","_$toLocaleString$m","decimal","NumberFormat","match","formatter","decimalCharacter","num","parseFloat","replace","DateLocalizer","NumberLocalizer"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/react-widgets/esm/IntlLocalizer.js"],"sourcesContent":["import dates from './dates';\n// assumes both are supported or none\nlet supportStyles = false;\nnew Intl.DateTimeFormat(undefined, {\n  // @ts-ignore\n  get dateStyle() {\n    supportStyles = true;\n  }\n\n});\nconst dateShort = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nconst timeShort = {\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nconst getFormatter = (culture, options) => Intl.DateTimeFormat(culture, options).format;\n/**\n * A `react-widgets` Localizer using native `Intl` APIs.\n *\n */\n\n\nclass IntlDateLocalizer {\n  constructor({\n    culture = undefined,\n    firstOfWeek = 0\n  } = {}) {\n    this.culture = culture;\n\n    this.firstOfWeek = () => firstOfWeek;\n\n    function normalizeFormat(date, format) {\n      return typeof format === 'function' ? format(date, culture) : date.toLocaleString(culture, format);\n    }\n\n    const formats = {\n      date: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short'\n      } : dateShort),\n      time: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        timeStyle: 'short'\n      } : timeShort),\n      datetime: getFormatter(culture, // @ts-ignore\n      supportStyles ? {\n        dateStyle: 'short',\n        timeStyle: 'short'\n      } : Object.assign({}, dateShort, timeShort)),\n      header: getFormatter(culture, {\n        month: 'short',\n        year: 'numeric'\n      }),\n      weekday: getFormatter(culture, {\n        weekday: 'narrow'\n      }),\n      dayOfMonth: getFormatter(culture, {\n        day: '2-digit'\n      }),\n      month: getFormatter(culture, {\n        month: 'short'\n      }),\n      year: getFormatter(culture, {\n        year: 'numeric'\n      }),\n      decade: date => `${this.year(date)} - ${this.year(dates.endOf(date, 'decade'))}`,\n      century: date => `${this.year(date)} - ${this.year(dates.endOf(date, 'century'))}`\n    };\n    Object.keys(formats).forEach(key => {\n      this[key] = (date, format) => format ? normalizeFormat(date, format) : formats[key](date);\n    });\n  }\n\n  toFormattedParts(date, format = {\n    dateStyle: 'short',\n    timeStyle: 'short'\n  }) {\n    return Intl.DateTimeFormat(this.culture, format).formatToParts(date).filter(p => p.type !== 'timeZoneName');\n  }\n\n  parse(value) {\n    const date = new Date(value);\n    return isNaN(+date) ? null : date;\n  }\n\n}\n\n/**\n * A number localization strategy based on `Intl.NumberFormat`.\n */\nclass IntlNumberLocalizer {\n  constructor({\n    culture = undefined\n  } = {}) {\n    var _$toLocaleString$m;\n\n    this.culture = culture;\n    const decimal = 'formatToParts' in Intl.NumberFormat(culture) ? Intl.NumberFormat(culture).formatToParts(1.1)[1].value : ((_$toLocaleString$m = 1.1.toLocaleString(culture).match(/[^\\d]/)) == null ? void 0 : _$toLocaleString$m[0]) || '.';\n    const formatter = Intl.NumberFormat(culture).format;\n\n    this.decimalCharacter = () => decimal;\n\n    this.format = (num, format) => {\n      if (format) {\n        return typeof format === 'function' ? format(num, culture) : num.toLocaleString(culture, format);\n      }\n\n      return formatter(num);\n    };\n  }\n\n  parse(value) {\n    return parseFloat(value.replace(this.decimalCharacter(), '.'));\n  }\n\n}\n\nexport { IntlDateLocalizer as DateLocalizer, IntlNumberLocalizer as NumberLocalizer };"],"mappings":"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"},"metadata":{},"sourceType":"module"}