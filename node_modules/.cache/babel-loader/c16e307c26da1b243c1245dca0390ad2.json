{"ast":null,"code":"import _slicedToArray from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import*as anchor from'@project-serum/anchor';import{MintLayout,TOKEN_PROGRAM_ID,Token}from\"@solana/spl-token\";import{SystemProgram,SYSVAR_SLOT_HASHES_PUBKEY}from'@solana/web3.js';import{sendTransactions,SequenceType}from'./connection';import{CIVIC,getAtaForMint,getNetworkExpire,getNetworkToken,SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID}from'./utility/utils';export var CANDY_MACHINE_PROGRAM=new anchor.web3.PublicKey('cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ');var TOKEN_METADATA_PROGRAM_ID=new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');export var awaitTransactionSignatureConfirmation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(txid,timeout,connection){var queryStatus,done,status,_args3=arguments;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:queryStatus=_args3.length>3&&_args3[3]!==undefined?_args3[3]:false;done=false;status={slot:0,confirmations:0,err:null};_context3.next=5;return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resolve,reject){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setTimeout(function(){if(done){return;}done=true;//console.log('Rejecting for timeout...');\nreject({timeout:true});},timeout);case 1:if(!(!done&&queryStatus)){_context2.next=7;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var signatureStatuses;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context.sent;status=signatureStatuses&&signatureStatuses.value[0];if(!done){if(!status){//console.log('REST null result for', txid, status);\n}else if(status.err){//console.log('REST error for', txid, status);\ndone=true;reject(status.err);}else if(!status.confirmations){//console.log('REST no confirmations for', txid, status);\n}else{//console.log('REST confirmation for', txid, status);\ndone=true;resolve(status);}}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(!done){//console.log('REST connection error: txid', txid, e);\n}case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}))();_context2.next=5;return sleep(2000);case 5:_context2.next=1;break;case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5){return _ref2.apply(this,arguments);};}());case 5:status=_context3.sent;done=true;//console.log('Returning status', status);\nreturn _context3.abrupt(\"return\",status);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function awaitTransactionSignatureConfirmation(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var createAssociatedTokenAccountInstruction=function createAssociatedTokenAccountInstruction(associatedTokenAddress,payer,walletAddress,splTokenMintAddress){var keys=[{pubkey:payer,isSigner:true,isWritable:true},{pubkey:associatedTokenAddress,isSigner:false,isWritable:true},{pubkey:walletAddress,isSigner:false,isWritable:false},{pubkey:splTokenMintAddress,isSigner:false,isWritable:false},{pubkey:anchor.web3.SystemProgram.programId,isSigner:false,isWritable:false},{pubkey:TOKEN_PROGRAM_ID,isSigner:false,isWritable:false},{pubkey:anchor.web3.SYSVAR_RENT_PUBKEY,isSigner:false,isWritable:false}];return new anchor.web3.TransactionInstruction({keys:keys,programId:SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,data:Buffer.from([])});};//This is where we are identifying the right candymachine, connect to it and get its state getting the CadyMachine's state\nexport var getCandyMachineState=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(anchorWallet,candyMachineId,connection){var provider,idl,program,state,itemsAvailable,itemsRedeemed,itemsRemaining;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:provider=new anchor.Provider(connection,anchorWallet,{preflightCommitment:'processed'});_context4.next=3;return anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM,provider);case 3:idl=_context4.sent;program=new anchor.Program(idl,CANDY_MACHINE_PROGRAM,provider);_context4.next=7;return program.account.candyMachine.fetch(candyMachineId);case 7:state=_context4.sent;itemsAvailable=state.data.itemsAvailable.toNumber();itemsRedeemed=state.itemsRedeemed.toNumber();itemsRemaining=itemsAvailable-itemsRedeemed;return _context4.abrupt(\"return\",{id:candyMachineId,program:program,state:{authority:state.authority,itemsAvailable:itemsAvailable,itemsRedeemed:itemsRedeemed,itemsRemaining:itemsRemaining,isSoldOut:itemsRemaining===0,isActive:false,isPresale:false,isWhitelistOnly:false,goLiveDate:state.data.goLiveDate,treasury:state.wallet,tokenMint:state.tokenMint,gatekeeper:state.data.gatekeeper,endSettings:state.data.endSettings,whitelistMintSettings:state.data.whitelistMintSettings,hiddenSettings:state.data.hiddenSettings,price:state.data.price,retainAuthority:state.data.retainAuthority}});case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function getCandyMachineState(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var getMasterEdition=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(mint){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('edition')],TOKEN_METADATA_PROGRAM_ID);case 2:return _context5.abrupt(\"return\",_context5.sent[0]);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getMasterEdition(_x9){return _ref5.apply(this,arguments);};}();var getMetadata=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(mint){return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context6.abrupt(\"return\",_context6.sent[0]);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function getMetadata(_x10){return _ref6.apply(this,arguments);};}();export var getCandyMachineCreator=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(candyMachine){return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('candy_machine'),candyMachine.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function getCandyMachineCreator(_x11){return _ref7.apply(this,arguments);};}();export var getCollectionPDA=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(candyMachineAddress){return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('collection'),candyMachineAddress.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context8.abrupt(\"return\",_context8.sent);case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function getCollectionPDA(_x12){return _ref8.apply(this,arguments);};}();export var getCollectionAuthorityRecordPDA=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(mint,newAuthority){return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('collection_authority'),newAuthority.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context9.abrupt(\"return\",_context9.sent[0]);case 3:case\"end\":return _context9.stop();}}},_callee9);}));return function getCollectionAuthorityRecordPDA(_x13,_x14){return _ref9.apply(this,arguments);};}();export var createAccountsForMint=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(candyMachine,payer){var mint,userTokenAccountAddress,signers,instructions;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:mint=anchor.web3.Keypair.generate();_context10.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context10.sent[0];signers=[mint];_context10.t0=anchor.web3.SystemProgram;_context10.t1=payer;_context10.t2=mint.publicKey;_context10.t3=MintLayout.span;_context10.next=11;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 11:_context10.t4=_context10.sent;_context10.t5=TOKEN_PROGRAM_ID;_context10.t6={fromPubkey:_context10.t1,newAccountPubkey:_context10.t2,space:_context10.t3,lamports:_context10.t4,programId:_context10.t5};_context10.t7=_context10.t0.createAccount.call(_context10.t0,_context10.t6);_context10.t8=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context10.t9=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context10.t10=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context10.t7,_context10.t8,_context10.t9,_context10.t10];_context10.t11=mint;_context10.t12=userTokenAccountAddress;_context10.next=23;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,[instructions],[signers],SequenceType.StopOnFailure,'singleGossip',function(){},function(){return false;},undefined,[],[]);case 23:_context10.t13=_context10.sent.txs[0].txid;return _context10.abrupt(\"return\",{mint:_context10.t11,userTokenAccount:_context10.t12,transaction:_context10.t13});case 25:case\"end\":return _context10.stop();}}},_callee10);}));return function createAccountsForMint(_x15,_x16){return _ref10.apply(this,arguments);};}();export var mintOneToken=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(candyMachine,payer,mint){var beforeTransactions,afterTransactions,setupState,userTokenAccountAddress,userPayingAccountAddress,candyMachineAddress,remainingAccounts,instructions,signers,_mint,whitelistToken,metadataAddress,masterEdition,_yield$getCandyMachin,_yield$getCandyMachin2,candyMachineCreator,creatorBump,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,collectionData,collectionMint,collectionAuthorityRecord,collectionMetadata,collectionMasterEdition,instructionsMatrix,signersMatrix,txns,mintTxn,_args11=arguments;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:beforeTransactions=_args11.length>3&&_args11[3]!==undefined?_args11[3]:[];afterTransactions=_args11.length>4&&_args11[4]!==undefined?_args11[4]:[];setupState=_args11.length>5?_args11[5]:undefined;_context11.next=5;return getAtaForMint(mint.publicKey,payer);case 5:userTokenAccountAddress=_context11.sent[0];if(!candyMachine.state.tokenMint){_context11.next=12;break;}_context11.next=9;return getAtaForMint(candyMachine.state.tokenMint,payer);case 9:_context11.t0=_context11.sent[0];_context11.next=13;break;case 12:_context11.t0=payer;case 13:userPayingAccountAddress=_context11.t0;candyMachineAddress=candyMachine.id;remainingAccounts=[];instructions=[];signers=[];//console.log('SetupState: ', setupState);\nif(setupState){_context11.next=37;break;}signers.push(mint);_context11.t1=instructions.push;_context11.t2=instructions;_context11.t3=anchor.web3.SystemProgram;_context11.t4=payer;_context11.t5=mint.publicKey;_context11.t6=MintLayout.span;_context11.next=28;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 28:_context11.t7=_context11.sent;_context11.t8=TOKEN_PROGRAM_ID;_context11.t9={fromPubkey:_context11.t4,newAccountPubkey:_context11.t5,space:_context11.t6,lamports:_context11.t7,programId:_context11.t8};_context11.t10=_context11.t3.createAccount.call(_context11.t3,_context11.t9);_context11.t11=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context11.t12=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context11.t13=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);_context11.t14=[_context11.t10,_context11.t11,_context11.t12,_context11.t13];_context11.t1.apply.call(_context11.t1,_context11.t2,_context11.t14);case 37:if(!candyMachine.state.gatekeeper){_context11.next=52;break;}_context11.t15=remainingAccounts;_context11.next=41;return getNetworkToken(payer,candyMachine.state.gatekeeper.gatekeeperNetwork);case 41:_context11.t16=_context11.sent[0];_context11.t17={pubkey:_context11.t16,isWritable:true,isSigner:false};_context11.t15.push.call(_context11.t15,_context11.t17);if(!candyMachine.state.gatekeeper.expireOnUse){_context11.next=52;break;}remainingAccounts.push({pubkey:CIVIC,isWritable:false,isSigner:false});_context11.t18=remainingAccounts;_context11.next=49;return getNetworkExpire(candyMachine.state.gatekeeper.gatekeeperNetwork);case 49:_context11.t19=_context11.sent[0];_context11.t20={pubkey:_context11.t19,isWritable:false,isSigner:false};_context11.t18.push.call(_context11.t18,_context11.t20);case 52:if(!candyMachine.state.whitelistMintSettings){_context11.next=59;break;}_mint=new anchor.web3.PublicKey(candyMachine.state.whitelistMintSettings.mint);_context11.next=56;return getAtaForMint(_mint,payer);case 56:whitelistToken=_context11.sent[0];remainingAccounts.push({pubkey:whitelistToken,isWritable:true,isSigner:false});if(candyMachine.state.whitelistMintSettings.mode.burnEveryTime){remainingAccounts.push({pubkey:_mint,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:payer,isWritable:false,isSigner:true});}case 59:if(candyMachine.state.tokenMint){remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:payer,isWritable:false,isSigner:true});}_context11.next=62;return getMetadata(mint.publicKey);case 62:metadataAddress=_context11.sent;_context11.next=65;return getMasterEdition(mint.publicKey);case 65:masterEdition=_context11.sent;_context11.next=68;return getCandyMachineCreator(candyMachineAddress);case 68:_yield$getCandyMachin=_context11.sent;_yield$getCandyMachin2=_slicedToArray(_yield$getCandyMachin,2);candyMachineCreator=_yield$getCandyMachin2[0];creatorBump=_yield$getCandyMachin2[1];_context11.t21=instructions;_context11.next=75;return candyMachine.program.instruction.mintNft(creatorBump,{accounts:{candyMachine:candyMachineAddress,candyMachineCreator:candyMachineCreator,payer:payer,wallet:candyMachine.state.treasury,mint:mint.publicKey,metadata:metadataAddress,masterEdition:masterEdition,mintAuthority:payer,updateAuthority:payer,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY,recentBlockhashes:SYSVAR_SLOT_HASHES_PUBKEY,instructionSysvarAccount:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 75:_context11.t22=_context11.sent;_context11.t21.push.call(_context11.t21,_context11.t22);_context11.next=79;return getCollectionPDA(candyMachineAddress);case 79:_yield$getCollectionP=_context11.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context11.next=84;return candyMachine.program.provider.connection.getAccountInfo(collectionPDA);case 84:collectionPDAAccount=_context11.sent;if(!(collectionPDAAccount&&candyMachine.state.retainAuthority)){_context11.next=111;break;}_context11.prev=86;_context11.next=89;return candyMachine.program.account.collectionPda.fetch(collectionPDA);case 89:collectionData=_context11.sent;//console.log(collectionData);\ncollectionMint=collectionData.mint;_context11.next=93;return getCollectionAuthorityRecordPDA(collectionMint,collectionPDA);case 93:collectionAuthorityRecord=_context11.sent;if(!collectionMint){_context11.next=106;break;}_context11.next=97;return getMetadata(collectionMint);case 97:collectionMetadata=_context11.sent;_context11.next=100;return getMasterEdition(collectionMint);case 100:collectionMasterEdition=_context11.sent;_context11.t23=instructions;_context11.next=104;return candyMachine.program.instruction.setCollectionDuringMint({accounts:{candyMachine:candyMachineAddress,metadata:metadataAddress,payer:payer,collectionPda:collectionPDA,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,instructions:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,collectionMint:collectionMint,collectionMetadata:collectionMetadata,collectionMasterEdition:collectionMasterEdition,authority:candyMachine.state.authority,collectionAuthorityRecord:collectionAuthorityRecord}});case 104:_context11.t24=_context11.sent;_context11.t23.push.call(_context11.t23,_context11.t24);case 106:_context11.next=111;break;case 108:_context11.prev=108;_context11.t25=_context11[\"catch\"](86);console.error(_context11.t25);case 111:instructionsMatrix=[instructions];signersMatrix=[signers];_context11.prev=113;_context11.next=116;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,instructionsMatrix,signersMatrix,SequenceType.StopOnFailure,'singleGossip',function(){},function(){return false;},undefined,beforeTransactions,afterTransactions);case 116:txns=_context11.sent.txs.map(function(t){return t.txid;});mintTxn=txns[0];return _context11.abrupt(\"return\",{mintTxId:mintTxn,metadataKey:metadataAddress});case 121:_context11.prev=121;_context11.t26=_context11[\"catch\"](113);console.log(_context11.t26);case 124:return _context11.abrupt(\"return\",null);case 125:case\"end\":return _context11.stop();}}},_callee11,null,[[86,108],[113,121]]);}));return function mintOneToken(_x17,_x18,_x19){return _ref11.apply(this,arguments);};}();export var shortenAddress=function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"names":["anchor","MintLayout","TOKEN_PROGRAM_ID","Token","SystemProgram","SYSVAR_SLOT_HASHES_PUBKEY","sendTransactions","SequenceType","CIVIC","getAtaForMint","getNetworkExpire","getNetworkToken","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CANDY_MACHINE_PROGRAM","web3","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","queryStatus","done","status","slot","confirmations","err","Promise","resolve","reject","setTimeout","getSignatureStatuses","signatureStatuses","value","sleep","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","Provider","preflightCommitment","Program","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","authority","isSoldOut","isActive","isPresale","isWhitelistOnly","goLiveDate","treasury","wallet","tokenMint","gatekeeper","endSettings","whitelistMintSettings","hiddenSettings","price","retainAuthority","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","getCollectionPDA","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","createAccountsForMint","Keypair","generate","publicKey","userTokenAccountAddress","signers","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","instructions","StopOnFailure","undefined","txs","userTokenAccount","transaction","mintOneToken","beforeTransactions","afterTransactions","setupState","userPayingAccountAddress","remainingAccounts","push","gatekeeperNetwork","expireOnUse","whitelistToken","mode","burnEveryTime","metadataAddress","masterEdition","candyMachineCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","collectionPDA","getAccountInfo","collectionPDAAccount","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","console","error","instructionsMatrix","signersMatrix","txns","map","t","mintTxn","mintTxId","metadataKey","log","shortenAddress","address","chars","slice","ms"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/src/candy-machine.ts"],"sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\nimport { \n  SystemProgram,\n  Transaction,\n  SYSVAR_SLOT_HASHES_PUBKEY,\n } from '@solana/web3.js';\nimport { sendTransactions, SequenceType } from './connection';\n\nimport {\n  CIVIC,\n  getAtaForMint,\n  getNetworkExpire,\n  getNetworkToken,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utility/utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  authority: anchor.web3.PublicKey;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: null | anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  isPresale: boolean;\n  isWhitelistOnly: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n  gatekeeper: null | {\n    expireOnUse: boolean;\n    gatekeeperNetwork: anchor.web3.PublicKey;\n  };\n  endSettings: null | {\n    number: anchor.BN;\n    endSettingType: any;\n  };\n  whitelistMintSettings: null | {\n    mode: any;\n    mint: anchor.web3.PublicKey;\n    presale: boolean;\n    discountPrice: null | anchor.BN;\n  };\n  hiddenSettings: null | {\n    name: string;\n    uri: string;\n    hash: Uint8Array;\n  };\n  retainAuthority: boolean;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      //console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              //console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              //console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              //console.log('REST no confirmations for', txid, status);\n            } else {\n              //console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            //console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  done = true;\n  //console.log('Returning status', status);\n  return status;\n};\n\nconst createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\n//This is where we are identifying the right candymachine, connect to it and get its state getting the CadyMachine's state\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'processed',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      authority: state.authority,\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: false,\n      isPresale: false,\n      isWhitelistOnly: false,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      gatekeeper: state.data.gatekeeper,\n      endSettings: state.data.endSettings,\n      whitelistMintSettings: state.data.whitelistMintSettings,\n      hiddenSettings: state.data.hiddenSettings,\n      price: state.data.price,\n      retainAuthority: state.data.retainAuthority,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getCandyMachineCreator = async (\n  candyMachine: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\n    CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport const getCollectionPDA = async (\n  candyMachineAddress: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n      [Buffer.from('collection'), candyMachineAddress.toBuffer()],\n      CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport interface CollectionData {\n  mint: anchor.web3.PublicKey;\n  candyMachine: anchor.web3.PublicKey;\n}\n\nexport const getCollectionAuthorityRecordPDA = async (\n  mint: anchor.web3.PublicKey,\n  newAuthority: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n      await anchor.web3.PublicKey.findProgramAddress(\n          [\n              Buffer.from('metadata'),\n              TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n              mint.toBuffer(),\n              Buffer.from('collection_authority'),\n              newAuthority.toBuffer(),\n          ],\n          TOKEN_METADATA_PROGRAM_ID,\n      )\n  )[0];\n};\n\nexport type SetupState = {\n  mint: anchor.web3.Keypair;\n  userTokenAccount: anchor.web3.PublicKey;\n  transaction: string;\n};\n\nexport const createAccountsForMint = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<SetupState> => {\n  const mint = anchor.web3.Keypair.generate();\n  const userTokenAccountAddress = (\n      await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n      anchor.web3.SystemProgram.createAccount({\n          fromPubkey: payer,\n          newAccountPubkey: mint.publicKey,\n          space: MintLayout.span,\n          lamports:\n              await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n                  MintLayout.span,\n              ),\n          programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          0,\n          payer,\n          payer,\n      ),\n      createAssociatedTokenAccountInstruction(\n          userTokenAccountAddress,\n          payer,\n          payer,\n          mint.publicKey,\n      ),\n      Token.createMintToInstruction(\n          TOKEN_PROGRAM_ID,\n          mint.publicKey,\n          userTokenAccountAddress,\n          payer,\n          [],\n          1,\n      ),\n  ];\n\n  return {\n      mint: mint,\n      userTokenAccount: userTokenAccountAddress,\n      transaction: (\n          await sendTransactions(\n              candyMachine.program.provider.connection,\n              candyMachine.program.provider.wallet,\n              [instructions],\n              [signers],\n              SequenceType.StopOnFailure,\n              'singleGossip',\n              () => {},\n              () => false,\n              undefined,\n              [],\n              [],\n          )\n      ).txs[0].txid,\n  };\n};\n\ntype MintResult = {\n  mintTxId: string;\n  metadataKey: anchor.web3.PublicKey;\n};\n\nexport const mintOneToken = async (\n    candyMachine: CandyMachineAccount,\n    payer: anchor.web3.PublicKey,\n    mint: anchor.web3.Keypair,\n    beforeTransactions: Transaction[] = [],\n    afterTransactions: Transaction[] = [],\n    setupState?: SetupState,\n): Promise<MintResult | null> => {\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = candyMachine.state.tokenMint\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\n    : payer;\n\n  const candyMachineAddress = candyMachine.id;\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers: anchor.web3.Keypair[] = [];\n    //console.log('SetupState: ', setupState);\n    if (!setupState) {\n        signers.push(mint);\n        instructions.push(\n            ...[\n                anchor.web3.SystemProgram.createAccount({\n                    fromPubkey: payer,\n                    newAccountPubkey: mint.publicKey,\n                    space: MintLayout.span,\n                    lamports:\n                        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n                            MintLayout.span,\n                        ),\n                    programId: TOKEN_PROGRAM_ID,\n                }),\n                Token.createInitMintInstruction(\n                    TOKEN_PROGRAM_ID,\n                    mint.publicKey,\n                    0,\n                    payer,\n                    payer,\n                ),\n                createAssociatedTokenAccountInstruction(\n                    userTokenAccountAddress,\n                    payer,\n                    payer,\n                    mint.publicKey,\n                ),\n                Token.createMintToInstruction(\n                    TOKEN_PROGRAM_ID,\n                    mint.publicKey,\n                    userTokenAccountAddress,\n                    payer,\n                    [],\n                    1,\n                ),\n            ],\n        );\n    }\n\n  if (candyMachine.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (candyMachine.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      candyMachine.state.whitelistMintSettings.mint,\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: payer,\n        isWritable: false,\n        isSigner: true,\n      });\n    }\n  }\n\n  if (candyMachine.state.tokenMint) {\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: payer,\n      isWritable: false,\n      isSigner: true,\n    });\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\n    candyMachineAddress,\n  );\n\n  //console.log(remainingAccounts.map(rm => rm.pubkey.toBase58()));\n  instructions.push(\n    await candyMachine.program.instruction.mintNft(creatorBump, {\n      accounts: {\n        candyMachine: candyMachineAddress,\n        candyMachineCreator,\n        payer: payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\n    const collectionPDAAccount =\n        await candyMachine.program.provider.connection.getAccountInfo(\n            collectionPDA,\n        );\n\n    if (collectionPDAAccount && candyMachine.state.retainAuthority) {\n        try {\n            const collectionData =\n                (await candyMachine.program.account.collectionPda.fetch(\n                    collectionPDA,\n                )) as CollectionData;\n            //console.log(collectionData);\n            const collectionMint = collectionData.mint;\n            const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\n                collectionMint,\n                collectionPDA,\n            );\n            //console.log(collectionMint);\n            if (collectionMint) {\n                const collectionMetadata = await getMetadata(collectionMint);\n                const collectionMasterEdition = await getMasterEdition(collectionMint);\n                //console.log('Collection PDA: ', collectionPDA.toBase58());\n                //console.log('Authority: ', candyMachine.state.authority.toBase58());\n                instructions.push(\n                    await candyMachine.program.instruction.setCollectionDuringMint({\n                        accounts: {\n                            candyMachine: candyMachineAddress,\n                            metadata: metadataAddress,\n                            payer: payer,\n                            collectionPda: collectionPDA,\n                            tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n                            instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n                            collectionMint,\n                            collectionMetadata,\n                            collectionMasterEdition,\n                            authority: candyMachine.state.authority,\n                            collectionAuthorityRecord,\n                        },\n                    }),\n                );\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const instructionsMatrix = [instructions];\n    const signersMatrix = [signers];\n\n    try {\n      const txns = (\n          await sendTransactions(\n              candyMachine.program.provider.connection,\n              candyMachine.program.provider.wallet,\n              instructionsMatrix,\n              signersMatrix,\n              SequenceType.StopOnFailure,\n              'singleGossip',\n              () => {},\n              () => false,\n              undefined,\n              beforeTransactions,\n              afterTransactions,\n          )\n      ).txs.map(t => t.txid);\n      const mintTxn = txns[0];\n      return {\n          mintTxId: mintTxn,\n          metadataKey: metadataAddress,\n      };\n  } catch (e) {\n      console.log(e);\n  }\n  return null;\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}