{"ast":null,"code":"import { useRef, useEffect, useDebugValue } from 'react';\nimport useMounted from './useMounted';\nfunction useCustomEffect(effect, dependencies, isEqualOrOptions) {\n  var isMounted = useMounted();\n  var _ref = typeof isEqualOrOptions === 'function' ? {\n      isEqual: isEqualOrOptions\n    } : isEqualOrOptions,\n    isEqual = _ref.isEqual,\n    _ref$effectHook = _ref.effectHook,\n    effectHook = _ref$effectHook === void 0 ? useEffect : _ref$effectHook;\n  var dependenciesRef = useRef();\n  dependenciesRef.current = dependencies;\n  var cleanupRef = useRef(null);\n  effectHook(function () {\n    // If the ref the is `null` it's either the first effect or the last effect\n    // ran and was cleared, meaning _this_ update should run, b/c the equality\n    // check failed on in the cleanup of the last effect.\n    if (cleanupRef.current === null) {\n      var cleanup = effect();\n      cleanupRef.current = function () {\n        if (isMounted() && isEqual(dependenciesRef.current, dependencies)) {\n          return;\n        }\n        cleanupRef.current = null;\n        if (cleanup) cleanup();\n      };\n    }\n    return cleanupRef.current;\n  });\n  useDebugValue(effect);\n}\nexport default useCustomEffect;","map":{"version":3,"names":["useRef","useEffect","useDebugValue","useMounted","useCustomEffect","effect","dependencies","isEqualOrOptions","isMounted","_ref","isEqual","_ref$effectHook","effectHook","dependenciesRef","current","cleanupRef","cleanup"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@restart/hooks/esm/useCustomEffect.js"],"sourcesContent":["import { useRef, useEffect, useDebugValue } from 'react';\nimport useMounted from './useMounted';\n\nfunction useCustomEffect(effect, dependencies, isEqualOrOptions) {\n  var isMounted = useMounted();\n\n  var _ref = typeof isEqualOrOptions === 'function' ? {\n    isEqual: isEqualOrOptions\n  } : isEqualOrOptions,\n      isEqual = _ref.isEqual,\n      _ref$effectHook = _ref.effectHook,\n      effectHook = _ref$effectHook === void 0 ? useEffect : _ref$effectHook;\n\n  var dependenciesRef = useRef();\n  dependenciesRef.current = dependencies;\n  var cleanupRef = useRef(null);\n  effectHook(function () {\n    // If the ref the is `null` it's either the first effect or the last effect\n    // ran and was cleared, meaning _this_ update should run, b/c the equality\n    // check failed on in the cleanup of the last effect.\n    if (cleanupRef.current === null) {\n      var cleanup = effect();\n\n      cleanupRef.current = function () {\n        if (isMounted() && isEqual(dependenciesRef.current, dependencies)) {\n          return;\n        }\n\n        cleanupRef.current = null;\n        if (cleanup) cleanup();\n      };\n    }\n\n    return cleanupRef.current;\n  });\n  useDebugValue(effect);\n}\n\nexport default useCustomEffect;"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACxD,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,eAAe,CAACC,MAAM,EAAEC,YAAY,EAAEC,gBAAgB,EAAE;EAC/D,IAAIC,SAAS,GAAGL,UAAU,EAAE;EAE5B,IAAIM,IAAI,GAAG,OAAOF,gBAAgB,KAAK,UAAU,GAAG;MAClDG,OAAO,EAAEH;IACX,CAAC,GAAGA,gBAAgB;IAChBG,OAAO,GAAGD,IAAI,CAACC,OAAO;IACtBC,eAAe,GAAGF,IAAI,CAACG,UAAU;IACjCA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAGV,SAAS,GAAGU,eAAe;EAEzE,IAAIE,eAAe,GAAGb,MAAM,EAAE;EAC9Ba,eAAe,CAACC,OAAO,GAAGR,YAAY;EACtC,IAAIS,UAAU,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC7BY,UAAU,CAAC,YAAY;IACrB;IACA;IACA;IACA,IAAIG,UAAU,CAACD,OAAO,KAAK,IAAI,EAAE;MAC/B,IAAIE,OAAO,GAAGX,MAAM,EAAE;MAEtBU,UAAU,CAACD,OAAO,GAAG,YAAY;QAC/B,IAAIN,SAAS,EAAE,IAAIE,OAAO,CAACG,eAAe,CAACC,OAAO,EAAER,YAAY,CAAC,EAAE;UACjE;QACF;QAEAS,UAAU,CAACD,OAAO,GAAG,IAAI;QACzB,IAAIE,OAAO,EAAEA,OAAO,EAAE;MACxB,CAAC;IACH;IAEA,OAAOD,UAAU,CAACD,OAAO;EAC3B,CAAC,CAAC;EACFZ,aAAa,CAACG,MAAM,CAAC;AACvB;AAEA,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}