{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statusDisplayValue = exports.mapStatus = void 0;\nvar types_1 = require(\"../types\");\n/** Map InternalGatewayStatuses that also contain non public API ExtendedGatewayStatuses to GatewayStatuses */\nvar mapStatus = function mapStatus(internalStatus) {\n  switch (internalStatus) {\n    // Map extended statuses to GatewayStatus\n    case types_1.ExtendedGatewayStatus.AWAITING_OWNER_TRANSACTION:\n      return types_1.GatewayStatus.IN_REVIEW;\n    case types_1.ExtendedGatewayStatus.CONFIRM_OWNER_TRANSACTION:\n      return types_1.GatewayStatus.IN_REVIEW;\n    case types_1.ExtendedGatewayStatus.CHAIN_TIMEOUT_ERROR:\n      return types_1.GatewayStatus.ERROR;\n    case types_1.ExtendedGatewayStatus.CHAIN_TRANSACTION_ERROR:\n      return types_1.GatewayStatus.ERROR;\n    default:\n      // otherwise return GatewayStatus\n      return internalStatus;\n  }\n};\nexports.mapStatus = mapStatus;\n/** Return a display value for the given InternalGatewayStatus which includes both ExtendedGatewayStatuses and GatewayStatuses */\nvar statusDisplayValue = function statusDisplayValue(internalStatus) {\n  return types_1.ExtendedGatewayStatus[internalStatus] || types_1.GatewayStatus[internalStatus];\n};\nexports.statusDisplayValue = statusDisplayValue;","map":{"version":3,"names":["Object","defineProperty","exports","value","statusDisplayValue","mapStatus","types_1","require","internalStatus","ExtendedGatewayStatus","AWAITING_OWNER_TRANSACTION","GatewayStatus","IN_REVIEW","CONFIRM_OWNER_TRANSACTION","CHAIN_TIMEOUT_ERROR","ERROR","CHAIN_TRANSACTION_ERROR"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@civic/common-gateway-react/dist/esm/utils/status.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.statusDisplayValue = exports.mapStatus = void 0;\nconst types_1 = require(\"../types\");\n/** Map InternalGatewayStatuses that also contain non public API ExtendedGatewayStatuses to GatewayStatuses */\nconst mapStatus = (internalStatus) => {\n    switch (internalStatus) {\n        // Map extended statuses to GatewayStatus\n        case types_1.ExtendedGatewayStatus.AWAITING_OWNER_TRANSACTION:\n            return types_1.GatewayStatus.IN_REVIEW;\n        case types_1.ExtendedGatewayStatus.CONFIRM_OWNER_TRANSACTION:\n            return types_1.GatewayStatus.IN_REVIEW;\n        case types_1.ExtendedGatewayStatus.CHAIN_TIMEOUT_ERROR:\n            return types_1.GatewayStatus.ERROR;\n        case types_1.ExtendedGatewayStatus.CHAIN_TRANSACTION_ERROR:\n            return types_1.GatewayStatus.ERROR;\n        default:\n            // otherwise return GatewayStatus\n            return internalStatus;\n    }\n};\nexports.mapStatus = mapStatus;\n/** Return a display value for the given InternalGatewayStatus which includes both ExtendedGatewayStatuses and GatewayStatuses */\nconst statusDisplayValue = (internalStatus) => {\n    return types_1.ExtendedGatewayStatus[internalStatus] || types_1.GatewayStatus[internalStatus];\n};\nexports.statusDisplayValue = statusDisplayValue;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,SAAS,GAAG,KAAK,CAAC;AACvD,IAAMC,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnC;AACA,IAAMF,SAAS,GAAG,SAAZA,SAAS,CAAIG,cAAc,EAAK;EAClC,QAAQA,cAAc;IAClB;IACA,KAAKF,OAAO,CAACG,qBAAqB,CAACC,0BAA0B;MACzD,OAAOJ,OAAO,CAACK,aAAa,CAACC,SAAS;IAC1C,KAAKN,OAAO,CAACG,qBAAqB,CAACI,yBAAyB;MACxD,OAAOP,OAAO,CAACK,aAAa,CAACC,SAAS;IAC1C,KAAKN,OAAO,CAACG,qBAAqB,CAACK,mBAAmB;MAClD,OAAOR,OAAO,CAACK,aAAa,CAACI,KAAK;IACtC,KAAKT,OAAO,CAACG,qBAAqB,CAACO,uBAAuB;MACtD,OAAOV,OAAO,CAACK,aAAa,CAACI,KAAK;IACtC;MACI;MACA,OAAOP,cAAc;EAAC;AAElC,CAAC;AACDN,OAAO,CAACG,SAAS,GAAGA,SAAS;AAC7B;AACA,IAAMD,kBAAkB,GAAG,SAArBA,kBAAkB,CAAII,cAAc,EAAK;EAC3C,OAAOF,OAAO,CAACG,qBAAqB,CAACD,cAAc,CAAC,IAAIF,OAAO,CAACK,aAAa,CAACH,cAAc,CAAC;AACjG,CAAC;AACDN,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script"}