{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _wrapNativeSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Duplex } from 'readable-stream';\nimport { randomId } from '@toruslabs/openlogin-utils';\nimport { EventEmitter } from 'events';\nimport stringify from 'fast-safe-stringify';\nimport { serializeError } from 'eth-rpc-errors';\nimport eos from 'end-of-stream';\nimport once from 'once';\nimport pump from 'pump';\nfunction noop() {\n  return undefined;\n}\nvar SYN = \"SYN\";\nvar ACK = \"ACK\";\nvar BRK = \"BRK\";\nvar BasePostMessageStream = /*#__PURE__*/function (_Duplex) {\n  _inherits(BasePostMessageStream, _Duplex);\n  var _super = _createSuper(BasePostMessageStream);\n  function BasePostMessageStream(_ref) {\n    var _this;\n    _classCallCheck(this, BasePostMessageStream);\n    var name = _ref.name,\n      target = _ref.target,\n      _ref$targetWindow = _ref.targetWindow,\n      targetWindow = _ref$targetWindow === void 0 ? window : _ref$targetWindow,\n      _ref$targetOrigin = _ref.targetOrigin,\n      targetOrigin = _ref$targetOrigin === void 0 ? \"*\" : _ref$targetOrigin;\n    _this = _super.call(this, {\n      objectMode: true\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_init\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_haveSyn\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_name\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_target\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_targetWindow\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_targetOrigin\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_onMessage\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_synIntervalId\", void 0);\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    _this._init = false;\n    _this._haveSyn = false;\n    _this._name = name;\n    _this._target = target; // target origin\n\n    _this._targetWindow = targetWindow;\n    _this._targetOrigin = targetOrigin;\n    _this._onMessage = _this.onMessage.bind(_assertThisInitialized(_this));\n    _this._synIntervalId = null;\n    window.addEventListener(\"message\", _this._onMessage, false);\n    _this._handShake();\n    return _this;\n  }\n  _createClass(BasePostMessageStream, [{\n    key: \"_break\",\n    value: function _break() {\n      this.cork();\n      this._write(BRK, null, noop);\n      this._haveSyn = false;\n      this._init = false;\n    }\n  }, {\n    key: \"_handShake\",\n    value: function _handShake() {\n      this._write(SYN, null, noop);\n      this.cork();\n    }\n  }, {\n    key: \"_onData\",\n    value: function _onData(data) {\n      if (!this._init) {\n        // listen for handshake\n        if (data === SYN) {\n          this._haveSyn = true;\n          this._write(ACK, null, noop);\n        } else if (data === ACK) {\n          this._init = true;\n          if (!this._haveSyn) {\n            this._write(ACK, null, noop);\n          }\n          this.uncork();\n        }\n      } else if (data === BRK) {\n        this._break();\n      } else {\n        // forward message\n        try {\n          this.push(data);\n        } catch (err) {\n          this.emit(\"error\", err);\n        }\n      }\n    }\n  }, {\n    key: \"_postMessage\",\n    value: function _postMessage(data) {\n      var originConstraint = this._targetOrigin;\n      this._targetWindow.postMessage({\n        target: this._target,\n        data: data\n      }, originConstraint);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event) {\n      var message = event.data; // validate message\n\n      if (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin || event.source !== this._targetWindow || typeof message !== \"object\" || message.target !== this._name || !message.data) {\n        return;\n      }\n      this._onData(message.data);\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(data, _, cb) {\n      this._postMessage(data);\n      cb();\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      window.removeEventListener(\"message\", this._onMessage, false);\n    }\n  }]);\n  return BasePostMessageStream;\n}(Duplex);\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(function () {\n      throw err;\n    });\n  }\n}\nfunction arrayClone(arr) {\n  var n = arr.length;\n  var copy = new Array(n);\n  for (var i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\nvar SafeEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(SafeEventEmitter, _EventEmitter);\n  var _super2 = _createSuper(SafeEventEmitter);\n  function SafeEventEmitter() {\n    _classCallCheck(this, SafeEventEmitter);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(SafeEventEmitter, [{\n    key: \"emit\",\n    value: function emit(type) {\n      var doError = type === \"error\";\n      var events = this._events;\n      if (events !== undefined) {\n        doError = doError && events.error === undefined;\n      } else if (!doError) {\n        return false;\n      } // If there is no 'error' event listener then throw.\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (doError) {\n        var er;\n        if (args.length > 0) {\n          er = args[0];\n        }\n        if (er instanceof Error) {\n          // Note: The comments on the `throw` lines are intentional, they show\n          // up in Node's output if this results in an unhandled exception.\n          throw er; // Unhandled 'error' event\n        } // At least give some kind of context to the user\n\n        var err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : \"\"));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n      }\n\n      var handler = events[type];\n      if (handler === undefined) {\n        return false;\n      }\n      if (typeof handler === \"function\") {\n        safeApply(handler, this, args);\n      } else {\n        var len = handler.length;\n        var listeners = arrayClone(handler);\n        for (var i = 0; i < len; i += 1) {\n          safeApply(listeners[i], this, args);\n        }\n      }\n      return true;\n    }\n  }]);\n  return SafeEventEmitter;\n}(EventEmitter);\nvar SerializableError = /*#__PURE__*/function (_Error) {\n  _inherits(SerializableError, _Error);\n  var _super3 = _createSuper(SerializableError);\n  function SerializableError(_ref) {\n    var _this2;\n    _classCallCheck(this, SerializableError);\n    var code = _ref.code,\n      message = _ref.message,\n      data = _ref.data;\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n    _this2 = _super3.call(this, message);\n    _defineProperty(_assertThisInitialized(_this2), \"code\", void 0);\n    _defineProperty(_assertThisInitialized(_this2), \"data\", void 0);\n    _this2.code = code;\n    if (data !== undefined) {\n      _this2.data = data;\n    }\n    return _this2;\n  }\n  _createClass(SerializableError, [{\n    key: \"toString\",\n    value: function toString() {\n      return stringify({\n        code: this.code,\n        message: this.message,\n        data: this.data,\n        stack: this.stack\n      });\n    }\n  }]);\n  return SerializableError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n  var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (error, response) {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n};\nfunction createErrorMiddleware(log) {\n  return function (req, res, next, end) {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({\n          code: -32603,\n          message: \"invalid method\"\n        });\n        end();\n        return;\n      }\n      next(function (done) {\n        var error = res.error;\n        if (!error) {\n          return done();\n        }\n        log.error(\"OpenLogin - RPC Error: \".concat(error.message), error);\n        return done();\n      });\n    } catch (error) {\n      log.error(\"OpenLogin - RPC Error thrown: \".concat(error.message), error);\n      res.error = new SerializableError({\n        code: -32603,\n        message: error.message\n      });\n      end();\n    }\n  };\n}\nfunction createStreamMiddleware() {\n  var idMap = {};\n  function readNoop() {\n    return false;\n  }\n  var events = new SafeEventEmitter();\n  function processResponse(res) {\n    var context = idMap[res.id];\n    if (!context) {\n      throw new Error(\"StreamMiddleware - Unknown response id \\\"\".concat(res.id, \"\\\"\"));\n    }\n    delete idMap[res.id]; // copy whole res onto original res\n\n    Object.assign(context.res, res); // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n\n    setTimeout(context.end);\n  }\n  function processNotification(res) {\n    events.emit(\"notification\", res);\n  }\n  function processMessage(res, _encoding, cb) {\n    var err;\n    try {\n      var isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    } // continue processing stream\n\n    cb(err);\n  }\n  var stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage\n  });\n  var middleware = function middleware(req, res, next, end) {\n    // write req to stream\n    stream.push(req); // register request on id map\n\n    idMap[req.id] = {\n      req: req,\n      res: res,\n      next: next,\n      end: end\n    };\n  };\n  return {\n    events: events,\n    middleware: middleware,\n    stream: stream\n  };\n}\nfunction createScaffoldMiddleware(handlers) {\n  return function (req, res, next, end) {\n    var handler = handlers[req.method]; // if no handler, return\n\n    if (handler === undefined) {\n      return next();\n    } // if handler is fn, call as middleware\n\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    } // if handler is some other value, use as result\n\n    res.result = handler;\n    return end();\n  };\n}\nfunction createIdRemapMiddleware() {\n  return function (req, res, next, _end) {\n    var originalId = req.id;\n    var newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next(function (done) {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\nfunction createLoggerMiddleware(logger) {\n  return function (req, res, next, _) {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\nfunction createAsyncMiddleware(asyncMiddleware) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res, next, end) {\n      var resolveNextPromise, nextPromise, returnHandlerCallback, nextWasCalled, asyncNext;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // nextPromise is the key to the implementation\n              // it is resolved by the return handler passed to the\n              // \"next\" function\n              nextPromise = new Promise(function (resolve) {\n                resolveNextPromise = resolve;\n              });\n              returnHandlerCallback = null;\n              nextWasCalled = false; // This will be called by the consumer's async middleware.\n              asyncNext = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          nextWasCalled = true; // We pass a return handler to next(). When it is called by the engine,\n                          // the consumer's async middleware will resume executing.\n\n                          next(function (runReturnHandlersCallback) {\n                            // This callback comes from JRPCEngine._runReturnHandlers\n                            returnHandlerCallback = runReturnHandlersCallback;\n                            resolveNextPromise();\n                          });\n                          _context.next = 4;\n                          return nextPromise;\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return function asyncNext() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n              _context2.prev = 4;\n              _context2.next = 7;\n              return asyncMiddleware(req, res, asyncNext);\n            case 7:\n              if (!nextWasCalled) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 10;\n              return nextPromise;\n            case 10:\n              // we must wait until the return handler is called\n\n              returnHandlerCallback(null);\n              _context2.next = 14;\n              break;\n            case 13:\n              end(null);\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](4);\n              if (returnHandlerCallback) {\n                returnHandlerCallback(_context2.t0);\n              } else {\n                end(_context2.t0);\n              }\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 16]]);\n    }));\n    return function (_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nvar JRPCEngine = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(JRPCEngine, _SafeEventEmitter);\n  var _super4 = _createSuper(JRPCEngine);\n  function JRPCEngine() {\n    var _this3;\n    _classCallCheck(this, JRPCEngine);\n    _this3 = _super4.call(this);\n    _defineProperty(_assertThisInitialized(_this3), \"_middleware\", void 0);\n    _this3._middleware = [];\n    return _this3;\n  }\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  _createClass(JRPCEngine, [{\n    key: \"push\",\n    value:\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n\n    function push(middleware) {\n      this._middleware.push(middleware);\n    }\n  }, {\n    key: \"handle\",\n    value: function handle(req, cb) {\n      if (cb && typeof cb !== \"function\") {\n        throw new Error('\"callback\" must be a function if provided.');\n      }\n      if (Array.isArray(req)) {\n        if (cb) {\n          return this._handleBatch(req, cb);\n        }\n        return this._handleBatch(req);\n      }\n      if (cb) {\n        return this._handle(req, cb);\n      }\n      return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n  }, {\n    key: \"asMiddleware\",\n    value: function asMiddleware() {\n      var _this4 = this;\n      return /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res, next, end) {\n          var _yield$JRPCEngine$_ru, _yield$JRPCEngine$_ru2, middlewareError, isComplete, returnHandlers;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.prev = 0;\n                  _context4.next = 3;\n                  return JRPCEngine._runAllMiddleware(req, res, _this4._middleware);\n                case 3:\n                  _yield$JRPCEngine$_ru = _context4.sent;\n                  _yield$JRPCEngine$_ru2 = _slicedToArray(_yield$JRPCEngine$_ru, 3);\n                  middlewareError = _yield$JRPCEngine$_ru2[0];\n                  isComplete = _yield$JRPCEngine$_ru2[1];\n                  returnHandlers = _yield$JRPCEngine$_ru2[2];\n                  if (!isComplete) {\n                    _context4.next = 12;\n                    break;\n                  }\n                  _context4.next = 11;\n                  return JRPCEngine._runReturnHandlers(returnHandlers);\n                case 11:\n                  return _context4.abrupt(\"return\", end(middlewareError));\n                case 12:\n                  return _context4.abrupt(\"return\", next( /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(handlerCallback) {\n                      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              _context3.prev = 0;\n                              _context3.next = 3;\n                              return JRPCEngine._runReturnHandlers(returnHandlers);\n                            case 3:\n                              _context3.next = 8;\n                              break;\n                            case 5:\n                              _context3.prev = 5;\n                              _context3.t0 = _context3[\"catch\"](0);\n                              return _context3.abrupt(\"return\", handlerCallback(_context3.t0));\n                            case 8:\n                              return _context3.abrupt(\"return\", handlerCallback());\n                            case 9:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3, null, [[0, 5]]);\n                    }));\n                    return function (_x9) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }()));\n                case 15:\n                  _context4.prev = 15;\n                  _context4.t0 = _context4[\"catch\"](0);\n                  return _context4.abrupt(\"return\", end(_context4.t0));\n                case 18:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, null, [[0, 15]]);\n        }));\n        return function (_x5, _x6, _x7, _x8) {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n    }\n  }, {\n    key: \"_handleBatch\",\n    value: function () {\n      var _handleBatch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(reqs, cb) {\n        var responses;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return Promise.all(\n                // 1. Begin executing each request in the order received\n                reqs.map(this._promiseHandle.bind(this)));\n              case 3:\n                responses = _context5.sent;\n                if (!cb) {\n                  _context5.next = 6;\n                  break;\n                }\n                return _context5.abrupt(\"return\", cb(null, responses));\n              case 6:\n                return _context5.abrupt(\"return\", responses);\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](0);\n                if (!cb) {\n                  _context5.next = 13;\n                  break;\n                }\n                return _context5.abrupt(\"return\", cb(_context5.t0));\n              case 13:\n                throw _context5.t0;\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 9]]);\n      }));\n      function _handleBatch(_x10, _x11) {\n        return _handleBatch2.apply(this, arguments);\n      }\n      return _handleBatch;\n    }()\n    /**\n     * A promise-wrapped _handle.\n     */\n  }, {\n    key: \"_promiseHandle\",\n    value: function _promiseHandle(req) {\n      var _this5 = this;\n      return new Promise(function (resolve) {\n        _this5._handle(req, function (_err, res) {\n          // There will always be a response, and it will always have any error\n          // that is caught and propagated.\n          resolve(res);\n        });\n      });\n    }\n    /**\n     * Ensures that the request object is valid, processes it, and passes any\n     * error and the response object to the given callback.\n     *\n     * Does not reject.\n     */\n  }, {\n    key: \"_handle\",\n    value: function () {\n      var _handle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(callerReq, cb) {\n        var _error2, _error3, req, res, error;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\")) {\n                  _context6.next = 3;\n                  break;\n                }\n                _error2 = new SerializableError({\n                  code: -32603,\n                  message: \"request must be plain object\"\n                });\n                return _context6.abrupt(\"return\", cb(_error2, {\n                  id: undefined,\n                  jsonrpc: \"2.0\",\n                  error: _error2\n                }));\n              case 3:\n                if (!(typeof callerReq.method !== \"string\")) {\n                  _context6.next = 6;\n                  break;\n                }\n                _error3 = new SerializableError({\n                  code: -32603,\n                  message: \"method must be string\"\n                });\n                return _context6.abrupt(\"return\", cb(_error3, {\n                  id: callerReq.id,\n                  jsonrpc: \"2.0\",\n                  error: _error3\n                }));\n              case 6:\n                req = _objectSpread$1({}, callerReq);\n                res = {\n                  id: req.id,\n                  jsonrpc: req.jsonrpc\n                };\n                error = null;\n                _context6.prev = 9;\n                _context6.next = 12;\n                return this._processRequest(req, res);\n              case 12:\n                _context6.next = 17;\n                break;\n              case 14:\n                _context6.prev = 14;\n                _context6.t0 = _context6[\"catch\"](9);\n                // A request handler error, a re-thrown middleware error, or something\n                // unexpected.\n                error = _context6.t0;\n              case 17:\n                if (error) {\n                  // Ensure no result is present on an errored response\n                  delete res.result;\n                  if (!res.error) {\n                    res.error = serializeError(error);\n                  }\n                }\n                return _context6.abrupt(\"return\", cb(error, res));\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[9, 14]]);\n      }));\n      function _handle(_x12, _x13) {\n        return _handle2.apply(this, arguments);\n      }\n      return _handle;\n    }()\n    /**\n     * For the given request and response, runs all middleware and their return\n     * handlers, if any, and ensures that internal request processing semantics\n     * are satisfied.\n     */\n  }, {\n    key: \"_processRequest\",\n    value: function () {\n      var _processRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n        var _yield$JRPCEngine$_ru3, _yield$JRPCEngine$_ru4, error, isComplete, returnHandlers;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return JRPCEngine._runAllMiddleware(req, res, this._middleware);\n              case 2:\n                _yield$JRPCEngine$_ru3 = _context7.sent;\n                _yield$JRPCEngine$_ru4 = _slicedToArray(_yield$JRPCEngine$_ru3, 3);\n                error = _yield$JRPCEngine$_ru4[0];\n                isComplete = _yield$JRPCEngine$_ru4[1];\n                returnHandlers = _yield$JRPCEngine$_ru4[2];\n                // Throw if \"end\" was not called, or if the response has neither a result\n                // nor an error.\n\n                JRPCEngine._checkForCompletion(req, res, isComplete); // The return handlers should run even if an error was encountered during\n                // middleware processing.\n                _context7.next = 10;\n                return JRPCEngine._runReturnHandlers(returnHandlers);\n              case 10:\n                if (!error) {\n                  _context7.next = 12;\n                  break;\n                }\n                throw error;\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function _processRequest(_x14, _x15) {\n        return _processRequest2.apply(this, arguments);\n      }\n      return _processRequest;\n    }()\n  }], [{\n    key: \"_runAllMiddleware\",\n    value: function () {\n      var _runAllMiddleware2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res, middlewareStack) {\n        var returnHandlers, error, isComplete, _iterator, _step, middleware, _yield$JRPCEngine$_ru5, _yield$JRPCEngine$_ru6;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                returnHandlers = [];\n                error = null;\n                isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n                _iterator = _createForOfIteratorHelper(middlewareStack);\n                _context8.prev = 4;\n                _iterator.s();\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context8.next = 18;\n                  break;\n                }\n                middleware = _step.value;\n                _context8.next = 10;\n                return JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n              case 10:\n                _yield$JRPCEngine$_ru5 = _context8.sent;\n                _yield$JRPCEngine$_ru6 = _slicedToArray(_yield$JRPCEngine$_ru5, 2);\n                error = _yield$JRPCEngine$_ru6[0];\n                isComplete = _yield$JRPCEngine$_ru6[1];\n                if (!isComplete) {\n                  _context8.next = 16;\n                  break;\n                }\n                return _context8.abrupt(\"break\", 18);\n              case 16:\n                _context8.next = 6;\n                break;\n              case 18:\n                _context8.next = 23;\n                break;\n              case 20:\n                _context8.prev = 20;\n                _context8.t0 = _context8[\"catch\"](4);\n                _iterator.e(_context8.t0);\n              case 23:\n                _context8.prev = 23;\n                _iterator.f();\n                return _context8.finish(23);\n              case 26:\n                return _context8.abrupt(\"return\", [error, isComplete, returnHandlers.reverse()]);\n              case 27:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[4, 20, 23, 26]]);\n      }));\n      function _runAllMiddleware(_x16, _x17, _x18) {\n        return _runAllMiddleware2.apply(this, arguments);\n      }\n      return _runAllMiddleware;\n    }()\n    /**\n     * Runs an individual middleware.\n     *\n     * @returns An array of any error encountered during middleware exection,\n     * and a boolean indicating whether the request should end.\n     */\n  }, {\n    key: \"_runMiddleware\",\n    value: function _runMiddleware(req, res, middleware, returnHandlers) {\n      return new Promise(function (resolve) {\n        var end = function end(err) {\n          var error = err || res.error;\n          if (error) {\n            res.error = serializeError(error);\n          } // True indicates that the request should end\n\n          resolve([error, true]);\n        };\n        var next = function next(returnHandler) {\n          if (res.error) {\n            end(res.error);\n          } else {\n            if (returnHandler) {\n              if (typeof returnHandler !== \"function\") {\n                end(new SerializableError({\n                  code: -32603,\n                  message: \"JRPCEngine: 'next' return handlers must be functions\"\n                }));\n              }\n              returnHandlers.push(returnHandler);\n            } // False indicates that the request should not end\n\n            resolve([null, false]);\n          }\n        };\n        try {\n          middleware(req, res, next, end);\n        } catch (error) {\n          end(error);\n        }\n      });\n    }\n    /**\n     * Serially executes array of return handlers. The request and response are\n     * assumed to be in their scope.\n     */\n  }, {\n    key: \"_runReturnHandlers\",\n    value: function () {\n      var _runReturnHandlers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(handlers) {\n        var _iterator2, _step2, _loop;\n        return _regeneratorRuntime().wrap(function _callee9$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(handlers);\n                _context10.prev = 1;\n                _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                  var handler;\n                  return _regeneratorRuntime().wrap(function _loop$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          handler = _step2.value;\n                          _context9.next = 3;\n                          return new Promise(function (resolve, reject) {\n                            handler(function (err) {\n                              return err ? reject(err) : resolve();\n                            });\n                          });\n                        case 3:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                _iterator2.s();\n              case 4:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context10.next = 8;\n                  break;\n                }\n                return _context10.delegateYield(_loop(), \"t0\", 6);\n              case 6:\n                _context10.next = 4;\n                break;\n              case 8:\n                _context10.next = 13;\n                break;\n              case 10:\n                _context10.prev = 10;\n                _context10.t1 = _context10[\"catch\"](1);\n                _iterator2.e(_context10.t1);\n              case 13:\n                _context10.prev = 13;\n                _iterator2.f();\n                return _context10.finish(13);\n              case 16:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee9, null, [[1, 10, 13, 16]]);\n      }));\n      function _runReturnHandlers(_x19) {\n        return _runReturnHandlers2.apply(this, arguments);\n      }\n      return _runReturnHandlers;\n    }()\n    /**\n     * Throws an error if the response has neither a result nor an error, or if\n     * the \"isComplete\" flag is falsy.\n     */\n  }, {\n    key: \"_checkForCompletion\",\n    value: function _checkForCompletion(req, res, isComplete) {\n      if (!(\"result\" in res) && !(\"error\" in res)) {\n        throw new SerializableError({\n          code: -32603,\n          message: \"Response has no error or result for request\"\n        });\n      }\n      if (!isComplete) {\n        throw new SerializableError({\n          code: -32603,\n          message: \"Nothing ended request\"\n        });\n      }\n    }\n  }]);\n  return JRPCEngine;\n}(SafeEventEmitter);\nfunction mergeMiddleware(middlewareStack) {\n  var engine = new JRPCEngine();\n  middlewareStack.forEach(function (middleware) {\n    return engine.push(middleware);\n  });\n  return engine.asMiddleware();\n}\nfunction createEngineStream(opts) {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n  var engine = opts.engine; // eslint-disable-next-line prefer-const\n\n  var stream;\n  function read() {\n    return undefined;\n  }\n  function write(req, _encoding, cb) {\n    engine.handle(req, function (_err, res) {\n      stream.push(res);\n    });\n    cb();\n  }\n  stream = new Duplex({\n    objectMode: true,\n    read: read,\n    write: write\n  }); // forward notifications\n\n  if (engine.on) {\n    engine.on(\"notification\", function (message) {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\nvar Substream = /*#__PURE__*/function (_Duplex2) {\n  _inherits(Substream, _Duplex2);\n  var _super5 = _createSuper(Substream);\n  function Substream(_ref) {\n    var _this6;\n    _classCallCheck(this, Substream);\n    var parent = _ref.parent,\n      name = _ref.name;\n    _this6 = _super5.call(this, {\n      objectMode: true\n    });\n    _defineProperty(_assertThisInitialized(_this6), \"_parent\", void 0);\n    _defineProperty(_assertThisInitialized(_this6), \"_name\", void 0);\n    _this6._parent = parent;\n    _this6._name = name;\n    return _this6;\n  }\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _createClass(Substream, [{\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n    /**\n     * Called when data should be written to this writable stream.\n     *\n     * @param chunk - Arbitrary object to write\n     * @param encoding - Encoding to use when writing payload\n     * @param callback - Called when writing is complete or an error occurs\n     */\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, _encoding, callback) {\n      this._parent.push({\n        name: this._name,\n        data: chunk\n      });\n      callback();\n    }\n  }]);\n  return Substream;\n}(Duplex);\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\nvar ObjectMultiplex = /*#__PURE__*/function (_Duplex3) {\n  _inherits(ObjectMultiplex, _Duplex3);\n  var _super6 = _createSuper(ObjectMultiplex);\n  function ObjectMultiplex() {\n    var _this7;\n    _classCallCheck(this, ObjectMultiplex);\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this7 = _super6.call(this, _objectSpread(_objectSpread({}, opts), {}, {\n      objectMode: true\n    }));\n    _defineProperty(_assertThisInitialized(_this7), \"_substreams\", void 0);\n    _defineProperty(_assertThisInitialized(_this7), \"getStream\", void 0);\n    _this7._substreams = {};\n    return _this7;\n  }\n  _createClass(ObjectMultiplex, [{\n    key: \"createStream\",\n    value: function createStream(name) {\n      // validate name\n      if (!name) {\n        throw new Error(\"ObjectMultiplex - name must not be empty\");\n      }\n      if (this._substreams[name]) {\n        throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n      } // create substream\n\n      var substream = new Substream({\n        parent: this,\n        name: name\n      });\n      this._substreams[name] = substream; // listen for parent stream to end\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n      anyStreamEnd(this, function (_error) {\n        return substream.destroy(_error || undefined);\n      });\n      return substream;\n    } // ignore streams (dont display orphaned data warning)\n  }, {\n    key: \"ignoreStream\",\n    value: function ignoreStream(name) {\n      // validate name\n      if (!name) {\n        throw new Error(\"ObjectMultiplex - name must not be empty\");\n      }\n      if (this._substreams[name]) {\n        throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n      } // set\n\n      this._substreams[name] = IGNORE_SUBSTREAM;\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, _encoding, callback) {\n      var name = chunk.name,\n        data = chunk.data;\n      if (!name) {\n        window.console.warn(\"ObjectMultiplex - malformed chunk without name \\\"\".concat(chunk, \"\\\"\"));\n        return callback();\n      } // get corresponding substream\n\n      var substream = this._substreams[name];\n      if (!substream) {\n        window.console.warn(\"ObjectMultiplex - orphaned data for stream \\\"\".concat(name, \"\\\"\"));\n        return callback();\n      } // push data into substream\n\n      if (substream !== IGNORE_SUBSTREAM) {\n        substream.push(data);\n      }\n      return callback();\n    }\n  }]);\n  return ObjectMultiplex;\n}(Duplex); // util\nfunction anyStreamEnd(stream, _cb) {\n  var cb = once(_cb);\n  eos(stream, {\n    readable: false\n  }, cb);\n  eos(stream, {\n    writable: false\n  }, cb);\n}\nfunction setupMultiplex(stream) {\n  var mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n  pump(stream, mux, stream, function (err) {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\nvar PostMessageStream = /*#__PURE__*/function (_BasePostMessageStrea) {\n  _inherits(PostMessageStream, _BasePostMessageStrea);\n  var _super7 = _createSuper(PostMessageStream);\n  function PostMessageStream() {\n    _classCallCheck(this, PostMessageStream);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(PostMessageStream, [{\n    key: \"_postMessage\",\n    value: function _postMessage(data) {\n      var originConstraint = this._targetOrigin;\n      if (typeof data === \"object\") {\n        var dataObj = data;\n        if (typeof dataObj.data === \"object\") {\n          var dataObjData = dataObj.data;\n          if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n            var dataObjDataParam = dataObjData.params[0];\n            if (dataObjDataParam._origin) {\n              originConstraint = dataObjDataParam._origin;\n            } // add a constraint for the response\n\n            dataObjDataParam._origin = window.location.origin;\n          }\n        }\n      }\n      this._targetWindow.postMessage({\n        target: this._target,\n        data: data\n      }, originConstraint);\n    }\n  }]);\n  return PostMessageStream;\n}(BasePostMessageStream);\nexport { BasePostMessageStream, IGNORE_SUBSTREAM, JRPCEngine, ObjectMultiplex, PostMessageStream, SafeEventEmitter, SerializableError, Substream, createAsyncMiddleware, createEngineStream, createErrorMiddleware, createIdRemapMiddleware, createLoggerMiddleware, createScaffoldMiddleware, createStreamMiddleware, getRpcPromiseCallback, mergeMiddleware, setupMultiplex };","map":{"version":3,"sources":["../src/basePostMessageStream.ts","../src/safeEventEmitter.ts","../src/serializableError.ts","../src/jrpc.ts","../src/jrpcEngine.ts","../src/substream.ts","../src/mux.ts","../src/postMessageStream.ts"],"names":["noop","undefined","SYN","ACK","BRK","Duplex","constructor","name","target","targetWindow","window","targetOrigin","objectMode","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","data","uncork","push","err","emit","_postMessage","originConstraint","postMessage","event","message","origin","source","_read","_","cb","_destroy","removeEventListener","safeApply","handler","context","args","Reflect","apply","setTimeout","arrayClone","arr","n","length","copy","Array","i","EventEmitter","type","doError","events","_events","error","er","len","listeners","code","Number","isInteger","toString","stringify","stack","getRpcPromiseCallback","resolve","reject","unwrapResult","response","isArray","result","createErrorMiddleware","log","req","res","next","end","method","SerializableError","done","createStreamMiddleware","idMap","readNoop","SafeEventEmitter","processResponse","id","Object","assign","processNotification","processMessage","_encoding","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","createIdRemapMiddleware","_end","originalId","newId","randomId","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","nextPromise","Promise","resolveNextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","_runAllMiddleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","serializeError","returnHandler","_runReturnHandlers","_checkForCompletion","handle","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","handlerCallback","reqs","responses","all","map","callerReq","jsonrpc","_processRequest","mergeMiddleware","engine","forEach","createEngineStream","opts","on","parent","_parent","chunk","callback","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","createStream","substream","Substream","anyStreamEnd","_error","destroy","ignoreStream","console","warn","_cb","once","eos","readable","writable","setupMultiplex","mux","getStream","streamHelper","pump","BasePostMessageStream","dataObj","dataObjData","params","dataObjDataParam","_origin","location"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Duplex } from 'readable-stream';\nimport { randomId } from '@toruslabs/openlogin-utils';\nimport { EventEmitter } from 'events';\nimport stringify from 'fast-safe-stringify';\nimport { serializeError } from 'eth-rpc-errors';\nimport eos from 'end-of-stream';\nimport once from 'once';\nimport pump from 'pump';\n\nfunction noop() {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\nclass BasePostMessageStream extends Duplex {\n  constructor(_ref) {\n    let {\n      name,\n      target,\n      targetWindow = window,\n      targetOrigin = \"*\"\n    } = _ref;\n    super({\n      objectMode: true\n    });\n\n    _defineProperty(this, \"_init\", void 0);\n\n    _defineProperty(this, \"_haveSyn\", void 0);\n\n    _defineProperty(this, \"_name\", void 0);\n\n    _defineProperty(this, \"_target\", void 0);\n\n    _defineProperty(this, \"_targetWindow\", void 0);\n\n    _defineProperty(this, \"_targetOrigin\", void 0);\n\n    _defineProperty(this, \"_onMessage\", void 0);\n\n    _defineProperty(this, \"_synIntervalId\", void 0);\n\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n    window.addEventListener(\"message\", this._onMessage, false);\n\n    this._handShake();\n  }\n\n  _break() {\n    this.cork();\n\n    this._write(BRK, null, noop);\n\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake() {\n    this._write(SYN, null, noop);\n\n    this.cork();\n  }\n\n  _onData(data) {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data) {\n    const originConstraint = this._targetOrigin;\n\n    this._targetWindow.postMessage({\n      target: this._target,\n      data\n    }, originConstraint);\n  }\n\n  onMessage(event) {\n    const message = event.data; // validate message\n\n    if (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin || event.source !== this._targetWindow || typeof message !== \"object\" || message.target !== this._name || !message.data) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read() {\n    return undefined;\n  }\n\n  _write(data, _, cb) {\n    this._postMessage(data);\n\n    cb();\n  }\n\n  _destroy() {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone(arr) {\n  const n = arr.length;\n  const copy = new Array(n);\n\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nclass SafeEventEmitter extends EventEmitter {\n  emit(type) {\n    let doError = type === \"error\";\n    const events = this._events;\n\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    } // If there is no 'error' event listener then throw.\n\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (doError) {\n      let er;\n\n      if (args.length > 0) {\n        [er] = args;\n      }\n\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      } // At least give some kind of context to the user\n\n\n      const err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : \"\"));\n      err.context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n\n}\n\nclass SerializableError extends Error {\n  constructor(_ref) {\n    let {\n      code,\n      message,\n      data\n    } = _ref;\n\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"data\", void 0);\n\n    this.code = code;\n\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString() {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack\n    });\n  }\n\n}\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n};\nfunction createErrorMiddleware(log) {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({\n          code: -32603,\n          message: \"invalid method\"\n        });\n        end();\n        return;\n      }\n\n      next(done => {\n        const {\n          error\n        } = res;\n\n        if (!error) {\n          return done();\n        }\n\n        log.error(\"OpenLogin - RPC Error: \".concat(error.message), error);\n        return done();\n      });\n    } catch (error) {\n      log.error(\"OpenLogin - RPC Error thrown: \".concat(error.message), error);\n      res.error = new SerializableError({\n        code: -32603,\n        message: error.message\n      });\n      end();\n    }\n  };\n}\nfunction createStreamMiddleware() {\n  const idMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res) {\n    const context = idMap[res.id];\n\n    if (!context) {\n      throw new Error(\"StreamMiddleware - Unknown response id \\\"\".concat(res.id, \"\\\"\"));\n    }\n\n    delete idMap[res.id]; // copy whole res onto original res\n\n    Object.assign(context.res, res); // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n\n    setTimeout(context.end);\n  }\n\n  function processNotification(res) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res, _encoding, cb) {\n    let err;\n\n    try {\n      const isNotification = !res.id;\n\n      if (isNotification) {\n        processNotification(res);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    } // continue processing stream\n\n\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage\n  });\n\n  const middleware = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req); // register request on id map\n\n    idMap[req.id] = {\n      req,\n      res,\n      next,\n      end\n    };\n  };\n\n  return {\n    events,\n    middleware,\n    stream\n  };\n}\nfunction createScaffoldMiddleware(handlers) {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method]; // if no handler, return\n\n    if (handler === undefined) {\n      return next();\n    } // if handler is fn, call as middleware\n\n\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    } // if handler is some other value, use as result\n\n\n    res.result = handler;\n    return end();\n  };\n}\nfunction createIdRemapMiddleware() {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next(done => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\nfunction createLoggerMiddleware(logger) {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\nfunction createAsyncMiddleware(asyncMiddleware) {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise;\n    const nextPromise = new Promise(resolve => {\n      resolveNextPromise = resolve;\n    });\n    let returnHandlerCallback = null;\n    let nextWasCalled = false; // This will be called by the consumer's async middleware.\n\n    const asyncNext = async () => {\n      nextWasCalled = true; // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next(runReturnHandlersCallback => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n\n        returnHandlerCallback(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        returnHandlerCallback(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\n\nclass JRPCEngine extends SafeEventEmitter {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_middleware\", void 0);\n\n    this._middleware = [];\n  }\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n\n\n  static async _runAllMiddleware(req, res, middlewareStack) {\n    const returnHandlers = [];\n    let error = null;\n    let isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n\n      if (isComplete) {\n        break;\n      }\n    }\n\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n\n\n  static _runMiddleware(req, res, middleware, returnHandlers) {\n    return new Promise(resolve => {\n      const end = err => {\n        const error = err || res.error;\n\n        if (error) {\n          res.error = serializeError(error);\n        } // True indicates that the request should end\n\n\n        resolve([error, true]);\n      };\n\n      const next = returnHandler => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({\n                code: -32603,\n                message: \"JRPCEngine: 'next' return handlers must be functions\"\n              }));\n            }\n\n            returnHandlers.push(returnHandler);\n          } // False indicates that the request should not end\n\n\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n\n\n  static async _runReturnHandlers(handlers) {\n    for (const handler of handlers) {\n      await new Promise((resolve, reject) => {\n        handler(err => err ? reject(err) : resolve());\n      });\n    }\n  }\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n\n\n  static _checkForCompletion(req, res, isComplete) {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({\n        code: -32603,\n        message: \"Response has no error or result for request\"\n      });\n    }\n\n    if (!isComplete) {\n      throw new SerializableError({\n        code: -32603,\n        message: \"Nothing ended request\"\n      });\n    }\n  }\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n\n\n  push(middleware) {\n    this._middleware.push(middleware);\n  }\n\n  handle(req, cb) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req, cb);\n    }\n\n    return this._promiseHandle(req);\n  }\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n\n\n  asMiddleware() {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError);\n        }\n\n        return next(async handlerCallback => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  async _handleBatch(reqs, cb) {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all( // 1. Begin executing each request in the order received\n      reqs.map(this._promiseHandle.bind(this))); // 3. Return batch response\n\n      if (cb) {\n        return cb(null, responses);\n      }\n\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n  /**\n   * A promise-wrapped _handle.\n   */\n\n\n  _promiseHandle(req) {\n    return new Promise(resolve => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n\n\n  async _handle(callerReq, cb) {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({\n        code: -32603,\n        message: \"request must be plain object\"\n      });\n      return cb(error, {\n        id: undefined,\n        jsonrpc: \"2.0\",\n        error\n      });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({\n        code: -32603,\n        message: \"method must be string\"\n      });\n      return cb(error, {\n        id: callerReq.id,\n        jsonrpc: \"2.0\",\n        error\n      });\n    }\n\n    const req = _objectSpread$1({}, callerReq);\n\n    const res = {\n      id: req.id,\n      jsonrpc: req.jsonrpc\n    };\n    let error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res);\n  }\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n\n\n  async _processRequest(req, res) {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware); // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n\n    JRPCEngine._checkForCompletion(req, res, isComplete); // The return handlers should run even if an error was encountered during\n    // middleware processing.\n\n\n    await JRPCEngine._runReturnHandlers(returnHandlers); // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n\n    if (error) {\n      throw error;\n    }\n  }\n\n}\nfunction mergeMiddleware(middlewareStack) {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach(middleware => engine.push(middleware));\n  return engine.asMiddleware();\n}\nfunction createEngineStream(opts) {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const {\n    engine\n  } = opts; // eslint-disable-next-line prefer-const\n\n  let stream;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req, _encoding, cb) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({\n    objectMode: true,\n    read,\n    write\n  }); // forward notifications\n\n  if (engine.on) {\n    engine.on(\"notification\", message => {\n      stream.push(message);\n    });\n  }\n\n  return stream;\n}\n\nclass Substream extends Duplex {\n  constructor(_ref) {\n    let {\n      parent,\n      name\n    } = _ref;\n    super({\n      objectMode: true\n    });\n\n    _defineProperty(this, \"_parent\", void 0);\n\n    _defineProperty(this, \"_name\", void 0);\n\n    this._parent = parent;\n    this._name = name;\n  }\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n\n\n  _read() {\n    return undefined;\n  }\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n\n\n  _write(chunk, _encoding, callback) {\n    this._parent.push({\n      name: this._name,\n      data: chunk\n    });\n\n    callback();\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\nclass ObjectMultiplex extends Duplex {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(_objectSpread(_objectSpread({}, opts), {}, {\n      objectMode: true\n    }));\n\n    _defineProperty(this, \"_substreams\", void 0);\n\n    _defineProperty(this, \"getStream\", void 0);\n\n    this._substreams = {};\n  }\n\n  createStream(name) {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n    } // create substream\n\n\n    const substream = new Substream({\n      parent: this,\n      name\n    });\n    this._substreams[name] = substream; // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    anyStreamEnd(this, _error => substream.destroy(_error || undefined));\n    return substream;\n  } // ignore streams (dont display orphaned data warning)\n\n\n  ignoreStream(name) {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n    } // set\n\n\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read() {\n    return undefined;\n  }\n\n  _write(chunk, _encoding, callback) {\n    const {\n      name,\n      data\n    } = chunk;\n\n    if (!name) {\n      window.console.warn(\"ObjectMultiplex - malformed chunk without name \\\"\".concat(chunk, \"\\\"\"));\n      return callback();\n    } // get corresponding substream\n\n\n    const substream = this._substreams[name];\n\n    if (!substream) {\n      window.console.warn(\"ObjectMultiplex - orphaned data for stream \\\"\".concat(name, \"\\\"\"));\n      return callback();\n    } // push data into substream\n\n\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n\n} // util\n\nfunction anyStreamEnd(stream, _cb) {\n  const cb = once(_cb);\n  eos(stream, {\n    readable: false\n  }, cb);\n  eos(stream, {\n    writable: false\n  }, cb);\n}\n\nfunction setupMultiplex(stream) {\n  const mux = new ObjectMultiplex();\n\n  mux.getStream = function streamHelper(name) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n\n    return this.createStream(name);\n  };\n\n  pump(stream, mux, stream, err => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n\nclass PostMessageStream extends BasePostMessageStream {\n  _postMessage(data) {\n    let originConstraint = this._targetOrigin;\n\n    if (typeof data === \"object\") {\n      const dataObj = data;\n\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data;\n\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0];\n\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin;\n          } // add a constraint for the response\n\n\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage({\n      target: this._target,\n      data\n    }, originConstraint);\n  }\n\n}\n\nexport { BasePostMessageStream, IGNORE_SUBSTREAM, JRPCEngine, ObjectMultiplex, PostMessageStream, SafeEventEmitter, SerializableError, Substream, createAsyncMiddleware, createEngineStream, createErrorMiddleware, createIdRemapMiddleware, createLoggerMiddleware, createScaffoldMiddleware, createStreamMiddleware, getRpcPromiseCallback, mergeMiddleware, setupMultiplex };\n//# sourceMappingURL=openloginJrpc.esm.js.map\n"]},"metadata":{},"sourceType":"module"}