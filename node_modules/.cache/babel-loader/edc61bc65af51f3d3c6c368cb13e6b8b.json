{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GatewayToken = exports.State = void 0;\nvar GatewayTokenData_1 = require(\"../lib/GatewayTokenData\");\nvar util_1 = require(\"../lib/util\");\nvar State;\n(function (State) {\n  State[\"ACTIVE\"] = \"ACTIVE\";\n  State[\"REVOKED\"] = \"REVOKED\";\n  State[\"FROZEN\"] = \"FROZEN\";\n})(State = exports.State || (exports.State = {}));\nvar GatewayToken = /*#__PURE__*/function () {\n  function GatewayToken(\n  //  the key used to reference the issuing gatekeeper\n  issuingGatekeeper, gatekeeperNetwork, owner, state, publicKey, programId, expiryTime) {\n    _classCallCheck(this, GatewayToken);\n    this.issuingGatekeeper = issuingGatekeeper;\n    this.gatekeeperNetwork = gatekeeperNetwork;\n    this.owner = owner;\n    this.state = state;\n    this.publicKey = publicKey;\n    this.programId = programId;\n    this.expiryTime = expiryTime;\n  }\n  _createClass(GatewayToken, [{\n    key: \"isValid\",\n    value: function isValid() {\n      return this.state === State.ACTIVE && !this.hasExpired();\n    }\n  }, {\n    key: \"hasExpired\",\n    value: function hasExpired() {\n      var now = Math.floor(Date.now() / 1000);\n      return !!this.expiryTime && now > this.expiryTime;\n    }\n  }, {\n    key: \"update\",\n    value: function update(_ref) {\n      var state = _ref.state,\n        expiryTime = _ref.expiryTime;\n      return new GatewayToken(this.issuingGatekeeper, this.gatekeeperNetwork, this.owner, state, this.publicKey, this.programId, expiryTime || this.expiryTime);\n    }\n  }], [{\n    key: \"fromAccount\",\n    value: function fromAccount(accountInfo, key) {\n      var parsedData = GatewayTokenData_1.GatewayTokenData.fromAccount(accountInfo.data);\n      return (0, util_1.dataToGatewayToken)(parsedData, key);\n    }\n  }]);\n  return GatewayToken;\n}();\nexports.GatewayToken = GatewayToken;","map":{"version":3,"sources":["../../src/types/index.ts"],"names":[],"mappings":";;;;;;;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAMA,IAAY,KAIX;AAJD,CAAA,UAAY,KAAK,EAAA;EACf,KAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,KAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;EACnB,KAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;AACnB,CAAC,EAJW,KAAK,GAAL,OAAA,CAAA,KAAK,KAAL,OAAA,CAAA,KAAK,GAAA,CAAA,CAAA,CAAA,CAAA;AAIhB,IACY,YAAY;EACvB;EACE;EACS,iBAA4B,EAC5B,iBAA4B,EAC5B,KAAgB,EAChB,KAAY,EACZ,SAAoB,EACpB,SAAoB,EACpB,UAAmB,EAAA;IAAA;IANnB,IAAA,CAAA,iBAAiB,GAAjB,iBAAiB;IACjB,IAAA,CAAA,iBAAiB,GAAjB,iBAAiB;IACjB,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,SAAS,GAAT,SAAS;IACT,IAAA,CAAA,SAAS,GAAT,SAAS;IACT,IAAA,CAAA,UAAU,GAAV,UAAU;EAClB;EAAC;IAAA;IAAA,OAEJ,mBAAO;MACL,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;IAC1D;EAAC;IAAA;IAAA,OAEO,sBAAU;MAChB,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;MACzC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU;IACnD;EAAC;IAAA;IAAA,OAUM,sBAMN;MAAA,IALC,KAAK,QAAL,KAAK;QACL,UAAU,QAAV,UAAU;MAKV,OAAO,IAAI,YAAY,CACrB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,KAAK,EACV,KAAK,EACL,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,UAAU,IAAI,IAAI,CAAC,UAAU,CAC9B;IACH;EAAC;IAAA;IAAA,OAxBD,qBACE,WAAgC,EAChC,GAAc,EAAA;MAEd,IAAM,UAAU,GAAG,kBAAA,CAAA,gBAAgB,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC;MACjE,OAAO,CAAA,CAAA,EAAA,MAAA,CAAA,kBAAkB,EAAC,UAAU,EAAE,GAAG,CAAC;IAC5C;EAAC;EAAA;AAAA;AA3BH,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GatewayToken = exports.State = void 0;\nconst GatewayTokenData_1 = require(\"../lib/GatewayTokenData\");\nconst util_1 = require(\"../lib/util\");\nvar State;\n(function (State) {\n    State[\"ACTIVE\"] = \"ACTIVE\";\n    State[\"REVOKED\"] = \"REVOKED\";\n    State[\"FROZEN\"] = \"FROZEN\";\n})(State = exports.State || (exports.State = {}));\nclass GatewayToken {\n    constructor(\n    //  the key used to reference the issuing gatekeeper\n    issuingGatekeeper, gatekeeperNetwork, owner, state, publicKey, programId, expiryTime) {\n        this.issuingGatekeeper = issuingGatekeeper;\n        this.gatekeeperNetwork = gatekeeperNetwork;\n        this.owner = owner;\n        this.state = state;\n        this.publicKey = publicKey;\n        this.programId = programId;\n        this.expiryTime = expiryTime;\n    }\n    isValid() {\n        return this.state === State.ACTIVE && !this.hasExpired();\n    }\n    hasExpired() {\n        const now = Math.floor(Date.now() / 1000);\n        return !!this.expiryTime && now > this.expiryTime;\n    }\n    static fromAccount(accountInfo, key) {\n        const parsedData = GatewayTokenData_1.GatewayTokenData.fromAccount(accountInfo.data);\n        return (0, util_1.dataToGatewayToken)(parsedData, key);\n    }\n    update({ state, expiryTime, }) {\n        return new GatewayToken(this.issuingGatekeeper, this.gatekeeperNetwork, this.owner, state, this.publicKey, this.programId, expiryTime || this.expiryTime);\n    }\n}\nexports.GatewayToken = GatewayToken;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}