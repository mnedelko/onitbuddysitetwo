{"ast":null,"code":"import _toConsumableArray from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport BloctoSDK from '@blocto/sdk';\nimport { BaseWalletAdapter, WalletAccountError, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectionError, WalletNotConnectedError, WalletNotFoundError, WalletPublicKeyError, WalletSendTransactionError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport var BloctoWalletAdapter = /*#__PURE__*/function (_BaseWalletAdapter) {\n  _inherits(BloctoWalletAdapter, _BaseWalletAdapter);\n  var _super = _createSuper(BloctoWalletAdapter);\n  function BloctoWalletAdapter() {\n    var _this;\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, BloctoWalletAdapter);\n    _this = _super.call(this);\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    _this._network = config.network || WalletAdapterNetwork.Mainnet;\n    return _this;\n  }\n  _createClass(BloctoWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return !!this._publicKey;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var wallet, account, publicKey;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                this._connecting = true;\n                wallet = new BloctoSDK({\n                  solana: {\n                    net: this._network\n                  }\n                }).solana;\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n                throw new WalletNotFoundError();\n              case 7:\n                if (wallet.connected) {\n                  _context.next = 16;\n                  break;\n                }\n                _context.prev = 8;\n                _context.next = 11;\n                return wallet.connect();\n              case 11:\n                _context.next = 16;\n                break;\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](8);\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n              case 16:\n                account = wallet.accounts[0];\n                if (account) {\n                  _context.next = 19;\n                  break;\n                }\n                throw new WalletAccountError();\n              case 19:\n                _context.prev = 19;\n                publicKey = new PublicKey(account);\n                _context.next = 26;\n                break;\n              case 23:\n                _context.prev = 23;\n                _context.t1 = _context[\"catch\"](19);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n              case 26:\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 35;\n                break;\n              case 31:\n                _context.prev = 31;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n              case 35:\n                _context.prev = 35;\n                this._connecting = false;\n                return _context.finish(35);\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 31, 35, 38], [8, 13], [19, 23]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n                if (!wallet) {\n                  _context2.next = 12;\n                  break;\n                }\n                this._wallet = null;\n                this._publicKey = null;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return wallet.disconnect();\n              case 7:\n                _context2.next = 12;\n                break;\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](4);\n                this.emit('error', new WalletDisconnectionError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0));\n              case 12:\n                this.emit('disconnect');\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 9]]);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction, connection) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var wallet, signers, _transaction;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context3.prev = 4;\n                transaction.feePayer || (transaction.feePayer = this.publicKey || undefined);\n                _context3.t0 = transaction.recentBlockhash;\n                if (_context3.t0) {\n                  _context3.next = 11;\n                  break;\n                }\n                _context3.next = 10;\n                return connection.getRecentBlockhash('finalized');\n              case 10:\n                transaction.recentBlockhash = _context3.sent.blockhash;\n              case 11:\n                signers = options.signers;\n                if (!(signers === null || signers === void 0 ? void 0 : signers.length)) {\n                  _context3.next = 17;\n                  break;\n                }\n                _context3.next = 15;\n                return wallet.convertToProgramWalletTransaction(transaction);\n              case 15:\n                transaction = _context3.sent;\n                (_transaction = transaction).partialSign.apply(_transaction, _toConsumableArray(signers));\n              case 17:\n                _context3.next = 19;\n                return wallet.signAndSendTransaction(transaction, connection);\n              case 19:\n                return _context3.abrupt(\"return\", _context3.sent);\n              case 22:\n                _context3.prev = 22;\n                _context3.t1 = _context3[\"catch\"](4);\n                throw new WalletSendTransactionError(_context3.t1 === null || _context3.t1 === void 0 ? void 0 : _context3.t1.message, _context3.t1);\n              case 25:\n                _context3.next = 31;\n                break;\n              case 27:\n                _context3.prev = 27;\n                _context3.t2 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t2);\n                throw _context3.t2;\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 27], [4, 22]]);\n      }));\n    }\n  }]);\n  return BloctoWalletAdapter;\n}(BaseWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BloctoSDK from '@blocto/sdk';\nimport { BaseWalletAdapter, WalletAccountError, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectionError, WalletNotConnectedError, WalletNotFoundError, WalletPublicKeyError, WalletSendTransactionError, } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport class BloctoWalletAdapter extends BaseWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._connecting = false;\n        this._wallet = null;\n        this._publicKey = null;\n        this._network = config.network || WalletAdapterNetwork.Mainnet;\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get ready() {\n        return true;\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        return !!this._publicKey;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                const wallet = new BloctoSDK({ solana: { net: this._network } }).solana;\n                if (!wallet)\n                    throw new WalletNotFoundError();\n                if (!wallet.connected) {\n                    try {\n                        yield wallet.connect();\n                    }\n                    catch (error) {\n                        throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                    }\n                }\n                const account = wallet.accounts[0];\n                if (!account)\n                    throw new WalletAccountError();\n                let publicKey;\n                try {\n                    publicKey = new PublicKey(account);\n                }\n                catch (error) {\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                this._wallet = null;\n                this._publicKey = null;\n                try {\n                    yield wallet.disconnect();\n                }\n                catch (error) {\n                    this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n                }\n            }\n            this.emit('disconnect');\n        });\n    }\n    sendTransaction(transaction, connection, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    transaction.feePayer || (transaction.feePayer = this.publicKey || undefined);\n                    transaction.recentBlockhash || (transaction.recentBlockhash = (yield connection.getRecentBlockhash('finalized')).blockhash);\n                    const { signers } = options;\n                    if (signers === null || signers === void 0 ? void 0 : signers.length) {\n                        transaction = yield wallet.convertToProgramWalletTransaction(transaction);\n                        transaction.partialSign(...signers);\n                    }\n                    return yield wallet.signAndSendTransaction(transaction, connection);\n                }\n                catch (error) {\n                    throw new WalletSendTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}