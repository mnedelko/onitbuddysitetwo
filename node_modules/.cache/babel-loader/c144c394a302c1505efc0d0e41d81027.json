{"ast":null,"code":"/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"i\",\n      I: \"\\u0131\",\n      İ: \"i\"\n    }\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"i\",\n      I: \"\\u0131\",\n      İ: \"i\"\n    }\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"i\\u0307\",\n      J: \"j\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"i\\u0307\\u0300\",\n      Í: \"i\\u0307\\u0301\",\n      Ĩ: \"i\\u0307\\u0303\"\n    }\n  }\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, function (m) {\n    return lang.map[m];\n  }));\n  return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n  return str.toLowerCase();\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAQA;;AAEG;AACH,IAAM,gBAAgB,GAA2B;EAC/C,EAAE,EAAE;IACF,MAAM,EAAE,6BAA6B;IACrC,GAAG,EAAE;MACH,CAAC,EAAE,GAAQ;MACX,CAAC,EAAE,QAAQ;MACX,EAAE,EAAE;IACL;GACF;EACD,EAAE,EAAE;IACF,MAAM,EAAE,SAAS;IACjB,GAAG,EAAE;MACH,CAAC,EAAE,GAAQ;MACX,CAAC,EAAE,QAAQ;MACX,EAAE,EAAE;IACL;GACF;EACD,EAAE,EAAE;IACF,MAAM,EAAE,4CAA4C;IACpD,GAAG,EAAE;MACH,CAAC,EAAE,SAAc;MACjB,CAAC,EAAE,SAAc;MACjB,CAAC,EAAE,cAAc;MACjB,CAAC,EAAE,eAAoB;MACvB,CAAC,EAAE,eAAoB;MACvB,CAAC,EAAE;IACJ;EACF;CACF;AAED;;AAEG;AACH,OAAM,SAAU,eAAe,CAAC,GAAW,EAAE,MAAc,EAAA;EACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;EACnD,IAAI,IAAI,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAA;IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAAX,CAAW,CAAC,CAAC;EACxE,OAAO,SAAS,CAAC,GAAG,CAAC;AACvB;AAEA;;AAEG;AACH,OAAM,SAAU,SAAS,CAAC,GAAW,EAAA;EACnC,OAAO,GAAG,CAAC,WAAW,EAAE;AAC1B","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}