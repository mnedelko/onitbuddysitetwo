{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError, WalletWindowClosedError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport var PhantomWalletAdapter = /*#__PURE__*/function (_BaseMessageSignerWal) {\n  _inherits(PhantomWalletAdapter, _BaseMessageSignerWal);\n  var _super = _createSuper(PhantomWalletAdapter);\n  function PhantomWalletAdapter() {\n    var _this;\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, PhantomWalletAdapter);\n    _this = _super.call(this);\n    _this._disconnected = function () {\n      var wallet = _this._wallet;\n      if (wallet) {\n        wallet.off('disconnect', _this._disconnected);\n        _this._wallet = null;\n        _this._publicKey = null;\n        _this.emit('error', new WalletDisconnectedError());\n        _this.emit('disconnect');\n      }\n    };\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    if (!_this.ready) pollUntilReady(_assertThisInitialized(_this), config.pollInterval || 1000, config.pollCount || 3);\n    return _this;\n  }\n  _createClass(PhantomWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      var _a;\n      return typeof window !== 'undefined' && !!((_a = window.solana) === null || _a === void 0 ? void 0 : _a.isPhantom);\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var wallet, handleDisconnect, publicKey;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                this._connecting = true;\n                wallet = typeof window !== 'undefined' && window.solana;\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n                throw new WalletNotFoundError();\n              case 7:\n                if (wallet.isPhantom) {\n                  _context.next = 9;\n                  break;\n                }\n                throw new WalletNotInstalledError();\n              case 9:\n                if (wallet.isConnected) {\n                  _context.next = 24;\n                  break;\n                }\n                // HACK: Phantom doesn't reject or emit an event if the popup is closed\n                handleDisconnect = wallet._handleDisconnect;\n                _context.prev = 11;\n                _context.next = 14;\n                return new Promise(function (resolve, reject) {\n                  var connect = function connect() {\n                    wallet.off('connect', connect);\n                    resolve();\n                  };\n                  wallet._handleDisconnect = function () {\n                    wallet.off('connect', connect);\n                    reject(new WalletWindowClosedError());\n                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                      args[_key] = arguments[_key];\n                    }\n                    return handleDisconnect.apply(wallet, args);\n                  };\n                  wallet.on('connect', connect);\n                  wallet.connect().catch(function (reason) {\n                    wallet.off('connect', connect);\n                    reject(reason);\n                  });\n                });\n              case 14:\n                _context.next = 21;\n                break;\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](11);\n                if (!(_context.t0 instanceof WalletError)) {\n                  _context.next = 20;\n                  break;\n                }\n                throw _context.t0;\n              case 20:\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n              case 21:\n                _context.prev = 21;\n                wallet._handleDisconnect = handleDisconnect;\n                return _context.finish(21);\n              case 24:\n                if (wallet.publicKey) {\n                  _context.next = 26;\n                  break;\n                }\n                throw new WalletConnectionError();\n              case 26:\n                _context.prev = 26;\n                publicKey = new PublicKey(wallet.publicKey.toBytes());\n                _context.next = 33;\n                break;\n              case 30:\n                _context.prev = 30;\n                _context.t1 = _context[\"catch\"](26);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n              case 33:\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 43;\n                break;\n              case 39:\n                _context.prev = 39;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n              case 43:\n                _context.prev = 43;\n                this._connecting = false;\n                return _context.finish(43);\n              case 46:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 39, 43, 46], [11, 16, 21, 24], [26, 30]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n                if (!wallet) {\n                  _context2.next = 13;\n                  break;\n                }\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this._publicKey = null;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return wallet.disconnect();\n              case 8:\n                _context2.next = 13;\n                break;\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.emit('error', new WalletDisconnectionError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0));\n              case 13:\n                this.emit('disconnect');\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 10]]);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var wallet;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return wallet.signTransaction(transaction);\n              case 7:\n                _context3.t0 = _context3.sent;\n                if (_context3.t0) {\n                  _context3.next = 10;\n                  break;\n                }\n                _context3.t0 = transaction;\n              case 10:\n                return _context3.abrupt(\"return\", _context3.t0);\n              case 13:\n                _context3.prev = 13;\n                _context3.t1 = _context3[\"catch\"](4);\n                throw new WalletSignTransactionError(_context3.t1 === null || _context3.t1 === void 0 ? void 0 : _context3.t1.message, _context3.t1);\n              case 16:\n                _context3.next = 22;\n                break;\n              case 18:\n                _context3.prev = 18;\n                _context3.t2 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t2);\n                throw _context3.t2;\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var wallet;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context4.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context4.prev = 4;\n                _context4.next = 7;\n                return wallet.signAllTransactions(transactions);\n              case 7:\n                _context4.t0 = _context4.sent;\n                if (_context4.t0) {\n                  _context4.next = 10;\n                  break;\n                }\n                _context4.t0 = transactions;\n              case 10:\n                return _context4.abrupt(\"return\", _context4.t0);\n              case 13:\n                _context4.prev = 13;\n                _context4.t1 = _context4[\"catch\"](4);\n                throw new WalletSignTransactionError(_context4.t1 === null || _context4.t1 === void 0 ? void 0 : _context4.t1.message, _context4.t1);\n              case 16:\n                _context4.next = 22;\n                break;\n              case 18:\n                _context4.prev = 18;\n                _context4.t2 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t2);\n                throw _context4.t2;\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var wallet, _yield$wallet$signMes, signature;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                wallet = this._wallet;\n                if (wallet) {\n                  _context5.next = 4;\n                  break;\n                }\n                throw new WalletNotConnectedError();\n              case 4:\n                _context5.prev = 4;\n                _context5.next = 7;\n                return wallet.signMessage(message);\n              case 7:\n                _yield$wallet$signMes = _context5.sent;\n                signature = _yield$wallet$signMes.signature;\n                return _context5.abrupt(\"return\", Uint8Array.from(signature));\n              case 12:\n                _context5.prev = 12;\n                _context5.t0 = _context5[\"catch\"](4);\n                throw new WalletSignTransactionError(_context5.t0 === null || _context5.t0 === void 0 ? void 0 : _context5.t0.message, _context5.t0);\n              case 15:\n                _context5.next = 21;\n                break;\n              case 17:\n                _context5.prev = 17;\n                _context5.t1 = _context5[\"catch\"](0);\n                this.emit('error', _context5.t1);\n                throw _context5.t1;\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 17], [4, 12]]);\n      }));\n    }\n  }]);\n  return PhantomWalletAdapter;\n}(BaseMessageSignerWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BaseMessageSignerWalletAdapter, pollUntilReady, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError, WalletWindowClosedError, } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport class PhantomWalletAdapter extends BaseMessageSignerWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._disconnected = () => {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this._publicKey = null;\n                this.emit('error', new WalletDisconnectedError());\n                this.emit('disconnect');\n            }\n        };\n        this._connecting = false;\n        this._wallet = null;\n        this._publicKey = null;\n        if (!this.ready)\n            pollUntilReady(this, config.pollInterval || 1000, config.pollCount || 3);\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get ready() {\n        var _a;\n        return typeof window !== 'undefined' && !!((_a = window.solana) === null || _a === void 0 ? void 0 : _a.isPhantom);\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                const wallet = typeof window !== 'undefined' && window.solana;\n                if (!wallet)\n                    throw new WalletNotFoundError();\n                if (!wallet.isPhantom)\n                    throw new WalletNotInstalledError();\n                if (!wallet.isConnected) {\n                    // HACK: Phantom doesn't reject or emit an event if the popup is closed\n                    const handleDisconnect = wallet._handleDisconnect;\n                    try {\n                        yield new Promise((resolve, reject) => {\n                            const connect = () => {\n                                wallet.off('connect', connect);\n                                resolve();\n                            };\n                            wallet._handleDisconnect = (...args) => {\n                                wallet.off('connect', connect);\n                                reject(new WalletWindowClosedError());\n                                return handleDisconnect.apply(wallet, args);\n                            };\n                            wallet.on('connect', connect);\n                            wallet.connect().catch((reason) => {\n                                wallet.off('connect', connect);\n                                reject(reason);\n                            });\n                        });\n                    }\n                    catch (error) {\n                        if (error instanceof WalletError)\n                            throw error;\n                        throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                    }\n                    finally {\n                        wallet._handleDisconnect = handleDisconnect;\n                    }\n                }\n                if (!wallet.publicKey)\n                    throw new WalletConnectionError();\n                let publicKey;\n                try {\n                    publicKey = new PublicKey(wallet.publicKey.toBytes());\n                }\n                catch (error) {\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this._publicKey = null;\n                try {\n                    yield wallet.disconnect();\n                }\n                catch (error) {\n                    this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n                }\n            }\n            this.emit('disconnect');\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return (yield wallet.signTransaction(transaction)) || transaction;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return (yield wallet.signAllTransactions(transactions)) || transactions;\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    const { signature } = yield wallet.signMessage(message);\n                    return Uint8Array.from(signature);\n                }\n                catch (error) {\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}