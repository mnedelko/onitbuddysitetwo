{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _slicedToArray = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nvar encoding = __importStar(require(\"text-encoding-utf-8\"));\nvar TextDecoder = typeof global.TextDecoder !== 'function' ? encoding.TextDecoder : global.TextDecoder;\nvar textDecoder = new TextDecoder('utf-8', {\n  fatal: true\n});\nfunction baseEncode(value) {\n  if (typeof value === 'string') {\n    value = Buffer.from(value, 'utf8');\n  }\n  return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n  return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nvar INITIAL_LENGTH = 1024;\nvar BorshError = /*#__PURE__*/function (_Error) {\n  _inherits(BorshError, _Error);\n  var _super = _createSuper(BorshError);\n  function BorshError(message) {\n    var _this;\n    _classCallCheck(this, BorshError);\n    _this = _super.call(this, message);\n    _this.fieldPath = [];\n    _this.originalMessage = message;\n    return _this;\n  }\n  _createClass(BorshError, [{\n    key: \"addToFieldPath\",\n    value: function addToFieldPath(fieldName) {\n      this.fieldPath.splice(0, 0, fieldName);\n      // NOTE: Modifying message directly as jest doesn't use .toString()\n      this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n  }]);\n  return BorshError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.BorshError = BorshError;\n/// Binary encoder.\nvar BinaryWriter = /*#__PURE__*/function () {\n  function BinaryWriter() {\n    _classCallCheck(this, BinaryWriter);\n    this.buf = Buffer.alloc(INITIAL_LENGTH);\n    this.length = 0;\n  }\n  _createClass(BinaryWriter, [{\n    key: \"maybeResize\",\n    value: function maybeResize() {\n      if (this.buf.length < 16 + this.length) {\n        this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n      }\n    }\n  }, {\n    key: \"writeU8\",\n    value: function writeU8(value) {\n      this.maybeResize();\n      this.buf.writeUInt8(value, this.length);\n      this.length += 1;\n    }\n  }, {\n    key: \"writeU16\",\n    value: function writeU16(value) {\n      this.maybeResize();\n      this.buf.writeUInt16LE(value, this.length);\n      this.length += 2;\n    }\n  }, {\n    key: \"writeU32\",\n    value: function writeU32(value) {\n      this.maybeResize();\n      this.buf.writeUInt32LE(value, this.length);\n      this.length += 4;\n    }\n  }, {\n    key: \"writeU64\",\n    value: function writeU64(value) {\n      this.maybeResize();\n      this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n  }, {\n    key: \"writeU128\",\n    value: function writeU128(value) {\n      this.maybeResize();\n      this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n  }, {\n    key: \"writeU256\",\n    value: function writeU256(value) {\n      this.maybeResize();\n      this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n  }, {\n    key: \"writeU512\",\n    value: function writeU512(value) {\n      this.maybeResize();\n      this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n  }, {\n    key: \"writeBuffer\",\n    value: function writeBuffer(buffer) {\n      // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n      this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n      this.length += buffer.length;\n    }\n  }, {\n    key: \"writeString\",\n    value: function writeString(str) {\n      this.maybeResize();\n      var b = Buffer.from(str, 'utf8');\n      this.writeU32(b.length);\n      this.writeBuffer(b);\n    }\n  }, {\n    key: \"writeFixedArray\",\n    value: function writeFixedArray(array) {\n      this.writeBuffer(Buffer.from(array));\n    }\n  }, {\n    key: \"writeArray\",\n    value: function writeArray(array, fn) {\n      this.maybeResize();\n      this.writeU32(array.length);\n      var _iterator = _createForOfIteratorHelper(array),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var elem = _step.value;\n          this.maybeResize();\n          fn(elem);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.buf.subarray(0, this.length);\n    }\n  }]);\n  return BinaryWriter;\n}();\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n  var originalMethod = propertyDescriptor.value;\n  propertyDescriptor.value = function () {\n    try {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return originalMethod.apply(this, args);\n    } catch (e) {\n      if (e instanceof RangeError) {\n        var code = e.code;\n        if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n          throw new BorshError('Reached the end of buffer when deserializing');\n        }\n      }\n      throw e;\n    }\n  };\n}\nvar BinaryReader = /*#__PURE__*/function () {\n  function BinaryReader(buf) {\n    _classCallCheck(this, BinaryReader);\n    this.buf = buf;\n    this.offset = 0;\n  }\n  _createClass(BinaryReader, [{\n    key: \"readU8\",\n    value: function readU8() {\n      var value = this.buf.readUInt8(this.offset);\n      this.offset += 1;\n      return value;\n    }\n  }, {\n    key: \"readU16\",\n    value: function readU16() {\n      var value = this.buf.readUInt16LE(this.offset);\n      this.offset += 2;\n      return value;\n    }\n  }, {\n    key: \"readU32\",\n    value: function readU32() {\n      var value = this.buf.readUInt32LE(this.offset);\n      this.offset += 4;\n      return value;\n    }\n  }, {\n    key: \"readU64\",\n    value: function readU64() {\n      var buf = this.readBuffer(8);\n      return new bn_js_1.default(buf, 'le');\n    }\n  }, {\n    key: \"readU128\",\n    value: function readU128() {\n      var buf = this.readBuffer(16);\n      return new bn_js_1.default(buf, 'le');\n    }\n  }, {\n    key: \"readU256\",\n    value: function readU256() {\n      var buf = this.readBuffer(32);\n      return new bn_js_1.default(buf, 'le');\n    }\n  }, {\n    key: \"readU512\",\n    value: function readU512() {\n      var buf = this.readBuffer(64);\n      return new bn_js_1.default(buf, 'le');\n    }\n  }, {\n    key: \"readBuffer\",\n    value: function readBuffer(len) {\n      if (this.offset + len > this.buf.length) {\n        throw new BorshError(\"Expected buffer length \".concat(len, \" isn't within bounds\"));\n      }\n      var result = this.buf.slice(this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n  }, {\n    key: \"readString\",\n    value: function readString() {\n      var len = this.readU32();\n      var buf = this.readBuffer(len);\n      try {\n        // NOTE: Using TextDecoder to fail on invalid UTF-8\n        return textDecoder.decode(buf);\n      } catch (e) {\n        throw new BorshError(\"Error decoding UTF-8 string: \".concat(e));\n      }\n    }\n  }, {\n    key: \"readFixedArray\",\n    value: function readFixedArray(len) {\n      return new Uint8Array(this.readBuffer(len));\n    }\n  }, {\n    key: \"readArray\",\n    value: function readArray(fn) {\n      var len = this.readU32();\n      var result = Array();\n      for (var i = 0; i < len; ++i) {\n        result.push(fn());\n      }\n      return result;\n    }\n  }]);\n  return BinaryReader;\n}();\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU8\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU16\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU32\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU64\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU128\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU256\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readU512\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readString\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([handlingRangeError], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n  try {\n    // TODO: Handle missing values properly (make sure they never result in just skipped write)\n    if (typeof fieldType === 'string') {\n      writer[\"write\".concat(capitalizeFirstLetter(fieldType))](value);\n    } else if (fieldType instanceof Array) {\n      if (typeof fieldType[0] === 'number') {\n        if (value.length !== fieldType[0]) {\n          throw new BorshError(\"Expecting byte array of length \".concat(fieldType[0], \", but got \").concat(value.length, \" bytes\"));\n        }\n        writer.writeFixedArray(value);\n      } else {\n        writer.writeArray(value, function (item) {\n          serializeField(schema, fieldName, item, fieldType[0], writer);\n        });\n      }\n    } else if (fieldType.kind !== undefined) {\n      switch (fieldType.kind) {\n        case 'option':\n          {\n            if (value === null || value === undefined) {\n              writer.writeU8(0);\n            } else {\n              writer.writeU8(1);\n              serializeField(schema, fieldName, value, fieldType.type, writer);\n            }\n            break;\n          }\n        default:\n          throw new BorshError(\"FieldType \".concat(fieldType, \" unrecognized\"));\n      }\n    } else {\n      serializeStruct(schema, value, writer);\n    }\n  } catch (error) {\n    if (error instanceof BorshError) {\n      error.addToFieldPath(fieldName);\n    }\n    throw error;\n  }\n}\nfunction serializeStruct(schema, obj, writer) {\n  var structSchema = schema.get(obj.constructor);\n  if (!structSchema) {\n    throw new BorshError(\"Class \".concat(obj.constructor.name, \" is missing in schema\"));\n  }\n  if (structSchema.kind === 'struct') {\n    structSchema.fields.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        fieldName = _ref2[0],\n        fieldType = _ref2[1];\n      serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n    });\n  } else if (structSchema.kind === 'enum') {\n    var name = obj[structSchema.field];\n    for (var idx = 0; idx < structSchema.values.length; ++idx) {\n      var _structSchema$values$ = _slicedToArray(structSchema.values[idx], 2),\n        fieldName = _structSchema$values$[0],\n        fieldType = _structSchema$values$[1];\n      if (fieldName === name) {\n        writer.writeU8(idx);\n        serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        break;\n      }\n    }\n  } else {\n    throw new BorshError(\"Unexpected schema kind: \".concat(structSchema.kind, \" for \").concat(obj.constructor.name));\n  }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj) {\n  var writer = new BinaryWriter();\n  serializeStruct(schema, obj, writer);\n  return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n  try {\n    if (typeof fieldType === 'string') {\n      return reader[\"read\".concat(capitalizeFirstLetter(fieldType))]();\n    }\n    if (fieldType instanceof Array) {\n      if (typeof fieldType[0] === 'number') {\n        return reader.readFixedArray(fieldType[0]);\n      }\n      return reader.readArray(function () {\n        return deserializeField(schema, fieldName, fieldType[0], reader);\n      });\n    }\n    if (fieldType.kind === 'option') {\n      var option = reader.readU8();\n      if (option) {\n        return deserializeField(schema, fieldName, fieldType.type, reader);\n      }\n      return undefined;\n    }\n    return deserializeStruct(schema, fieldType, reader);\n  } catch (error) {\n    if (error instanceof BorshError) {\n      error.addToFieldPath(fieldName);\n    }\n    throw error;\n  }\n}\nfunction deserializeStruct(schema, classType, reader) {\n  var structSchema = schema.get(classType);\n  if (!structSchema) {\n    throw new BorshError(\"Class \".concat(classType.name, \" is missing in schema\"));\n  }\n  if (structSchema.kind === 'struct') {\n    var result = {};\n    var _iterator2 = _createForOfIteratorHelper(schema.get(classType).fields),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n          fieldName = _step2$value[0],\n          fieldType = _step2$value[1];\n        result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return new classType(result);\n  }\n  if (structSchema.kind === 'enum') {\n    var idx = reader.readU8();\n    if (idx >= structSchema.values.length) {\n      throw new BorshError(\"Enum index: \".concat(idx, \" is out of range\"));\n    }\n    var _structSchema$values$2 = _slicedToArray(structSchema.values[idx], 2),\n      _fieldName = _structSchema$values$2[0],\n      _fieldType = _structSchema$values$2[1];\n    var fieldValue = deserializeField(schema, _fieldName, _fieldType, reader);\n    return new classType(_defineProperty({}, _fieldName, fieldValue));\n  }\n  throw new BorshError(\"Unexpected schema kind: \".concat(structSchema.kind, \" for \").concat(classType.constructor.name));\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer) {\n  var reader = new BinaryReader(buffer);\n  var result = deserializeStruct(schema, classType, reader);\n  if (reader.offset < buffer.length) {\n    throw new BorshError(\"Unexpected \".concat(buffer.length - reader.offset, \" bytes after deserialized data\"));\n  }\n  return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer) {\n  var reader = new BinaryReader(buffer);\n  return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","__importStar","mod","__esModule","result","hasOwnProperty","call","__importDefault","exports","deserializeUnchecked","deserialize","serialize","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","require","bs58_1","encoding","TextDecoder","global","textDecoder","fatal","Buffer","from","default","encode","decode","INITIAL_LENGTH","message","fieldPath","originalMessage","fieldName","splice","join","Error","buf","alloc","concat","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","toArray","buffer","subarray","str","b","writeU32","array","fn","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","apply","e","RangeError","code","indexOf","offset","readUInt8","readUInt16LE","readUInt32LE","readBuffer","len","slice","readU32","Uint8Array","Array","push","prototype","capitalizeFirstLetter","string","charAt","toUpperCase","serializeField","schema","fieldType","writer","writeFixedArray","writeArray","item","kind","writeU8","type","serializeStruct","error","addToFieldPath","obj","structSchema","constructor","name","fields","map","field","idx","values","deserializeField","reader","readFixedArray","readArray","option","readU8","deserializeStruct","classType","fieldValue"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/borsh/lib/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj) {\n    const writer = new BinaryWriter();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}