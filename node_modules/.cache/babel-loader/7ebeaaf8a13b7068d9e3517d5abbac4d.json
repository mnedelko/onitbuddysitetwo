{"ast":null,"code":"import { useCallback, useMemo, useRef } from 'react';\nimport useEventCallback from './useEventCallback';\nimport useMounted from './useMounted';\n\n/**\n * useFocusManager provides a way to track and manage focus as it moves around\n * a container element. An `onChange` is fired when focus enters or leaves the\n * element, but not when it moves around inside the element, similar to\n * `pointerenter` and `pointerleave` DOM events.\n *\n * ```tsx\n * const [focused, setFocusState] = useState(false)\n *\n * const { onBlur, onFocus } = useFocusManager({\n *   onChange: nextFocused => setFocusState(nextFocused)\n * })\n *\n * return (\n *   <div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n *     {String(focused)}\n *     <input />\n *     <input />\n *\n *     <button>A button</button>\n *   </div>\n * ```\n *\n * @returns a memoized FocusController containing event handlers\n */\nexport default function useFocusManager(opts) {\n  var isMounted = useMounted();\n  var lastFocused = useRef();\n  var handle = useRef();\n  var willHandle = useEventCallback(opts.willHandle);\n  var didHandle = useEventCallback(opts.didHandle);\n  var onChange = useEventCallback(opts.onChange);\n  var isDisabled = useEventCallback(opts.isDisabled);\n  var handleFocusChange = useCallback(function (focused, event) {\n    if (event && event.persist) event.persist();\n    if (willHandle && willHandle(focused, event) === false) return;\n    clearTimeout(handle.current);\n    handle.current = window.setTimeout(function () {\n      if (focused !== lastFocused.current) {\n        if (didHandle) didHandle(focused, event); // only fire a change when unmounted if its a blur\n\n        if (isMounted() || !focused) {\n          lastFocused.current = focused;\n          onChange && onChange(focused, event);\n        }\n      }\n    });\n  }, [isMounted, willHandle, didHandle, onChange, lastFocused]);\n  var handleBlur = useCallback(function (event) {\n    if (!isDisabled()) handleFocusChange(false, event);\n  }, [handleFocusChange, isDisabled]);\n  var handleFocus = useCallback(function (event) {\n    if (!isDisabled()) handleFocusChange(true, event);\n  }, [handleFocusChange, isDisabled]);\n  return useMemo(function () {\n    return {\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    };\n  }, [handleBlur, handleFocus]);\n}","map":{"version":3,"names":["useCallback","useMemo","useRef","useEventCallback","useMounted","useFocusManager","opts","isMounted","lastFocused","handle","willHandle","didHandle","onChange","isDisabled","handleFocusChange","focused","event","persist","clearTimeout","current","window","setTimeout","handleBlur","handleFocus","onBlur","onFocus"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@restart/hooks/esm/useFocusManager.js"],"sourcesContent":["import { useCallback, useMemo, useRef } from 'react';\nimport useEventCallback from './useEventCallback';\nimport useMounted from './useMounted';\n\n/**\n * useFocusManager provides a way to track and manage focus as it moves around\n * a container element. An `onChange` is fired when focus enters or leaves the\n * element, but not when it moves around inside the element, similar to\n * `pointerenter` and `pointerleave` DOM events.\n *\n * ```tsx\n * const [focused, setFocusState] = useState(false)\n *\n * const { onBlur, onFocus } = useFocusManager({\n *   onChange: nextFocused => setFocusState(nextFocused)\n * })\n *\n * return (\n *   <div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n *     {String(focused)}\n *     <input />\n *     <input />\n *\n *     <button>A button</button>\n *   </div>\n * ```\n *\n * @returns a memoized FocusController containing event handlers\n */\nexport default function useFocusManager(opts) {\n  var isMounted = useMounted();\n  var lastFocused = useRef();\n  var handle = useRef();\n  var willHandle = useEventCallback(opts.willHandle);\n  var didHandle = useEventCallback(opts.didHandle);\n  var onChange = useEventCallback(opts.onChange);\n  var isDisabled = useEventCallback(opts.isDisabled);\n  var handleFocusChange = useCallback(function (focused, event) {\n    if (event && event.persist) event.persist();\n    if (willHandle && willHandle(focused, event) === false) return;\n    clearTimeout(handle.current);\n    handle.current = window.setTimeout(function () {\n      if (focused !== lastFocused.current) {\n        if (didHandle) didHandle(focused, event); // only fire a change when unmounted if its a blur\n\n        if (isMounted() || !focused) {\n          lastFocused.current = focused;\n          onChange && onChange(focused, event);\n        }\n      }\n    });\n  }, [isMounted, willHandle, didHandle, onChange, lastFocused]);\n  var handleBlur = useCallback(function (event) {\n    if (!isDisabled()) handleFocusChange(false, event);\n  }, [handleFocusChange, isDisabled]);\n  var handleFocus = useCallback(function (event) {\n    if (!isDisabled()) handleFocusChange(true, event);\n  }, [handleFocusChange, isDisabled]);\n  return useMemo(function () {\n    return {\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    };\n  }, [handleBlur, handleFocus]);\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACpD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,eAAe,CAACC,IAAI,EAAE;EAC5C,IAAIC,SAAS,GAAGH,UAAU,EAAE;EAC5B,IAAII,WAAW,GAAGN,MAAM,EAAE;EAC1B,IAAIO,MAAM,GAAGP,MAAM,EAAE;EACrB,IAAIQ,UAAU,GAAGP,gBAAgB,CAACG,IAAI,CAACI,UAAU,CAAC;EAClD,IAAIC,SAAS,GAAGR,gBAAgB,CAACG,IAAI,CAACK,SAAS,CAAC;EAChD,IAAIC,QAAQ,GAAGT,gBAAgB,CAACG,IAAI,CAACM,QAAQ,CAAC;EAC9C,IAAIC,UAAU,GAAGV,gBAAgB,CAACG,IAAI,CAACO,UAAU,CAAC;EAClD,IAAIC,iBAAiB,GAAGd,WAAW,CAAC,UAAUe,OAAO,EAAEC,KAAK,EAAE;IAC5D,IAAIA,KAAK,IAAIA,KAAK,CAACC,OAAO,EAAED,KAAK,CAACC,OAAO,EAAE;IAC3C,IAAIP,UAAU,IAAIA,UAAU,CAACK,OAAO,EAAEC,KAAK,CAAC,KAAK,KAAK,EAAE;IACxDE,YAAY,CAACT,MAAM,CAACU,OAAO,CAAC;IAC5BV,MAAM,CAACU,OAAO,GAAGC,MAAM,CAACC,UAAU,CAAC,YAAY;MAC7C,IAAIN,OAAO,KAAKP,WAAW,CAACW,OAAO,EAAE;QACnC,IAAIR,SAAS,EAAEA,SAAS,CAACI,OAAO,EAAEC,KAAK,CAAC,CAAC,CAAC;;QAE1C,IAAIT,SAAS,EAAE,IAAI,CAACQ,OAAO,EAAE;UAC3BP,WAAW,CAACW,OAAO,GAAGJ,OAAO;UAC7BH,QAAQ,IAAIA,QAAQ,CAACG,OAAO,EAAEC,KAAK,CAAC;QACtC;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,SAAS,EAAEG,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEJ,WAAW,CAAC,CAAC;EAC7D,IAAIc,UAAU,GAAGtB,WAAW,CAAC,UAAUgB,KAAK,EAAE;IAC5C,IAAI,CAACH,UAAU,EAAE,EAAEC,iBAAiB,CAAC,KAAK,EAAEE,KAAK,CAAC;EACpD,CAAC,EAAE,CAACF,iBAAiB,EAAED,UAAU,CAAC,CAAC;EACnC,IAAIU,WAAW,GAAGvB,WAAW,CAAC,UAAUgB,KAAK,EAAE;IAC7C,IAAI,CAACH,UAAU,EAAE,EAAEC,iBAAiB,CAAC,IAAI,EAAEE,KAAK,CAAC;EACnD,CAAC,EAAE,CAACF,iBAAiB,EAAED,UAAU,CAAC,CAAC;EACnC,OAAOZ,OAAO,CAAC,YAAY;IACzB,OAAO;MACLuB,MAAM,EAAEF,UAAU;MAClBG,OAAO,EAAEF;IACX,CAAC;EACH,CAAC,EAAE,CAACD,UAAU,EAAEC,WAAW,CAAC,CAAC;AAC/B"},"metadata":{},"sourceType":"module"}