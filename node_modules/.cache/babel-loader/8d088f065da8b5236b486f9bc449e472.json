{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12;import React,{useCallback,useEffect,useMemo,useState}from'react';//import { Link } from 'react-router-dom'\nimport{Navigation,Scrollbar,A11y}from'swiper';import{Swiper,SwiperSlide}from\"swiper/react\";import'swiper/swiper-bundle.min.css';import'swiper/swiper.min.css';import'swiper/components/navigation';import'swiper/components/pagination';//style imports\nimport styled from\"styled-components\";import confetti from\"canvas-confetti\";import{Paper,LinearProgress,Chip}from\"@material-ui/core\";//static file imports\nimport shape from'../../assets/images/backgroup-secsion/bg_section_onit.png';import tick from'../../assets/images/icon/tick.png';import cross from'../../assets/images/icon/cross.png';import discount from'../../assets/images/icon/discount.png';import imgdetail1 from'../../assets/images/previewgif/mintinggifonitbuddy.gif';//solana imports\nimport*as anchor from\"@project-serum/anchor\";import{Connection,PublicKey,LAMPORTS_PER_SOL}from\"@solana/web3.js\";import{useWallet}from\"@solana/wallet-adapter-react\";import{WalletMultiButton}from\"@solana/wallet-adapter-react-ui\";import{GatewayProvider}from'@civic/solana-gateway-react';import Countdown from\"react-countdown\";import{getAtaForMint,toDate}from'../../utility/utils';import{MintButton}from'../../MintButton';import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,createAccountsForMint,getCandyMachineState,getCollectionPDA,mintOneToken}from\"../../candy-machine\";//component imports\nimport Card from'../elements/Card';//import { getWalletAdapters } from '@solana/wallet-adapter-wallets';\n// import { AnyRecord } from 'dns';\n// import { stringify } from 'querystring';\n//@ts-ignore\nimport lightpaperpdfslider from'../../assets/docs/OnitBuddy-LightPaper.pdf';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cluster=process.env.REACT_APP_SOLANA_NETWORK.toString();var decimals=process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS?+process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS.toString():9;var splTokenName=process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME?process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME.toString():\"TOKEN\";var WalletContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n\"])));var WalletAmount=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: white;\\n  width: auto;\\n  padding: 5px 5px 5px 16px;\\n  min-width: 48px;\\n  min-height: auto;\\n  border-radius: 22px;\\n  background-color: var(--main-text-color);\\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\\n  box-sizing: border-box;\\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\\n  font-weight: 500;\\n  line-height: 1.75;\\n  text-transform: uppercase;\\n  border: 0;\\n  margin: 0;\\n  display: inline-flex;\\n  outline: 0;\\n  position: relative;\\n  align-items: center;\\n  user-select: none;\\n  vertical-align: middle;\\n  justify-content: flex-start;\\n  gap: 10px;\\n\"])));//styles\nvar Wallet=styled.ul(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  flex: 0 0 auto;\\n  margin: 0;\\n  padding: 0;\\n\"])));var ConnectButton=styled(WalletMultiButton)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  border-radius: 5px !important;\\n  padding: 6px 16px;\\n  background-color: #4E44CE;\\n  margin: 0 auto;\\n\"])));// const LogoAligner = styled.div`\n//   display: flex;\n//   align-items: center;\n//   img {\n//     max-height: 35px;\n//     margin-right: 10px;\n//   }\n// `;\nvar NFT=styled(Paper)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: white !important;\\n  min-width: 500px;\\n  padding: 5px 20px 20px 20px;\\n  flex: 1 1 auto;\\n  background-color: var(--card-background-color) !important;\\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22) !important;\\n\\n  @media (max-width: 575px) {\\n    padding: 5px 5px 5px 5px;\\n  };\\n\"])));var MintButtonContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\\n    color: #5142fc;\\n  }\\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\\n    -webkit-animation: pulse 1s;\\n    animation: pulse 1s;\\n    box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\\n  }\\n  @-webkit-keyframes pulse {\\n    0% {\\n      box-shadow: 0 0 0 0 #ef8f6e;\\n    }\\n  }\\n  @keyframes pulse {\\n    0% {\\n      box-shadow: 0 0 0 0 #ef8f6e;\\n    }\\n  }\\n\\n  justify-content: center;\\n\\n  @media (max-width: 575px) {\\n    flex: 1 1 auto;\\n    justify-content: center;\\n    h1{\\n    font-size: 30px !important;\\n    };\\n};\\n\"])));// const GoldTitle = styled.h2`\n//   color: var(--title-text-color);\n// `;\n// const Des = styled(NFT)`\n//   text-align: left;\n//   padding-top: 0px;\n//   max-width: 500px;\n// `;\nvar SolExplorerLink=styled.a(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: var(--title-text-color);\\n  border-bottom: 1px solid var(--title-text-color);\\n  font-weight: bold;\\n  list-style-image: none;\\n  list-style-position: outside;\\n  list-style-type: none;\\n  outline: none;\\n  text-decoration: none;\\n  text-size-adjust: 100%;\\n  :hover {\\n    border-bottom: 2px solid var(--title-text-color);\\n  }\\n\"])));var MainContainer=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  color: white !important;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  margin-right: 4%;\\n  margin-left: 4%;\\n  text-align: center;\\n  justify-content: center;\\n  @media (max-width: 575px) {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    margin-right: 0;\\n    margin-left: 0;\\n  };\\n\"])));var MintContainer=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\ndisplay: flex;\\nflex-direction: row;\\nflex: 1 1 auto;\\nflex-wrap: wrap;\\ngap: 20px;\\n@media (max-width: 575px) {\\n    gap: 0px;\\n    justify-content: center;\\n  };\\n\\n\"])));// const DesContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   flex: 1 1 auto;\n//   gap: 20px;\n// `;\nvar Price=styled(Chip)(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  display: block;\\n  transform: translate(-50%);\\n  margin: 5px;\\n  font-weight: bold;\\n  font-size: 1.2em !important;\\n  font-family: 'Patrick Hand', cursive !important;\\n\"])));// const Image = styled.img`\n//   height: 400px;\n//   width: auto;\n//   border-radius: 7px;\n//   box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\n// `;\nvar BorderLinearProgress=styled(LinearProgress)(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  margin: 20px;\\n  height: 10px !important;\\n  border-radius: 30px;\\n  border: 2px solid white;\\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\\n  background-color:var(--main-text-color) !important;\\n  \\n  > div.MuiLinearProgress-barColorPrimary{\\n    background-color:var(--title-text-color) !important;\\n  }\\n  > div.MuiLinearProgress-bar1Determinate {\\n    border-radius: 30px !important;\\n    background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\\n  }\\n  @media (max-width: 575px) {\\n    justify-content: center;\\n  };\\n\"])));// const WalletAmount2 = styled.div`\n//   color: white;\n//   width: auto;\n//   padding: 5px 5px 5px 16px;\n//   min-width: 48px;\n//   min-height: auto;\n//   font-weight: 500;\n//   line-height: 1.75;\n//   text-transform: uppercase;\n//   margin: 0;\n//   display: inline-flex;\n//   outline: 0;\n//   position: relative;\n//   align-items: center;\n//   user-select: none;\n//   vertical-align: middle;\n//   justify-content: flex-start;\n//   gap: 10px;\n// `;\nvar ConnectSliderButton=styled(WalletMultiButton)(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n    font-weight       : 700;\\n    font-size         : 14px;\\n    line-height       : 22px;\\n    margin-left       : 20px;\\n    position          : relative;\\n    -webkit-transition: all 0.3s ease;\\n    -moz-transition   : all 0.3s ease;\\n    -ms-transition    : all 0.3s ease;\\n    -o-transition     : all 0.3s ease;\\n    transition        : all 0.3s ease;\\n\"])));//interface\nvar SliderStyle2=function SliderStyle2(props){//State Definitions\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isMinting=_useState4[0],setIsMinting=_useState4[1];// true when user got to press MINT\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isActive=_useState6[0],setIsActive=_useState6[1];// true when countdown completes or whitelisted\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),solanaExplorerLink=_useState8[0],setSolanaExplorerLink=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),itemsAvailable=_useState10[0],setItemsAvailable=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),itemsRedeemed=_useState12[0],setItemsRedeemed=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),itemsRemaining=_useState14[0],setItemsRemaining=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isSoldOut=_useState16[0],setIsSoldOut=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),payWithSplToken=_useState18[0],setPayWithSplToken=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),price=_useState20[0],setPrice=_useState20[1];var _useState21=useState(\"SOL\"),_useState22=_slicedToArray(_useState21,2),priceLabel=_useState22[0],setPriceLabel=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),whitelistPrice=_useState24[0],setWhitelistPrice=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),whitelistEnabled=_useState26[0],setWhitelistEnabled=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),isBurnToken=_useState28[0],setIsBurnToken=_useState28[1];var _useState29=useState(0),_useState30=_slicedToArray(_useState29,2),whitelistTokenBalance=_useState30[0],setWhitelistTokenBalance=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),isEnded=_useState32[0],setIsEnded=_useState32[1];var _useState33=useState(),_useState34=_slicedToArray(_useState33,2),endDate=_useState34[0],setEndDate=_useState34[1];var _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),isPresale=_useState36[0],setIsPresale=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),isWLOnly=_useState38[0],setIsWLOnly=_useState38[1];var _useState39=useState(0),_useState40=_slicedToArray(_useState39,2),priceDiscount=_useState40[0],setPriceDiscount=_useState40[1];var _useState41=useState({open:false,message:\"\",severity:undefined}),_useState42=_slicedToArray(_useState41,2),alertState=_useState42[0],setAlertState=_useState42[1];var _useState43=useState(true),_useState44=_slicedToArray(_useState43,2),needTxnSplit=_useState44[0],setNeedTxnSplit=_useState44[1];var _useState45=useState(),_useState46=_slicedToArray(_useState45,2),setupTxn=_useState46[0],setSetupTxn=_useState46[1];//This defines the wallet\nvar wallet=useWallet();var _useState47=useState(),_useState48=_slicedToArray(_useState47,2),candyMachine=_useState48[0],setCandyMachine=_useState48[1];var rpcUrl=props.rpcHost;var solFeesEstimation=0.012;// approx of account creation fees\n//Logging:\n// function consoleThis(): any {\n//     console.log(\"these are the variables\");\n//     console.log('balance' + ' ' + balance);\n//     console.log('isMinting' + ' ' + isMinting);\n//     console.log('isActive' + ' ' + isActive);\n//     console.log('GoLiveDate' + ' '+ toDate(candyMachine?.state.goLiveDate))\n//     console.log('solanaExplorerLink' + ' ' + solanaExplorerLink);\n//     console.log('itemsAvailable' + ' ' + itemsAvailable); \n//     console.log('itemsRedeemed' + ' ' + itemsRedeemed);\n//     console.log('itemsRemaining' + ' ' + itemsRemaining);\n//     console.log('isSoldOut' + ' ' + isSoldOut);\n//     console.log('payWithSplToken' + ' ' + payWithSplToken);\n//     console.log('price' + ' ' + price );\n//     console.log('priceLabel' + ' ' + priceLabel);\n//     console.log('whitelistPrice' + ' ' + whitelistPrice);\n//     console.log('whitelistEnabled' + ' ' + whitelistEnabled );\n//     console.log('isBurnToken' + ' ' + JSON.stringify(isBurnToken));\n//     console.log('whitelistTokenBalance' + ' ' + whitelistTokenBalance);\n//     console.log('isEnded' + ' ' + isEnded );\n//     console.log('endDate' + ' ' + endDate);\n//     console.log('isPresale' + ' ' + isPresale);\n//     console.log('isWLOnly' + ' ' + isWLOnly );\n//     console.log('alertState' + ' ' + JSON.stringify(alertState));\n//     console.log('rpcUrl' + ' ' + rpcUrl);\n// }\n//State Definitions for the Slider Contents\nvar _useState49=useState([{subtitle:'HAND-CRAFTED COLLECTION OF',title:'8080 UNIQUE NFTs',description:'With the goal to deliver the world\\'s first transmograble NFTs based on an open-source, community-driven design system.'}]),_useState50=_slicedToArray(_useState49,1),data=_useState50[0];var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var commitment,connection,_cndy$state$endSettin,_cndy$state$endSettin2,_cndy$state$whitelist3,_cndy$state$whitelist4,_cndy$state$gatekeepe,cndy,divider,_cndy$state$whitelist,_cndy$state$whitelist2,_balance,_tokenBalance$value,tokenBalance,limit,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,txnEstimate,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:commitment=_args.length>0&&_args[0]!==undefined?_args[0]:'confirmed';if(anchorWallet){_context.next=3;break;}return _context.abrupt(\"return\");case 3:connection=new Connection(props.rpcHost,commitment);if(!props.candyMachineId){_context.next=64;break;}_context.prev=5;_context.next=8;return getCandyMachineState(anchorWallet,props.candyMachineId,props.connection);case 8:cndy=_context.sent;//This is where we are setting the candymachine attributes\nsetCandyMachine(cndy);//console.log(\"this is the candymachine payload\");\n//console.log(cndy);\nsetItemsAvailable(cndy.state.itemsAvailable);setItemsRemaining(cndy.state.itemsRemaining);setItemsRedeemed(cndy.state.itemsRedeemed);//this is where we are implementing the decimals\ndivider=1;if(decimals){divider=+('1'+new Array(decimals).join('0').slice()+'0');}// detect if using spl-token to mint\nif(cndy.state.tokenMint){setPayWithSplToken(true);// Customize your SPL-TOKEN Label HERE\n// TODO: get spl-token metadata name\nsetPriceLabel(splTokenName);setPrice(cndy.state.price.toNumber()/divider);setWhitelistPrice(cndy.state.price.toNumber()/divider);}else{setPrice(cndy.state.price.toNumber()/LAMPORTS_PER_SOL);setWhitelistPrice(cndy.state.price.toNumber()/LAMPORTS_PER_SOL);}// fetch whitelist token balance\nif(!cndy.state.whitelistMintSettings){_context.next=42;break;}setWhitelistEnabled(true);//This is a status that states that the candymanchine has a whitelist\nsetIsBurnToken(cndy.state.whitelistMintSettings.mode.burnEveryTime);setIsPresale(cndy.state.whitelistMintSettings.presale);setIsWLOnly(!isPresale&&cndy.state.whitelistMintSettings.discountPrice===null);if(cndy.state.whitelistMintSettings.discountPrice!==null&&cndy.state.whitelistMintSettings.discountPrice!==cndy.state.price){if(cndy.state.tokenMint){setWhitelistPrice(((_cndy$state$whitelist=cndy.state.whitelistMintSettings.discountPrice)===null||_cndy$state$whitelist===void 0?void 0:_cndy$state$whitelist.toNumber())/divider);}else{setWhitelistPrice(((_cndy$state$whitelist2=cndy.state.whitelistMintSettings.discountPrice)===null||_cndy$state$whitelist2===void 0?void 0:_cndy$state$whitelist2.toNumber())/LAMPORTS_PER_SOL);}}_balance=0;_context.prev=23;_context.t0=props.connection;_context.next=27;return getAtaForMint(cndy.state.whitelistMintSettings.mint,anchorWallet.publicKey);case 27:_context.t1=_context.sent[0];_context.next=30;return _context.t0.getTokenAccountBalance.call(_context.t0,_context.t1);case 30:tokenBalance=_context.sent;_balance=(tokenBalance===null||tokenBalance===void 0?void 0:(_tokenBalance$value=tokenBalance.value)===null||_tokenBalance$value===void 0?void 0:_tokenBalance$value.uiAmount)||0;_context.next=38;break;case 34:_context.prev=34;_context.t2=_context[\"catch\"](23);console.error(_context.t2);_balance=0;case 38:if(commitment!==\"processed\"){setWhitelistTokenBalance(_balance);}setIsActive(isPresale&&!isEnded&&_balance>0);_context.next=43;break;case 42:setWhitelistEnabled(false);case 43:// end the mint when date is reached\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin=cndy.state.endSettings)!==null&&_cndy$state$endSettin!==void 0&&_cndy$state$endSettin.endSettingType.date){setEndDate(toDate(cndy.state.endSettings.number));if(cndy.state.endSettings.number.toNumber()<new Date().getTime()/1000){setIsEnded(true);setIsActive(false);}}// end the mint when amount is reached\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin2=cndy.state.endSettings)!==null&&_cndy$state$endSettin2!==void 0&&_cndy$state$endSettin2.endSettingType.amount){limit=Math.min(cndy.state.endSettings.number.toNumber(),cndy.state.itemsAvailable);setItemsAvailable(limit);if(cndy.state.itemsRedeemed<limit){setItemsRemaining(limit-cndy.state.itemsRedeemed);}else{setItemsRemaining(0);cndy.state.isSoldOut=true;setIsEnded(true);}}else{setItemsRemaining(cndy.state.itemsRemaining);}if(cndy.state.isSoldOut){setIsActive(false);}_context.next=48;return getCollectionPDA(props.candyMachineId);case 48:_yield$getCollectionP=_context.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context.next=53;return connection.getAccountInfo(collectionPDA);case 53:collectionPDAAccount=_context.sent;txnEstimate=892+(!!collectionPDAAccount&&cndy.state.retainAuthority?182:0)+(cndy.state.tokenMint?66:0)+(cndy.state.whitelistMintSettings?34:0)+((_cndy$state$whitelist3=cndy.state.whitelistMintSettings)!==null&&_cndy$state$whitelist3!==void 0&&(_cndy$state$whitelist4=_cndy$state$whitelist3.mode)!==null&&_cndy$state$whitelist4!==void 0&&_cndy$state$whitelist4.burnEveryTime?34:0)+(cndy.state.gatekeeper?33:0)+((_cndy$state$gatekeepe=cndy.state.gatekeeper)!==null&&_cndy$state$gatekeepe!==void 0&&_cndy$state$gatekeepe.expireOnUse?66:0);setNeedTxnSplit(txnEstimate>1230);_context.next=62;break;case 58:_context.prev=58;_context.t3=_context[\"catch\"](5);if(_context.t3 instanceof Error){if(_context.t3.message===\"Account does not exist \".concat(props.candyMachineId)){setAlertState({open:true,message:\"Couldn't fetch candy machine state from candy machine with address: \".concat(props.candyMachineId,\", using rpc: \").concat(props.rpcHost,\"! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!\"),severity:'error',hideDuration:null});}else if(_context.t3.message.startsWith('failed to get info about account')){setAlertState({open:true,message:\"Couldn't fetch candy machine state with rpc: \".concat(props.rpcHost,\"! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!\"),severity:'error',hideDuration:null});}}else{setAlertState({open:true,message:\"\".concat(_context.t3),severity:'error',hideDuration:null});}console.log('error');case 62:_context.next=65;break;case 64:setAlertState({open:true,message:\"Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!\",severity:'error',hideDuration:null});case 65:case\"end\":return _context.stop();}}},_callee,null,[[5,58],[23,34]]);})),[anchorWallet,props.candyMachineId,props.rpcHost,isEnded,isPresale,props.connection]);var renderGoLiveDateCounter=function renderGoLiveDateCounter(_ref2){var days=_ref2.days,hours=_ref2.hours,minutes=_ref2.minutes,seconds=_ref2.seconds;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Card,{elevation:1,children:[/*#__PURE__*/_jsx(\"h1\",{children:days}),\"Days\"]}),/*#__PURE__*/_jsxs(Card,{elevation:1,children:[/*#__PURE__*/_jsx(\"h1\",{children:hours}),\"Hours\"]}),/*#__PURE__*/_jsxs(Card,{elevation:1,children:[/*#__PURE__*/_jsx(\"h1\",{children:minutes}),\"Mins\"]}),/*#__PURE__*/_jsxs(Card,{elevation:1,children:[/*#__PURE__*/_jsx(\"h1\",{children:seconds}),\"Secs\"]})]});};//renders the EndDayCounter\nvar renderEndDateCounter=function renderEndDateCounter(_ref3){var days=_ref3.days,hours=_ref3.hours,minutes=_ref3.minutes;var label=\"\";if(days>0){label+=days+\" days \";}if(hours>0){label+=hours+\" hours \";}label+=minutes+1+\" minutes left to MINT.\";return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{children:label})});};//Displays success if the mint succeeded\nfunction displaySuccess(mintPublicKey){var qty=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var remaining=itemsRemaining-qty;setItemsRemaining(remaining);setIsSoldOut(remaining===0);if(isBurnToken&&whitelistTokenBalance&&whitelistTokenBalance>0){var _balance2=whitelistTokenBalance-qty;setWhitelistTokenBalance(_balance2);setIsActive(isPresale&&!isEnded&&_balance2>0);}setSetupTxn(undefined);setItemsRedeemed(itemsRedeemed+qty);if(!payWithSplToken&&balance&&balance>0){setBalance(balance-(whitelistEnabled?whitelistPrice:price)*qty-solFeesEstimation);}//The below link is the link we can view the successful mint on via solscan\nsetSolanaExplorerLink(cluster===\"devnet\"||cluster===\"testnet\"?\"https://solscan.io/token/\"+mintPublicKey+\"?cluster=\"+cluster:\"https://solscan.io/token/\"+mintPublicKey);setIsMinting(false);throwConfetti();};function throwConfetti(){confetti({particleCount:400,spread:70,origin:{y:0.6}});}var onMint=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var beforeTransactions,afterTransactions,_setupMint,_setupState$mint,setupMint,_status,setupState,mint,mintResult,status,metadataStatus,message,_args2=arguments;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:beforeTransactions=_args2.length>0&&_args2[0]!==undefined?_args2[0]:[];afterTransactions=_args2.length>1&&_args2[1]!==undefined?_args2[1]:[];_context2.prev=2;if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context2.next=37;break;}setIsMinting(true);if(!(needTxnSplit&&setupTxn===undefined)){_context2.next=22;break;}setAlertState({open:true,message:'Please validate account setup transaction',severity:'info'});_context2.next=9;return createAccountsForMint(candyMachine,wallet.publicKey);case 9:setupMint=_context2.sent;_status={err:true};if(!setupMint.transaction){_context2.next=15;break;}_context2.next=14;return awaitTransactionSignatureConfirmation(setupMint.transaction,props.txTimeout,props.connection,true);case 14:_status=_context2.sent;case 15:if(!(_status&&!_status.err)){_context2.next=20;break;}setSetupTxn(setupMint);setAlertState({open:true,message:'Setup transaction succeeded! You can now validate mint transaction',severity:'info'});_context2.next=22;break;case 20:setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});return _context2.abrupt(\"return\");case 22:setupState=(_setupMint=setupMint)!==null&&_setupMint!==void 0?_setupMint:setupTxn;mint=(_setupState$mint=setupState===null||setupState===void 0?void 0:setupState.mint)!==null&&_setupState$mint!==void 0?_setupState$mint:anchor.web3.Keypair.generate();_context2.next=26;return mintOneToken(candyMachine,wallet.publicKey,mint,beforeTransactions,afterTransactions,setupState);case 26:mintResult=_context2.sent;status={err:true};metadataStatus=null;if(!mintResult){_context2.next=36;break;}_context2.next=32;return awaitTransactionSignatureConfirmation(mintResult.mintTxId,props.txTimeout,props.connection,true);case 32:status=_context2.sent;_context2.next=35;return candyMachine.program.provider.connection.getAccountInfo(mintResult.metadataKey,'processed');case 35:metadataStatus=_context2.sent;case 36:if(status&&!status.err&&metadataStatus){setAlertState({open:true,message:'Congratulations! Mint succeeded!',severity:'success'});// update front-end amounts\ndisplaySuccess(mint.publicKey);refreshCandyMachineState('processed');}else if(status&&!status.err){setAlertState({open:true,message:'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',severity:'error',hideDuration:8000});refreshCandyMachineState();}else{setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});refreshCandyMachineState();}case 37:_context2.next=44;break;case 39:_context2.prev=39;_context2.t0=_context2[\"catch\"](2);// TODO: blech:\nmessage=_context2.t0.msg||'Minting failed! Please try again!';if(!_context2.t0.msg){if(!_context2.t0.message){message='Transaction Timeout! Please try again.';}else if(_context2.t0.message.indexOf('0x138')){}else if(_context2.t0.message.indexOf('0x137')){message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf('0x135')){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){message=\"SOLD OUT!\";}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:\"error\"});case 44:_context2.prev=44;setIsMinting(false);return _context2.finish(44);case 47:case\"end\":return _context2.stop();}}},_callee2,null,[[2,39,44,47]]);}));return function onMint(){return _ref4.apply(this,arguments);};}();useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var _balance3;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!anchorWallet){_context3.next=5;break;}_context3.next=3;return props.connection.getBalance(anchorWallet.publicKey);case 3:_balance3=_context3.sent;setBalance(_balance3/LAMPORTS_PER_SOL);case 5:case\"end\":return _context3.stop();}}},_callee3);}))();},[anchorWallet,props.connection]);//This refreshes the candymachine state\nuseEffect(function(){refreshCandyMachineState();},[anchorWallet,props.candyMachineId,props.connection,isEnded,isPresale,refreshCandyMachineState]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{className:\"flat-title-page home5 mainslider\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"bg_h5\",src:shape,alt:\"Axies\"}),/*#__PURE__*/_jsx(\"div\",{className:\"swiper-container mainslider auctions\",children:/*#__PURE__*/_jsx(Swiper//@ts-ignore\n,{modules:[Navigation,Scrollbar,A11y],spaceBetween:0,slidesPerView:1,navigation:{nextEl:'.swiper-button-next',prevEl:'.swiper-button-prev',disabledClass:'disabled_swiper_button'},scrollbar:{draggable:true},children:!anchorWallet?data.map(function(item,index){return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(SliderItem,{item:item})},index);}):data.map(function(item,index){return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(SliderItem2,{goLiveDate:candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.goLiveDate,isGatekeeper:candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.gatekeeper//consoleThis ={consoleThis}\n,wallet:anchorWallet,balance:balance,setBalance:setBalance,isMinting:isMinting,setIsMinting:setIsMinting,isActive:isActive,setIsActive:setIsActive,solanaExplorerLink:solanaExplorerLink,setSolanaExplorerLink:setSolanaExplorerLink,itemsAvailable:itemsAvailable,setItemsAvailable:setItemsAvailable,itemsRedeemed:itemsRedeemed,setItemsRedeemed:setItemsRedeemed,itemsRemaining:itemsRemaining,setItemsRemaining:setItemsRemaining,isSoldOut:isSoldOut,setIsSoldOut:setIsSoldOut,payWithSplToken:payWithSplToken,setPayWithSplToken:setPayWithSplToken,price:price,setPrice:setPrice,priceDiscount:priceDiscount//COMMENT: check this out\n,setPriceDiscount:setPriceDiscount//COMMENT: check this out\n,priceLabel:priceLabel,setPriceLabel:setPriceLabel,whitelistPrice:whitelistPrice,setWhitelistPrice:setWhitelistPrice,whitelistEnabled:whitelistEnabled,setWhitelistEnabled:setWhitelistEnabled,isBurnToken:isBurnToken,setIsBurnToken:setIsBurnToken,whitelistTokenBalance:whitelistTokenBalance,setWhitelistTokenBalance:setWhitelistTokenBalance,isEnded:isEnded,setIsEnded:setIsEnded,endDate:endDate,setEndDate:setEndDate,isPresale:isPresale,setIsPresale:setIsPresale,isWLOnly:isWLOnly,setIsWLOnly:setIsWLOnly,alertState:alertState,setAlertState:setAlertState,rpcUrl:rpcUrl,renderGoLiveDateCounter:renderGoLiveDateCounter,renderEndDateCounter:renderEndDateCounter,candyMachine:candyMachine,onMint:onMint})},index);})})})]})});};var SliderItem=function SliderItem(props){return/*#__PURE__*/_jsx(\"div\",{className:\"swiper-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"swiper-slide\",children:/*#__PURE__*/_jsx(\"div\",{className:\"slider-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"themesflat-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"wrap-heading flat-slider\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mb-11\",children:/*#__PURE__*/_jsx(\"span\",{className:\"fill\",children:props.item.subtitle})}),/*#__PURE__*/_jsx(\"h1\",{className:\"heading\",children:props.item.title}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-heading mg-t-7 mg-bt-39\",children:props.item.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flat-bt-slider flex style2\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://discord.gg/RWs3DP2\",target:\"_blank\",rel:\"noreferrer\",className:\"sc-button header-slider style style-1 rocket fl-button pri-1\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Join the DAO\"})}),/*#__PURE__*/_jsx(\"a\",{href:lightpaperpdfslider,target:\"_blank\",rel:\"noreferrer\",className:\"sc-button header-slider style style-1 note fl-button pri-1\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Light Paper\"})}),/*#__PURE__*/_jsx(ConnectSliderButton,{className:\"sc-button header-slider style style-1 fl-button pri-1\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Mint\"})})]})]})})})})});};//@ts-ignore\nvar SliderItem2=function SliderItem2(props){var _props$candyMachine,_props$candyMachine$s,_props$candyMachine$s2,_props$candyMachine2,_props$candyMachine2$,_props$candyMachine2$2;var wallet=props.wallet;//<- needs a look!\n//console.log('This is the console log');\n//console.log(wallet);\n//console.log(props.isActive);\n//props.consoleThis();\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"swiper-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"swiper-slide\",children:/*#__PURE__*/_jsx(\"div\",{className:\"slider-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tf-section2 tf-item-details\",children:/*#__PURE__*/_jsx(\"div\",{className:\"themesflat-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-xl-6 col-md-12 col-sm-6\",children:/*#__PURE__*/_jsxs(MainContainer,{children:[/*#__PURE__*/_jsx(WalletContainer,{children:/*#__PURE__*/_jsx(Wallet,{children:wallet?/*#__PURE__*/_jsxs(WalletAmount,{children:[\"Your wallet balance: \",(props.balance||0).toLocaleString(),\" SOL\"]}):/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"})})}),/*#__PURE__*/_jsx(MintContainer,{children:/*#__PURE__*/_jsx(\"div\",{className:\"descontainer\",children:/*#__PURE__*/_jsxs(NFT,{elevation:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"OnitBuddy\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Price,{label:props.whitelistEnabled&&props.whitelistTokenBalance>0?props.whitelistPrice+\" \"+props.priceLabel:props.price+\" \"+props.priceLabel}),/*#__PURE__*/_jsx(\"div\",{className:\"content-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"media\",children:/*#__PURE__*/_jsx(\"img\",{src:imgdetail1,alt:\"Axies\"})})})]}),/*#__PURE__*/_jsx(\"br\",{}),wallet&&props.isActive&&props.whitelistEnabled&&props.whitelistTokenBalance>0&&props.isBurnToken&&/*#__PURE__*/_jsxs(\"h3\",{children:[\"You own \",props.whitelistTokenBalance,\" WL mint \",props.whitelistTokenBalance>1?\"tokens\":\"token\",\".\"]}),wallet&&props.isActive&&props.whitelistEnabled&&props.whitelistTokenBalance>0&&!props.isBurnToken&&/*#__PURE__*/_jsx(\"h3\",{children:\"You are whitelisted and allowed to mint.\"}),wallet&&props.isActive&&props.endDate&&Date.now()<props.endDate.getTime()&&/*#__PURE__*/_jsx(Countdown,{date:toDate((_props$candyMachine=props.candyMachine)===null||_props$candyMachine===void 0?void 0:(_props$candyMachine$s=_props$candyMachine.state)===null||_props$candyMachine$s===void 0?void 0:(_props$candyMachine$s2=_props$candyMachine$s.endSettings)===null||_props$candyMachine$s2===void 0?void 0:_props$candyMachine$s2.number),onMount:function onMount(_ref6){var completed=_ref6.completed;return completed&&props.setIsEnded(true);},onComplete:function onComplete(){props.setIsEnded(true);},renderer:props.renderEndDateCounter}),wallet&&props.isActive&&/*#__PURE__*/_jsxs(\"h3\",{children:[\"TOTAL MINTED : \",props.itemsRedeemed,\" / \",props.itemsAvailable]}),wallet&&props.isActive&&/*#__PURE__*/_jsx(BorderLinearProgress,{variant:\"determinate\",value:100-props.itemsRemaining*100/props.itemsAvailable}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(MintButtonContainer,{children:!props.isActive&&!props.isEnded&&props.goLiveDate&&(!props.isWLOnly||props.whitelistTokenBalance>0)?/*#__PURE__*/_jsx(Countdown,{date:toDate(props.goLiveDate),onMount:function onMount(_ref7){var completed=_ref7.completed;return completed&&props.setIsActive(!props.isEnded);},onComplete:function onComplete(){props.setIsActive(!props.isEnded);},renderer:props.renderGoLiveDateCounter}):!wallet?\"this is another placeholder\"// <ConnectButton>Connect Wallet</ConnectButton>\n:!props.isWLOnly||props.whitelistTokenBalance>0?props.isGatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction}// // Replace with following when added\n// gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n,gatekeeperNetwork:(_props$candyMachine2=props.candyMachine)===null||_props$candyMachine2===void 0?void 0:(_props$candyMachine2$=_props$candyMachine2.state)===null||_props$candyMachine2$===void 0?void 0:(_props$candyMachine2$2=_props$candyMachine2$.gatekeeper)===null||_props$candyMachine2$2===void 0?void 0:_props$candyMachine2$2.gatekeeperNetwork// This is the ignite (captcha) network\n/// Don't need this for mainnet\n,clusterUrl:props.rpcUrl,cluster:cluster,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:props.candyMachine,isMinting:props.isMinting,isActive:props.isActive,isEnded:props.isEnded,isSoldOut:props.isSoldOut,onMint:props.onMint})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:props.candyMachine,isMinting:props.isMinting,isActive:props.isActive,isEnded:props.isEnded,isSoldOut:props.isSoldOut,onMint:props.onMint}):/*#__PURE__*/_jsx(\"h2\",{children:\"Whitelisted Members Mint Only.\"})}),/*#__PURE__*/_jsx(\"br\",{}),wallet&&props.isActive&&props.solanaExplorerLink&&/*#__PURE__*/_jsx(SolExplorerLink,{href:props.solanaExplorerLink,target:\"_blank\",children:\"View on Solscan\"})]})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-xl-6 col-md-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sc-item-details\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"style2 mt-xl-4\",children:\"Whitelist Presale starts Jan 23rd\"}),/*#__PURE__*/_jsx(\"div\",{className:\"meta-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"right mt-xl-0\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mt-xl-1\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"client-infor sc-card-product\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"meta-info\",children://The below used to say wallet && props.isActive && props.whitelistTokenBalance > 0 ? <- We removed props.isActive due to whitelist use case\nwallet&&props.whitelistTokenBalance>0?/*#__PURE__*/_jsxs(\"div\",{className:\"author\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:tick,alt:\"Axies\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Whitelist Status\"}),/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsx(\"div\",{children:\"You have Whitelist Tickets\"})})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"author\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:cross,alt:\"Axies\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Whitelist Status\"}),/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsx(\"div\",{children:\"No Whitelist Tickets.\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"meta-info\",children:wallet&&props.isActive&&props.whitelistEnabled?/*#__PURE__*/_jsxs(\"div\",{className:\"author\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:discount,alt:\"Axies\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Presale Discount if whitelisted\"}),props.isWLOnly?/*#__PURE__*/_jsxs(\"h6\",{children:[\" \",/*#__PURE__*/_jsxs(\"div\",{children:[\" \",props.whitelistPrice*100+'%']}),\" \"]}):/*#__PURE__*/_jsxs(\"h6\",{children:[\" \",/*#__PURE__*/_jsxs(\"div\",{children:[\" \",props.whitelistPrice/props.price*100+'%']})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"author\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:discount,alt:\"Axies\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Presale Discount if whitelisted\"}),props.isWLOnly?/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[\" \",props.whitelistPrice*100+'%']})}):/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[\" \",props.whitelistPrice/props.price*100+'%']})})]})]})})]}),/*#__PURE__*/_jsx(\"p\",{children:\" Join our Discord to have your wallet address whitelisted. Community members who become buddies will receive a Whitelist Token airdropped into their wallets. From there you will be able to mint your OnitBuddy NFT at a discounted price. The earlier you join the whitelist the higher the number of NFTs you get to mint. Once whitelisted you can mint your OnitBuddies here.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"meta-item-details style2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item meta-price\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"heading\",children:\"Price per NFT\"}),/*#__PURE__*/_jsx(\"div\",{className:\"price\",children:/*#__PURE__*/_jsx(\"div\",{className:\"price-box\",children:/*#__PURE__*/_jsx(\"h5\",{children:props.whitelistEnabled&&props.whitelistTokenBalance>0?props.whitelistPrice+\" \"+props.priceLabel:props.price+\" \"+props.priceLabel})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item count-down\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"heading style-2\",children:\"Your Wallet balance\"}),/*#__PURE__*/_jsx(\"div\",{className:\"price-box\",children:wallet?/*#__PURE__*/_jsxs(\"h5\",{children:[(props.balance||0).toLocaleString(),\" SOL\"]}):/*#__PURE__*/_jsx(\"span\",{children:\"Balance Not Available\"})})]})]}),wallet&&props.whitelistEnabled&&props.whitelistTokenBalance>0?/*#__PURE__*/_jsx(\"div\",{}):/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",rel:\"noreferrer\",href:\"https://discord.gg/RWs3DP2\",className:\"sc-button loadmore style bag fl-button pri-3\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Get Whitelisted\"})})]})})})]})})})})})});};export default SliderStyle2;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Navigation","Scrollbar","A11y","Swiper","SwiperSlide","styled","confetti","Paper","LinearProgress","Chip","shape","tick","cross","discount","imgdetail1","anchor","Connection","PublicKey","LAMPORTS_PER_SOL","useWallet","WalletMultiButton","GatewayProvider","Countdown","getAtaForMint","toDate","MintButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","createAccountsForMint","getCandyMachineState","getCollectionPDA","mintOneToken","Card","lightpaperpdfslider","cluster","process","env","REACT_APP_SOLANA_NETWORK","toString","decimals","REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS","splTokenName","REACT_APP_SPL_TOKEN_TO_MINT_NAME","WalletContainer","div","WalletAmount","Wallet","ul","ConnectButton","NFT","MintButtonContainer","SolExplorerLink","a","MainContainer","MintContainer","Price","BorderLinearProgress","ConnectSliderButton","SliderStyle2","props","balance","setBalance","isMinting","setIsMinting","isActive","setIsActive","solanaExplorerLink","setSolanaExplorerLink","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","isSoldOut","setIsSoldOut","payWithSplToken","setPayWithSplToken","price","setPrice","priceLabel","setPriceLabel","whitelistPrice","setWhitelistPrice","whitelistEnabled","setWhitelistEnabled","isBurnToken","setIsBurnToken","whitelistTokenBalance","setWhitelistTokenBalance","isEnded","setIsEnded","endDate","setEndDate","isPresale","setIsPresale","isWLOnly","setIsWLOnly","priceDiscount","setPriceDiscount","open","message","severity","undefined","alertState","setAlertState","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","wallet","candyMachine","setCandyMachine","rpcUrl","rpcHost","solFeesEstimation","subtitle","title","description","data","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","commitment","connection","candyMachineId","cndy","state","divider","Array","join","slice","tokenMint","toNumber","whitelistMintSettings","mode","burnEveryTime","presale","discountPrice","mint","getTokenAccountBalance","tokenBalance","value","uiAmount","console","error","endSettings","endSettingType","date","number","Date","getTime","amount","limit","Math","min","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","gatekeeper","expireOnUse","Error","hideDuration","startsWith","log","renderGoLiveDateCounter","days","hours","minutes","seconds","renderEndDateCounter","label","displaySuccess","mintPublicKey","qty","remaining","throwConfetti","particleCount","spread","origin","y","onMint","beforeTransactions","afterTransactions","connected","program","setupMint","status","err","transaction","txTimeout","setupState","web3","Keypair","generate","mintResult","metadataStatus","mintTxId","provider","metadataKey","msg","indexOf","code","getBalance","nextEl","prevEl","disabledClass","draggable","map","item","index","goLiveDate","SliderItem","SliderItem2","toLocaleString","now","completed","isGatekeeper","gatekeeperNetwork","autoShowModal"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/src/components/slider/SliderStyle2.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\n//import { Link } from 'react-router-dom'\r\n\r\nimport { Navigation, Scrollbar, A11y } from 'swiper';\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/swiper.min.css'\r\nimport 'swiper/components/navigation';\r\nimport 'swiper/components/pagination';\r\n\r\n\r\n//style imports\r\n\r\nimport styled from \"styled-components\";\r\nimport confetti from \"canvas-confetti\";\r\nimport { Paper, LinearProgress, Chip } from \"@material-ui/core\";\r\n\r\n//static file imports\r\nimport shape from '../../assets/images/backgroup-secsion/bg_section_onit.png';\r\nimport tick from '../../assets/images/icon/tick.png';\r\nimport cross from '../../assets/images/icon/cross.png';\r\nimport discount from '../../assets/images/icon/discount.png';\r\nimport imgdetail1 from '../../assets/images/previewgif/mintinggifonitbuddy.gif';\r\n\r\n//solana imports\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport {\r\n    Commitment,\r\n    Connection,\r\n    PublicKey,\r\n    Transaction,\r\n    LAMPORTS_PER_SOL\r\n} from \"@solana/web3.js\";\r\nimport {WalletAdapterNetwork} from '@solana/wallet-adapter-base';\r\nimport {useWallet} from \"@solana/wallet-adapter-react\";\r\nimport {WalletMultiButton} from \"@solana/wallet-adapter-react-ui\";\r\nimport {GatewayProvider} from '@civic/solana-gateway-react';\r\nimport Countdown from \"react-countdown\";\r\n\r\n\r\nimport {AlertState, getAtaForMint, toDate} from '../../utility/utils';\r\nimport {MintButton} from '../../MintButton';\r\nimport {\r\n    awaitTransactionSignatureConfirmation,\r\n    CANDY_MACHINE_PROGRAM,\r\n    CandyMachineAccount,\r\n    createAccountsForMint,\r\n    getCandyMachineState, \r\n    getCollectionPDA,\r\n    mintOneToken,\r\n    SetupState,\r\n} from \"../../candy-machine\";\r\n\r\n//component imports\r\nimport Card from '../elements/Card'\r\n//import { getWalletAdapters } from '@solana/wallet-adapter-wallets';\r\n// import { AnyRecord } from 'dns';\r\n// import { stringify } from 'querystring';\r\n\r\n//@ts-ignore\r\nimport lightpaperpdfslider from '../../assets/docs/OnitBuddy-LightPaper.pdf';\r\n\r\nconst cluster = process.env.REACT_APP_SOLANA_NETWORK!.toString();\r\nconst decimals = process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS ? +process.env.REACT_APP_SPL_TOKEN_TO_MINT_DECIMALS!.toString() : 9;\r\nconst splTokenName = process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME ? process.env.REACT_APP_SPL_TOKEN_TO_MINT_NAME.toString() : \"TOKEN\";\r\n\r\nconst WalletContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst WalletAmount = styled.div`\r\n  color: white;\r\n  width: auto;\r\n  padding: 5px 5px 5px 16px;\r\n  min-width: 48px;\r\n  min-height: auto;\r\n  border-radius: 22px;\r\n  background-color: var(--main-text-color);\r\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\r\n  box-sizing: border-box;\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  font-weight: 500;\r\n  line-height: 1.75;\r\n  text-transform: uppercase;\r\n  border: 0;\r\n  margin: 0;\r\n  display: inline-flex;\r\n  outline: 0;\r\n  position: relative;\r\n  align-items: center;\r\n  user-select: none;\r\n  vertical-align: middle;\r\n  justify-content: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\n//styles\r\nconst Wallet = styled.ul`\r\n  flex: 0 0 auto;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst ConnectButton:any = styled(WalletMultiButton)`\r\n  border-radius: 5px !important;\r\n  padding: 6px 16px;\r\n  background-color: #4E44CE;\r\n  margin: 0 auto;\r\n`;\r\n\r\n// const LogoAligner = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n\r\n//   img {\r\n//     max-height: 35px;\r\n//     margin-right: 10px;\r\n//   }\r\n// `;\r\n\r\nconst NFT = styled(Paper)`\r\n  color: white !important;\r\n  min-width: 500px;\r\n  padding: 5px 20px 20px 20px;\r\n  flex: 1 1 auto;\r\n  background-color: var(--card-background-color) !important;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22) !important;\r\n\r\n  @media (max-width: 575px) {\r\n    padding: 5px 5px 5px 5px;\r\n  };\r\n`;\r\n\r\n\r\nconst MintButtonContainer:any = styled.div`\r\n  button.MuiButton-contained:not(.MuiButton-containedPrimary).Mui-disabled {\r\n    color: #5142fc;\r\n  }\r\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):hover,\r\n  button.MuiButton-contained:not(.MuiButton-containedPrimary):focus {\r\n    -webkit-animation: pulse 1s;\r\n    animation: pulse 1s;\r\n    box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);\r\n  }\r\n  @-webkit-keyframes pulse {\r\n    0% {\r\n      box-shadow: 0 0 0 0 #ef8f6e;\r\n    }\r\n  }\r\n  @keyframes pulse {\r\n    0% {\r\n      box-shadow: 0 0 0 0 #ef8f6e;\r\n    }\r\n  }\r\n\r\n  justify-content: center;\r\n\r\n  @media (max-width: 575px) {\r\n    flex: 1 1 auto;\r\n    justify-content: center;\r\n    h1{\r\n    font-size: 30px !important;\r\n    };\r\n};\r\n`;\r\n\r\n// const GoldTitle = styled.h2`\r\n//   color: var(--title-text-color);\r\n// `;\r\n\r\n// const Des = styled(NFT)`\r\n//   text-align: left;\r\n//   padding-top: 0px;\r\n//   max-width: 500px;\r\n// `;\r\n\r\nconst SolExplorerLink = styled.a`\r\n  color: var(--title-text-color);\r\n  border-bottom: 1px solid var(--title-text-color);\r\n  font-weight: bold;\r\n  list-style-image: none;\r\n  list-style-position: outside;\r\n  list-style-type: none;\r\n  outline: none;\r\n  text-decoration: none;\r\n  text-size-adjust: 100%;\r\n  :hover {\r\n    border-bottom: 2px solid var(--title-text-color);\r\n  }\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n  color: white !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  margin-right: 4%;\r\n  margin-left: 4%;\r\n  text-align: center;\r\n  justify-content: center;\r\n  @media (max-width: 575px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    margin-right: 0;\r\n    margin-left: 0;\r\n  };\r\n`;\r\n\r\nconst MintContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nflex: 1 1 auto;\r\nflex-wrap: wrap;\r\ngap: 20px;\r\n@media (max-width: 575px) {\r\n    gap: 0px;\r\n    justify-content: center;\r\n  };\r\n\r\n`;\r\n\r\n// const DesContainer = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   flex: 1 1 auto;\r\n//   gap: 20px;\r\n// `;\r\n\r\nconst Price = styled(Chip)`\r\n  position: absolute;\r\n  display: block;\r\n  transform: translate(-50%);\r\n  margin: 5px;\r\n  font-weight: bold;\r\n  font-size: 1.2em !important;\r\n  font-family: 'Patrick Hand', cursive !important;\r\n`;\r\n\r\n// const Image = styled.img`\r\n//   height: 400px;\r\n//   width: auto;\r\n//   border-radius: 7px;\r\n//   box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\r\n// `;\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)`\r\n  margin: 20px;\r\n  height: 10px !important;\r\n  border-radius: 30px;\r\n  border: 2px solid white;\r\n  box-shadow: 5px 5px 40px 5px rgba(0,0,0,0.5);\r\n  background-color:var(--main-text-color) !important;\r\n  \r\n  > div.MuiLinearProgress-barColorPrimary{\r\n    background-color:var(--title-text-color) !important;\r\n  }\r\n  > div.MuiLinearProgress-bar1Determinate {\r\n    border-radius: 30px !important;\r\n    background-image: linear-gradient(270deg, rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.5));\r\n  }\r\n  @media (max-width: 575px) {\r\n    justify-content: center;\r\n  };\r\n`;\r\n\r\n// const WalletAmount2 = styled.div`\r\n//   color: white;\r\n//   width: auto;\r\n//   padding: 5px 5px 5px 16px;\r\n//   min-width: 48px;\r\n//   min-height: auto;\r\n//   font-weight: 500;\r\n//   line-height: 1.75;\r\n//   text-transform: uppercase;\r\n//   margin: 0;\r\n//   display: inline-flex;\r\n//   outline: 0;\r\n//   position: relative;\r\n//   align-items: center;\r\n//   user-select: none;\r\n//   vertical-align: middle;\r\n//   justify-content: flex-start;\r\n//   gap: 10px;\r\n// `;\r\n\r\nconst ConnectSliderButton : any = styled(WalletMultiButton)`\r\n    font-weight       : 700;\r\n    font-size         : 14px;\r\n    line-height       : 22px;\r\n    margin-left       : 20px;\r\n    position          : relative;\r\n    -webkit-transition: all 0.3s ease;\r\n    -moz-transition   : all 0.3s ease;\r\n    -ms-transition    : all 0.3s ease;\r\n    -o-transition     : all 0.3s ease;\r\n    transition        : all 0.3s ease;\r\n`;\r\n\r\n\r\n//interface\r\nexport interface SliderProps {\r\n    candyMachineId?: anchor.web3.PublicKey;\r\n    connection: anchor.web3.Connection;\r\n    txTimeout: number;\r\n    rpcHost: string;\r\n    network: WalletAdapterNetwork;\r\n}\r\n\r\nconst SliderStyle2 = (props: SliderProps) => {\r\n    //State Definitions\r\n    const [balance, setBalance] = useState<number>();\r\n    const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n    const [isActive, setIsActive] = useState(false); // true when countdown completes or whitelisted\r\n    const [solanaExplorerLink, setSolanaExplorerLink] = useState<string>(\"\");\r\n    const [itemsAvailable, setItemsAvailable] = useState(0);\r\n    const [itemsRedeemed, setItemsRedeemed] = useState(0);\r\n    const [itemsRemaining, setItemsRemaining] = useState(0);\r\n    const [isSoldOut, setIsSoldOut] = useState(false);\r\n    const [payWithSplToken, setPayWithSplToken] = useState(false);\r\n    const [price, setPrice] = useState(0);\r\n    const [priceLabel, setPriceLabel] = useState<string>(\"SOL\");\r\n    const [whitelistPrice, setWhitelistPrice] = useState(0);\r\n    const [whitelistEnabled, setWhitelistEnabled] = useState(false);\r\n    const [isBurnToken, setIsBurnToken] = useState(false);\r\n    const [whitelistTokenBalance, setWhitelistTokenBalance] = useState(0);\r\n    const [isEnded, setIsEnded] = useState(false);\r\n    const [endDate, setEndDate] = useState<Date>();\r\n    const [isPresale, setIsPresale] = useState(false);\r\n    const [isWLOnly, setIsWLOnly] = useState(false);\r\n    const [priceDiscount, setPriceDiscount] = useState(0);\r\n    const [alertState, setAlertState] = useState<AlertState>({\r\n        open: false,\r\n        message: \"\",\r\n        severity: undefined,\r\n    });\r\n\r\n    const [needTxnSplit, setNeedTxnSplit] = useState(true);\r\n    const [setupTxn, setSetupTxn] = useState<SetupState>();\r\n\r\n    //This defines the wallet\r\n    const wallet = useWallet();\r\n    const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n    \r\n    const rpcUrl = props.rpcHost;\r\n    const solFeesEstimation = 0.012; // approx of account creation fees\r\n\r\n    //Logging:\r\n    // function consoleThis(): any {\r\n    //     console.log(\"these are the variables\");\r\n    //     console.log('balance' + ' ' + balance);\r\n    //     console.log('isMinting' + ' ' + isMinting);\r\n    //     console.log('isActive' + ' ' + isActive);\r\n    //     console.log('GoLiveDate' + ' '+ toDate(candyMachine?.state.goLiveDate))\r\n    //     console.log('solanaExplorerLink' + ' ' + solanaExplorerLink);\r\n    //     console.log('itemsAvailable' + ' ' + itemsAvailable); \r\n    //     console.log('itemsRedeemed' + ' ' + itemsRedeemed);\r\n    //     console.log('itemsRemaining' + ' ' + itemsRemaining);\r\n    //     console.log('isSoldOut' + ' ' + isSoldOut);\r\n    //     console.log('payWithSplToken' + ' ' + payWithSplToken);\r\n    //     console.log('price' + ' ' + price );\r\n    //     console.log('priceLabel' + ' ' + priceLabel);\r\n    //     console.log('whitelistPrice' + ' ' + whitelistPrice);\r\n    //     console.log('whitelistEnabled' + ' ' + whitelistEnabled );\r\n    //     console.log('isBurnToken' + ' ' + JSON.stringify(isBurnToken));\r\n    //     console.log('whitelistTokenBalance' + ' ' + whitelistTokenBalance);\r\n    //     console.log('isEnded' + ' ' + isEnded );\r\n    //     console.log('endDate' + ' ' + endDate);\r\n    //     console.log('isPresale' + ' ' + isPresale);\r\n    //     console.log('isWLOnly' + ' ' + isWLOnly );\r\n    //     console.log('alertState' + ' ' + JSON.stringify(alertState));\r\n    //     console.log('rpcUrl' + ' ' + rpcUrl);\r\n    // }\r\n\r\n    //State Definitions for the Slider Contents\r\n    const [data] = useState(\r\n        [\r\n            {\r\n                subtitle: 'HAND-CRAFTED COLLECTION OF',\r\n                title: '8080 UNIQUE NFTs',\r\n                description: 'With the goal to deliver the world\\'s first transmograble NFTs based on an open-source, community-driven design system.'\r\n            }\r\n        ]\r\n    )\r\n    \r\n    const anchorWallet = useMemo(() => {\r\n        if (\r\n            !wallet ||\r\n            !wallet.publicKey ||\r\n            !wallet.signAllTransactions ||\r\n            !wallet.signTransaction\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        return {\r\n            publicKey: wallet.publicKey,\r\n            signAllTransactions: wallet.signAllTransactions,\r\n            signTransaction: wallet.signTransaction,\r\n        } as anchor.Wallet;\r\n    }, [wallet]);\r\n    \r\n    const refreshCandyMachineState = useCallback(\r\n        async (commitment: Commitment = 'confirmed') => {\r\n            if (!anchorWallet) { \r\n                return;\r\n            }\r\n\r\n            const connection = new Connection(props.rpcHost, commitment);\r\n\r\n            if (props.candyMachineId){\r\n                try{\r\n                    // this is where we are identifying the candymachine we must connect to\r\n                    const cndy = await getCandyMachineState(\r\n                        anchorWallet,\r\n                        props.candyMachineId,\r\n                        props.connection\r\n                    );\r\n\r\n                    //This is where we are setting the candymachine attributes\r\n                    setCandyMachine(cndy);\r\n                    //console.log(\"this is the candymachine payload\");\r\n                    //console.log(cndy);\r\n                    setItemsAvailable(cndy.state.itemsAvailable);\r\n                    setItemsRemaining(cndy.state.itemsRemaining);\r\n                    setItemsRedeemed(cndy.state.itemsRedeemed);\r\n\r\n                    //this is where we are implementing the decimals\r\n                    var divider = 1;\r\n                    if (decimals) {\r\n                        divider = +('1' + new Array(decimals).join('0').slice() + '0');\r\n                    }\r\n\r\n                    // detect if using spl-token to mint\r\n                    if (cndy.state.tokenMint) {\r\n                        setPayWithSplToken(true);\r\n                        // Customize your SPL-TOKEN Label HERE\r\n                        // TODO: get spl-token metadata name\r\n                        setPriceLabel(splTokenName);\r\n                        setPrice(cndy.state.price.toNumber() / divider);\r\n                        setWhitelistPrice(cndy.state.price.toNumber() / divider);\r\n                    } else {\r\n                        setPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\r\n                        setWhitelistPrice(cndy.state.price.toNumber() / LAMPORTS_PER_SOL);\r\n                    }\r\n\r\n\r\n                    // fetch whitelist token balance\r\n                    if (cndy.state.whitelistMintSettings) {\r\n                        setWhitelistEnabled(true); //This is a status that states that the candymanchine has a whitelist\r\n                        setIsBurnToken(cndy.state.whitelistMintSettings.mode.burnEveryTime);\r\n                        setIsPresale(cndy.state.whitelistMintSettings.presale);\r\n                        setIsWLOnly(!isPresale && cndy.state.whitelistMintSettings.discountPrice === null);\r\n\r\n                        if (cndy.state.whitelistMintSettings.discountPrice !== null && cndy.state.whitelistMintSettings.discountPrice !== cndy.state.price) {\r\n                            if (cndy.state.tokenMint) {\r\n                                setWhitelistPrice(cndy.state.whitelistMintSettings.discountPrice?.toNumber() / divider);\r\n                            } else {\r\n                                setWhitelistPrice(cndy.state.whitelistMintSettings.discountPrice?.toNumber() / LAMPORTS_PER_SOL);\r\n                            }\r\n                        }\r\n\r\n                        let balance = 0;\r\n                        try {\r\n                            const tokenBalance =\r\n                                await props.connection.getTokenAccountBalance(\r\n                                    (\r\n                                        await getAtaForMint(\r\n                                            cndy.state.whitelistMintSettings.mint,\r\n                                            anchorWallet.publicKey,\r\n                                        )\r\n                                    )[0],\r\n                                );\r\n\r\n                            balance = tokenBalance?.value?.uiAmount || 0;\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                            balance = 0;\r\n                        }\r\n                        if (commitment !== \"processed\") {\r\n                            setWhitelistTokenBalance(balance);\r\n                        }\r\n                        setIsActive(isPresale && !isEnded && balance > 0);\r\n                        \r\n                    } else {\r\n                        setWhitelistEnabled(false);\r\n                    }\r\n\r\n                    // end the mint when date is reached\r\n                    if (cndy?.state.endSettings?.endSettingType.date) {\r\n                        setEndDate(toDate(cndy.state.endSettings.number));\r\n                        if (\r\n                            cndy.state.endSettings.number.toNumber() <\r\n                            new Date().getTime() / 1000\r\n                        ) {\r\n                            setIsEnded(true);\r\n                            setIsActive(false);\r\n                        }\r\n                    }\r\n                    // end the mint when amount is reached\r\n                    if (cndy?.state.endSettings?.endSettingType.amount) {\r\n                        let limit = Math.min(\r\n                            cndy.state.endSettings.number.toNumber(),\r\n                            cndy.state.itemsAvailable,\r\n                        );\r\n                        setItemsAvailable(limit);\r\n                        if (cndy.state.itemsRedeemed < limit) {\r\n                            setItemsRemaining(limit - cndy.state.itemsRedeemed);\r\n                        } else {\r\n                            setItemsRemaining(0);\r\n                            cndy.state.isSoldOut = true;\r\n                            setIsEnded(true);\r\n                        }\r\n                    } else {\r\n                        setItemsRemaining(cndy.state.itemsRemaining);\r\n                    }\r\n\r\n                    if (cndy.state.isSoldOut) {\r\n                        setIsActive(false);\r\n                    }\r\n\r\n                    const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\r\n                    const collectionPDAAccount = await connection.getAccountInfo(\r\n                        collectionPDA,\r\n                    );\r\n\r\n                    const txnEstimate = \r\n                        892 +\r\n                        (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\r\n                        (cndy.state.tokenMint ? 66 : 0) +\r\n                        (cndy.state.whitelistMintSettings ? 34 : 0) +\r\n                        (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 34 : 0) +\r\n                        (cndy.state.gatekeeper ? 33 : 0) +\r\n                        (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\r\n\r\n                    setNeedTxnSplit(txnEstimate > 1230);\r\n                } catch (e) {\r\n                    if (e instanceof Error) {\r\n                        if (\r\n                            e.message === `Account does not exist ${props.candyMachineId}`\r\n                        ) {\r\n                            setAlertState({\r\n                                open: true,\r\n                                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\r\n                                severity: 'error',\r\n                                hideDuration: null,\r\n                            });\r\n                        } else if (\r\n                            e.message.startsWith('failed to get info about account')\r\n                        ) {\r\n                            setAlertState({\r\n                                open: true,\r\n                                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\r\n                                severity: 'error',\r\n                                hideDuration: null,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        setAlertState({\r\n                            open: true,\r\n                            message: `${e}`,\r\n                            severity: 'error',\r\n                            hideDuration: null,\r\n                        });\r\n                    }\r\n                    console.log('error');\r\n                }\r\n            } else {\r\n                setAlertState({\r\n                    open: true,\r\n                    message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\r\n                    severity: 'error',\r\n                    hideDuration: null,\r\n                });\r\n            }\r\n        },\r\n        [anchorWallet, props.candyMachineId, props.rpcHost, isEnded, isPresale, props.connection],\r\n    );\r\n\r\n    const renderGoLiveDateCounter = ({days, hours, minutes, seconds}: any) => {\r\n        return (\r\n            <div><Card elevation={1}><h1>{days}</h1>Days</Card><Card elevation={1}><h1>{hours}</h1>\r\n                Hours</Card><Card elevation={1}><h1>{minutes}</h1>Mins</Card><Card elevation={1}>\r\n                    <h1>{seconds}</h1>Secs</Card></div>\r\n        );\r\n    };\r\n\r\n    //renders the EndDayCounter\r\n    const renderEndDateCounter = ({days, hours, minutes}: any) => {\r\n        let label = \"\";\r\n        if (days > 0) {\r\n            label += days + \" days \"\r\n        }\r\n        if (hours > 0) {\r\n            label += hours + \" hours \"\r\n        }\r\n        label += (minutes + 1) + \" minutes left to MINT.\"\r\n        return (\r\n            <div><h3>{label}</h3></div>\r\n        );\r\n    };\r\n\r\n    //Displays success if the mint succeeded\r\n    function displaySuccess(mintPublicKey: any, qty: number = 1): void {\r\n        let remaining = itemsRemaining - qty;\r\n        setItemsRemaining(remaining);\r\n        setIsSoldOut(remaining === 0);\r\n        if (isBurnToken && whitelistTokenBalance && whitelistTokenBalance > 0) {\r\n            let balance = whitelistTokenBalance - qty;\r\n            setWhitelistTokenBalance(balance);\r\n            setIsActive(isPresale && !isEnded && balance > 0);\r\n        }\r\n        setSetupTxn(undefined);\r\n        setItemsRedeemed(itemsRedeemed + qty);\r\n        if (!payWithSplToken && balance && balance > 0) {\r\n            setBalance(balance - ((whitelistEnabled ? whitelistPrice : price) * qty) - solFeesEstimation);\r\n        } //The below link is the link we can view the successful mint on via solscan\r\n        setSolanaExplorerLink(cluster === \"devnet\" || cluster === \"testnet\"\r\n            ? (\"https://solscan.io/token/\" + mintPublicKey + \"?cluster=\" + cluster)\r\n            : (\"https://solscan.io/token/\" + mintPublicKey));\r\n        setIsMinting(false);\r\n        throwConfetti();\r\n    };\r\n\r\n    function throwConfetti(): void {\r\n        confetti({\r\n            particleCount: 400,\r\n            spread: 70,\r\n            origin: {y: 0.6},\r\n        });\r\n    }\r\n\r\n    const onMint = async (\r\n        beforeTransactions: Transaction[] = [],\r\n        afterTransactions: Transaction[] = [],\r\n    ) => {\r\n        try {\r\n            if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n                setIsMinting(true);\r\n                let setupMint: SetupState | undefined;\r\n                if (needTxnSplit && setupTxn === undefined) {\r\n                    setAlertState({\r\n                        open: true,\r\n                        message: 'Please validate account setup transaction',\r\n                        severity: 'info',\r\n                    });\r\n                    setupMint = await createAccountsForMint(\r\n                        candyMachine,\r\n                        wallet.publicKey,\r\n                    );\r\n                    let status: any = {err: true};\r\n                    if (setupMint.transaction) {\r\n                        status = await awaitTransactionSignatureConfirmation(\r\n                            setupMint.transaction,\r\n                            props.txTimeout,\r\n                            props.connection,\r\n                            true,\r\n                        );\r\n                    }\r\n                    if (status && !status.err) {\r\n                        setSetupTxn(setupMint);\r\n                        setAlertState({\r\n                            open: true,\r\n                            message:\r\n                                'Setup transaction succeeded! You can now validate mint transaction',\r\n                            severity: 'info',\r\n                        });\r\n                    } else {\r\n                        setAlertState({\r\n                            open: true,\r\n                            message: 'Mint failed! Please try again!',\r\n                            severity: 'error',\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                const setupState = setupMint ?? setupTxn;\r\n                const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\r\n                let mintResult = await mintOneToken(\r\n                    candyMachine,\r\n                    wallet.publicKey,\r\n                    mint,\r\n                    beforeTransactions,\r\n                    afterTransactions,\r\n                    setupState,\r\n                );\r\n\r\n                let status: any = {err: true};\r\n                let metadataStatus = null;\r\n                if (mintResult) {\r\n                    status = await awaitTransactionSignatureConfirmation(\r\n                        mintResult.mintTxId,\r\n                        props.txTimeout,\r\n                        props.connection,\r\n                        true,\r\n                    );\r\n\r\n                    metadataStatus =\r\n                        await candyMachine.program.provider.connection.getAccountInfo(\r\n                            mintResult.metadataKey,\r\n                            'processed',\r\n                        );\r\n                    //console.log('Metadata status: ', !!metadataStatus);\r\n                }\r\n\r\n                if (status && !status.err && metadataStatus) {\r\n                    setAlertState({\r\n                        open: true,\r\n                        message: 'Congratulations! Mint succeeded!',\r\n                        severity: 'success',\r\n                    });\r\n\r\n                    // update front-end amounts\r\n                    displaySuccess(mint.publicKey);\r\n                    refreshCandyMachineState('processed');\r\n                } else if (status && !status.err) {\r\n                    setAlertState({\r\n                        open: true,\r\n                        message:\r\n                            'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',\r\n                        severity: 'error',\r\n                        hideDuration: 8000,\r\n                    });\r\n                    refreshCandyMachineState();\r\n                } else {\r\n                    setAlertState({\r\n                        open: true,\r\n                        message: 'Mint failed! Please try again!',\r\n                        severity: 'error',\r\n                    });\r\n                    refreshCandyMachineState();\r\n                }\r\n            }\r\n        } catch (error: any) {\r\n            // TODO: blech:\r\n            let message = error.msg || 'Minting failed! Please try again!';\r\n            if (!error.msg) {\r\n                if (!error.message) {\r\n                    message = 'Transaction Timeout! Please try again.';\r\n                } else if (error.message.indexOf('0x138')) {\r\n                } else if (error.message.indexOf('0x137')) {\r\n                    message = `SOLD OUT!`;\r\n                } else if (error.message.indexOf('0x135')) {\r\n                    message = `Insufficient funds to mint. Please fund your wallet.`;\r\n                }\r\n            } else {\r\n                if (error.code === 311) {\r\n                    message = `SOLD OUT!`;\r\n                } else if (error.code === 312) {\r\n                    message = `Minting period hasn't started yet.`;\r\n                }\r\n            }\r\n\r\n            setAlertState({\r\n                open: true,\r\n                message,\r\n                severity: \"error\",\r\n            });\r\n        } finally {\r\n            setIsMinting(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (anchorWallet) {\r\n                const balance = await props.connection.getBalance(anchorWallet!.publicKey);\r\n                setBalance(balance / LAMPORTS_PER_SOL);\r\n            }\r\n        })();\r\n    }, [anchorWallet, props.connection]);\r\n\r\n    //This refreshes the candymachine state\r\n    useEffect(() => {\r\n        refreshCandyMachineState();\r\n    }, [\r\n        anchorWallet,\r\n        props.candyMachineId,\r\n        props.connection,\r\n        isEnded,\r\n        isPresale,\r\n        refreshCandyMachineState\r\n    ]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <section className=\"flat-title-page home5 mainslider\">\r\n                <img className=\"bg_h5\" src={shape} alt=\"Axies\" />\r\n                {/* <div className=\"overlay\">{consoleThis()}</div> */}\r\n                <div className=\"swiper-container mainslider auctions\">\r\n                    <Swiper\r\n                        //@ts-ignore\r\n                        modules={[Navigation, Scrollbar, A11y]}\r\n                        spaceBetween={0}\r\n                        slidesPerView={1}\r\n                        navigation={{\r\n                            nextEl: '.swiper-button-next',\r\n                            prevEl: '.swiper-button-prev', \r\n                            disabledClass: 'disabled_swiper_button'}}\r\n                        scrollbar={{ draggable: true }}\r\n                    >\r\n                        {\r\n                        !anchorWallet ?\r\n                            data.map((item, index) => (\r\n                                <SwiperSlide key={index} >\r\n                                    <SliderItem item={item}  />\r\n                                </SwiperSlide>\r\n                            ))\r\n                            :\r\n                            data.map((item, index) => (\r\n                                <SwiperSlide key={index} >\r\n                                    <SliderItem2 \r\n                                        goLiveDate= {candyMachine?.state.goLiveDate}\r\n                                        isGatekeeper = {candyMachine?.state.gatekeeper}\r\n                                        //consoleThis ={consoleThis}\r\n                                        wallet = {anchorWallet}\r\n                                        balance = {balance}\r\n                                        setBalance = {setBalance}\r\n                                        isMinting = {isMinting}\r\n                                        setIsMinting = {setIsMinting}\r\n                                        isActive = {isActive}\r\n                                        setIsActive = {setIsActive}\r\n                                        solanaExplorerLink = {solanaExplorerLink} \r\n                                        setSolanaExplorerLink = {setSolanaExplorerLink}\r\n                                        itemsAvailable = {itemsAvailable}\r\n                                        setItemsAvailable ={setItemsAvailable}\r\n                                        itemsRedeemed = {itemsRedeemed}\r\n                                        setItemsRedeemed = {setItemsRedeemed}\r\n                                        itemsRemaining = {itemsRemaining}\r\n                                        setItemsRemaining = {setItemsRemaining}\r\n                                        isSoldOut = {isSoldOut}\r\n                                        setIsSoldOut = {setIsSoldOut}\r\n                                        payWithSplToken = {payWithSplToken}\r\n                                        setPayWithSplToken = {setPayWithSplToken}\r\n                                        price = {price}\r\n                                        setPrice = {setPrice}\r\n                                        priceDiscount = {priceDiscount} //COMMENT: check this out\r\n                                        setPriceDiscount = {setPriceDiscount} //COMMENT: check this out\r\n                                        priceLabel = {priceLabel}\r\n                                        setPriceLabel = {setPriceLabel}\r\n                                        whitelistPrice = {whitelistPrice}\r\n                                        setWhitelistPrice = {setWhitelistPrice}\r\n                                        whitelistEnabled = {whitelistEnabled}\r\n                                        setWhitelistEnabled = {setWhitelistEnabled}\r\n                                        isBurnToken = {isBurnToken}\r\n                                        setIsBurnToken = {setIsBurnToken}\r\n                                        whitelistTokenBalance = {whitelistTokenBalance}\r\n                                        setWhitelistTokenBalance = {setWhitelistTokenBalance}\r\n                                        isEnded = {isEnded}\r\n                                        setIsEnded = {setIsEnded}\r\n                                        endDate = {endDate}\r\n                                        setEndDate ={setEndDate}\r\n                                        isPresale ={isPresale}\r\n                                        setIsPresale = {setIsPresale}\r\n                                        isWLOnly = {isWLOnly}\r\n                                        setIsWLOnly = {setIsWLOnly}\r\n                                        alertState = {alertState}\r\n                                        setAlertState = {setAlertState}\r\n                                        rpcUrl = {rpcUrl}\r\n                                        renderGoLiveDateCounter = {renderGoLiveDateCounter}\r\n                                        renderEndDateCounter = {renderEndDateCounter}\r\n                                        candyMachine = {candyMachine}\r\n                                        onMint = {onMint}\r\n                                    />\r\n                                </SwiperSlide>\r\n                            ))\r\n\r\n                        }\r\n\r\n                    </Swiper>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SliderItem = (props: any) => (\r\n    <div className=\"swiper-wrapper\">\r\n        <div className=\"swiper-slide\">\r\n            <div className=\"slider-item\">\r\n                <div className=\"themesflat-container\">\r\n                    <div className=\"wrap-heading flat-slider\">\r\n                        <div className=\"content\">\r\n                            <h4 className=\"mb-11\"><span className=\"fill\">{props.item.subtitle}</span></h4>\r\n                            <h1 className=\"heading\">{props.item.title}\r\n                            </h1>\r\n                            <p className=\"sub-heading mg-t-7 mg-bt-39\">{props.item.description}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"flat-bt-slider flex style2\">\r\n                            <a href=\"https://discord.gg/RWs3DP2\" target=\"_blank\" rel=\"noreferrer\" className=\"sc-button header-slider style style-1 rocket fl-button pri-1\"><span>Join the DAO\r\n                            </span></a>\r\n                            <a href={lightpaperpdfslider} target=\"_blank\" rel=\"noreferrer\" className=\"sc-button header-slider style style-1 note fl-button pri-1\"><span>Light Paper\r\n                            </span></a>\r\n                            <ConnectSliderButton className=\"sc-button header-slider style style-1 fl-button pri-1\" >\r\n                                <span>Mint</span>\r\n                            </ConnectSliderButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\n//@ts-ignore\r\nconst SliderItem2 = (props: any) => {\r\n    const wallet = props.wallet //<- needs a look!\r\n    //console.log('This is the console log');\r\n    //console.log(wallet);\r\n    //console.log(props.isActive);\r\n    //props.consoleThis();\r\n    \r\n    return (\r\n        <div className=\"swiper-wrapper\">\r\n            <div className=\"swiper-slide\">\r\n                <div className=\"slider-item\">\r\n                    <div className=\"tf-section2 tf-item-details\">\r\n                        <div className=\"themesflat-container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-6 col-md-12 col-sm-6\">\r\n                                    <MainContainer>\r\n                                        <WalletContainer>\r\n                                            <Wallet>\r\n                                                {wallet ?\r\n                                                    <WalletAmount>Your wallet balance: {(props.balance || 0).toLocaleString()} SOL</WalletAmount> :\r\n                                                    <ConnectButton>Connect Wallet</ConnectButton>}\r\n                                            </Wallet>\r\n                                        </WalletContainer>\r\n                                        <MintContainer>\r\n                                            <div className=\"descontainer\">\r\n                                                <NFT elevation={3}>\r\n                                                    <h2>OnitBuddy</h2>\r\n                                                    <br/> \r\n                                                    {//The below used to say wallet && props.isActive && props.whitelistTokenBalance > 0 ? <- We removed props.isActive due to whitelist use case\r\n                                                    }\r\n                                                    <div><Price\r\n                                                        label={props.whitelistEnabled && (props.whitelistTokenBalance > 0) ? (props.whitelistPrice + \" \" + props.priceLabel) : (props.price + \" \" + props.priceLabel)}/>\r\n                                                        <div className=\"content-left\">\r\n                                                            <div className=\"media\">\r\n                                                                <img src={imgdetail1} alt=\"Axies\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <br />\r\n                                                    {wallet && props.isActive && props.whitelistEnabled && (props.whitelistTokenBalance > 0) && props.isBurnToken &&\r\n                                                        <h3>You own {props.whitelistTokenBalance} WL mint {props.whitelistTokenBalance > 1 ? \"tokens\" : \"token\"}.</h3>}\r\n                                                    {wallet && props.isActive && props.whitelistEnabled && (props.whitelistTokenBalance > 0) && !props.isBurnToken &&\r\n                                                        <h3>You are whitelisted and allowed to mint.</h3>}\r\n\r\n                                                    {wallet && props.isActive && props.endDate && Date.now() < props.endDate.getTime() &&\r\n                                                        <Countdown\r\n                                                            date={toDate(props.candyMachine?.state?.endSettings?.number)}\r\n                                                            onMount={({completed}) => completed && props.setIsEnded(true)}\r\n                                                            onComplete={() => {\r\n                                                                props.setIsEnded(true);\r\n                                                            }}\r\n                                                            renderer={props.renderEndDateCounter}\r\n                                                        />}\r\n                                                    {wallet && props.isActive &&\r\n                                                        <h3>TOTAL MINTED : {props.itemsRedeemed} / {props.itemsAvailable}</h3>}\r\n                                                    {wallet && props.isActive && <BorderLinearProgress variant=\"determinate\"\r\n                                                        value={100 - (props.itemsRemaining * 100 / props.itemsAvailable)} />}\r\n                                                    <br />\r\n                                                    <MintButtonContainer>\r\n                                                        {/* {console.log(\"statis of !isActive\")}\r\n                                                        {console.log(!props.isActive)}\r\n                                                        {console.log(\"statis of !isEnded\")}\r\n                                                        {console.log(!props.isEnded)}\r\n                                                        {console.log(\"statis of goLiveDate\")}\r\n                                                        {console.log(JSON.stringify(props.goLiveDate))} */}\r\n                                                        {!props.isActive && !props.isEnded && props.goLiveDate && (!props.isWLOnly || props.whitelistTokenBalance > 0) ? (\r\n                                                            <Countdown\r\n                                                                date={toDate(props.goLiveDate)}\r\n                                                                onMount={({ completed }) => completed && props.setIsActive(!props.isEnded)}\r\n                                                                onComplete={() => {\r\n                                                                    props.setIsActive(!props.isEnded);\r\n                                                                }}\r\n                                                                renderer={props.renderGoLiveDateCounter}\r\n                                                            />) : (\r\n                                                            !wallet ? ( \"this is another placeholder\"\r\n                                                                // <ConnectButton>Connect Wallet</ConnectButton>\r\n                                                            ) : \r\n                                                            (!props.isWLOnly || props.whitelistTokenBalance > 0) ? \r\n                                                                props.isGatekeeper &&\r\n                                                                    wallet.publicKey &&\r\n                                                                    wallet.signTransaction ? (\r\n                                                                    <GatewayProvider\r\n                                                                        wallet={{\r\n                                                                            publicKey:\r\n                                                                                wallet.publicKey ||\r\n                                                                                new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                                                                            //@ts-ignore\r\n                                                                            signTransaction: wallet.signTransaction,\r\n                                                                        }}\r\n                                                                        // // Replace with following when added\r\n                                                                        // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\r\n                                                                        gatekeeperNetwork={\r\n                                                                            props.candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                                                                        } // This is the ignite (captcha) network\r\n                                                                        /// Don't need this for mainnet\r\n                                                                        clusterUrl={props.rpcUrl}\r\n                                                                        cluster = {cluster}\r\n                                                                        options={{ autoShowModal: false }}\r\n                                                                    >\r\n                                                                        <MintButton\r\n                                                                            candyMachine={props.candyMachine}\r\n                                                                            isMinting={props.isMinting}\r\n                                                                            isActive={props.isActive}\r\n                                                                            isEnded={props.isEnded}\r\n                                                                            isSoldOut={props.isSoldOut}\r\n                                                                            onMint={props.onMint}\r\n                                                                        />\r\n                                                                    </GatewayProvider>\r\n                                                                ) : (\r\n                                                                    <MintButton\r\n                                                                        candyMachine={props.candyMachine}\r\n                                                                        isMinting={props.isMinting}\r\n                                                                        isActive={props.isActive}\r\n                                                                        isEnded={props.isEnded}\r\n                                                                        isSoldOut={props.isSoldOut}\r\n                                                                        onMint={props.onMint}\r\n                                                                    />\r\n                                                                ) :\r\n                                                                <h2>Whitelisted Members Mint Only.</h2>\r\n                                                        )}\r\n                                                    </MintButtonContainer>\r\n                                                    <br/>\r\n                                                    {wallet && props.isActive && props.solanaExplorerLink &&\r\n                                                        <SolExplorerLink href={props.solanaExplorerLink} target=\"_blank\">View on Solscan</SolExplorerLink>}\r\n                                                </NFT>\r\n                                            </div>\r\n                                        </MintContainer>\r\n                                    </MainContainer>\r\n                                    {/* <div className=\"content-left\">\r\n                                        <div className=\"media\">\r\n                                            <img src={imgdetail1} alt=\"Axies\" />\r\n                                        </div>\r\n                                    </div> */}\r\n                                </div>\r\n                                <div className=\"col-xl-6 col-md-12\">\r\n                                    <div className=\"content-right\">\r\n                                        <div className=\"sc-item-details\">\r\n                                            <h2 className=\"style2 mt-xl-4\">Whitelist Presale starts Jan 23rd</h2>\r\n                                            <div className=\"meta-item\">\r\n                                                <div className=\"right mt-xl-0\">\r\n                                                    <p className=\"mt-xl-1\"></p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"client-infor sc-card-product\">\r\n                                                <div className=\"meta-info\">\r\n                                                    {/* {console.log(\"props.isActive\")}\r\n                                                    {console.log(props.isActive)}\r\n                                                    {console.log(\"props.whitelistEnabled\")}\r\n                                                    {console.log(props.whitelistEnabled)}\r\n                                                    {console.log(\"props.whitelistTokenBalance\")}\r\n                                                    {console.log(props.whitelistTokenBalance)} */}\r\n                                                    { //The below used to say wallet && props.isActive && props.whitelistTokenBalance > 0 ? <- We removed props.isActive due to whitelist use case\r\n                                                    wallet && props.whitelistTokenBalance > 0 ?\r\n                                                        (<div className=\"author\">\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={tick} alt=\"Axies\" />\r\n                                                            </div>\r\n                                                            <div className=\"info\">\r\n                                                                <span>Whitelist Status</span>\r\n                                                                <h6> \r\n                                                                    <div>You have Whitelist Tickets</div>\r\n                                                                </h6> \r\n                                                            </div>\r\n                                                        </div>):\r\n                                                        (<div className=\"author\">\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={cross} alt=\"Axies\" />\r\n                                                            </div>\r\n                                                            <div className=\"info\">\r\n                                                                <span>Whitelist Status</span>\r\n                                                                <h6> \r\n                                                                    <div>No Whitelist Tickets.</div>\r\n                                                                </h6> \r\n                                                            </div>\r\n                                                        </div>)\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"meta-info\">\r\n                                                    {wallet && props.isActive && props.whitelistEnabled ?\r\n                                                        (<div className=\"author\">\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={discount} alt=\"Axies\" />\r\n                                                            </div>\r\n                                                            <div className=\"info\">\r\n                                                                <span>Presale Discount if whitelisted</span>\r\n                                                                { props.isWLOnly ? \r\n                                                                (<h6> <div> {((props.whitelistPrice)*100)+'%'}</div> </h6>):\r\n                                                                (<h6> <div> {((props.whitelistPrice/props.price)*100)+'%'}</div></h6>)\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>) :\r\n                                                        (<div className=\"author\">\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={discount} alt=\"Axies\" />\r\n                                                            </div>\r\n                                                            <div className=\"info\">\r\n                                                                <span>Presale Discount if whitelisted</span>\r\n                                                                { props.isWLOnly ?\r\n                                                                (<h6><div> {(((props.whitelistPrice)*100))+'%'}</div></h6>):\r\n                                                                (<h6><div> {(((props.whitelistPrice/props.price)*100))+'%'}</div></h6>)\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>) \r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <p> Join our Discord to have your wallet address whitelisted. Community members who become buddies will receive a Whitelist Token airdropped into their wallets. From there you will be able to mint your OnitBuddy NFT at a discounted price. The earlier you join the whitelist the higher the number of NFTs you get to mint. Once whitelisted you can mint your OnitBuddies here.</p>\r\n                                            <div className=\"meta-item-details style2\">\r\n                                                <div className=\"item meta-price\">\r\n                                                    <span className=\"heading\">Price per NFT</span>\r\n                                                    <div className=\"price\">\r\n                                                        <div className=\"price-box\">\r\n                                                            {\r\n                                                            //The below used to say props.isActive && props.whitelistEnabled && (props.whitelistTokenBalance > 0) <- We removed props.isActive due to whitelist use case\r\n                                                            }\r\n                                                            <h5>{props.whitelistEnabled && (props.whitelistTokenBalance > 0) ? (props.whitelistPrice + \" \" + props.priceLabel) : (props.price + \" \" + props.priceLabel)}</h5>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"item count-down\">\r\n                                                    <span className=\"heading style-2\">Your Wallet balance</span>\r\n                                                    <div className=\"price-box\">\r\n                                                              {wallet ?\r\n                                                    <h5>{(props.balance || 0).toLocaleString()} SOL</h5> :\r\n                                                    <span>Balance Not Available</span>}\r\n                                                        </div>\r\n                                                    {/* <Countdown date={Date.now() + 500000000}>\r\n                                                    <span>You are good to go!</span>\r\n                                                </Countdown> */}\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                             //This used to say wallet && props.isActive && props.whitelistEnabled && (props.whitelistTokenBalance > 0) ? <-We removed the props.isActive due to the whitelist use case\r\n                                            }\r\n                                            {wallet && props.whitelistEnabled && (props.whitelistTokenBalance > 0) ?\r\n                                                (<div></div> )\r\n                                                : <a target=\"_blank\" rel=\"noreferrer\" href='https://discord.gg/RWs3DP2' className=\"sc-button loadmore style bag fl-button pri-3\"><span>Get Whitelisted</span></a>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SliderStyle2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}