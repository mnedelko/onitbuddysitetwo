{"ast":null,"code":"import _toConsumableArray from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Transaction } from \"@solana/web3.js\";\nimport { splitArgsAndCtx } from \"../context\";\nvar TransactionFactory = /*#__PURE__*/function () {\n  function TransactionFactory() {\n    _classCallCheck(this, TransactionFactory);\n  }\n  _createClass(TransactionFactory, null, [{\n    key: \"build\",\n    value: function build(idlIx, ixFn) {\n      var txFn = function txFn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var _splitArgsAndCtx = splitArgsAndCtx(idlIx, [].concat(args)),\n          _splitArgsAndCtx2 = _slicedToArray(_splitArgsAndCtx, 2),\n          ctx = _splitArgsAndCtx2[1];\n        var tx = new Transaction();\n        if (ctx.instructions !== undefined) {\n          tx.add.apply(tx, _toConsumableArray(ctx.instructions));\n        }\n        tx.add(ixFn.apply(void 0, args));\n        return tx;\n      };\n      return txFn;\n    }\n  }]);\n  return TransactionFactory;\n}();\nexport { TransactionFactory as default };","map":{"version":3,"sources":["../../../../src/program/namespace/transaction.ts"],"names":[],"mappings":";;;;AAAA,SAAS,WAAW,QAAQ,iBAAiB;AAE7C,SAAS,eAAe,QAAQ,YAAY;AAAC,IAGxB,kBAAkB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAC9B,eACL,KAAqB,EACrB,IAAmB,EAAA;MAEnB,IAAM,IAAI,GAAG,SAAP,IAAI,GAAmC;QAAA,kCAA5B,IAAW;UAAX,IAAW;QAAA;QAC1B,uBAAgB,eAAe,CAAC,KAAK,YAAM,IAAI,EAAE;UAAA;UAAxC,GAAG;QACZ,IAAM,EAAE,GAAG,IAAI,WAAW,EAAE;QAC5B,IAAI,GAAG,CAAC,YAAY,KAAK,SAAS,EAAE;UAClC,EAAE,CAAC,GAAG,OAAN,EAAE,qBAAQ,GAAG,CAAC,YAAY,EAAC;QAC5B;QACD,EAAE,CAAC,GAAG,CAAC,IAAI,eAAI,IAAI,CAAC,CAAC;QACrB,OAAO,EAAE;MACX,CAAC;MAED,OAAO,IAAI;IACb;EAAC;EAAA;AAAA;AAAA,SAhBkB,kBAAkB","sourceRoot":"","sourcesContent":["import { Transaction } from \"@solana/web3.js\";\nimport { splitArgsAndCtx } from \"../context\";\nexport default class TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args) => {\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            const tx = new Transaction();\n            if (ctx.instructions !== undefined) {\n                tx.add(...ctx.instructions);\n            }\n            tx.add(ixFn(...args));\n            return tx;\n        };\n        return txFn;\n    }\n}\n//# sourceMappingURL=transaction.js.map"]},"metadata":{},"sourceType":"module"}