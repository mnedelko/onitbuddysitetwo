{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction sanitize(params, defaults) {\n  var result = Object.assign(Object.assign({}, defaults), params);\n  if (typeof result.retries === 'undefined') {\n    result.retries = defaults.retries;\n  }\n  if (typeof result.retryDelay === 'undefined') {\n    result.retryDelay = defaults.retryDelay;\n  }\n  if (typeof result.retryOn === 'undefined') {\n    result.retryOn = defaults.retryOn;\n  }\n  return result;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction default_1(fetchFunc) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults = sanitize(params, {\n    retries: 3,\n    retryDelay: 500,\n    retryOn: [419, 503, 504]\n  });\n  return function (input, init) {\n    var frp = sanitize({\n      retries: init === null || init === void 0 ? void 0 : init.retries,\n      retryDelay: init === null || init === void 0 ? void 0 : init.retryDelay,\n      retryOn: init === null || init === void 0 ? void 0 : init.retryOn\n    }, defaults);\n    var retryDelayFn = typeof frp.retryDelay === 'function' ? frp.retryDelay : function () {\n      return frp.retryDelay;\n    };\n    var retryOnFn = typeof frp.retryOn === 'function' ? frp.retryOn : function (attempt, retries, error, response) {\n      return (!!error || !response || frp.retryOn.indexOf(response.status) !== -1) && attempt < retries;\n    };\n    return new Promise(function (resolve, reject) {\n      var extendedFetch = function extendedFetch(attempt) {\n        fetchFunc(input, init).then(function (response) {\n          if (retryOnFn(attempt, frp.retries, null, response)) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            retry(attempt, null, response);\n          } else {\n            resolve(response);\n          }\n        }).catch(function (error) {\n          if (retryOnFn(attempt, frp.retries, error, null)) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            retry(attempt, error, null);\n          } else {\n            reject(error);\n          }\n        });\n      };\n      function retry(attempt, error, response) {\n        setTimeout(function () {\n          extendedFetch(++attempt);\n        }, retryDelayFn(attempt, error, response));\n      }\n      extendedFetch(0);\n    });\n  };\n}\nexports.default = default_1;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction sanitize(params, defaults) {\n    const result = Object.assign(Object.assign({}, defaults), params);\n    if (typeof result.retries === 'undefined') {\n        result.retries = defaults.retries;\n    }\n    if (typeof result.retryDelay === 'undefined') {\n        result.retryDelay = defaults.retryDelay;\n    }\n    if (typeof result.retryOn === 'undefined') {\n        result.retryOn = defaults.retryOn;\n    }\n    return result;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction default_1(fetchFunc, params = {}) {\n    const defaults = sanitize(params, { retries: 3, retryDelay: 500, retryOn: [419, 503, 504] });\n    return function (input, init) {\n        const frp = sanitize({\n            retries: init === null || init === void 0 ? void 0 : init.retries,\n            retryDelay: init === null || init === void 0 ? void 0 : init.retryDelay,\n            retryOn: init === null || init === void 0 ? void 0 : init.retryOn,\n        }, defaults);\n        const retryDelayFn = typeof frp.retryDelay === 'function' ? frp.retryDelay : () => frp.retryDelay;\n        const retryOnFn = typeof frp.retryOn === 'function'\n            ? frp.retryOn\n            : (attempt, retries, error, response) => (!!error || !response || frp.retryOn.indexOf(response.status) !== -1) &&\n                attempt < retries;\n        return new Promise(function (resolve, reject) {\n            const extendedFetch = function (attempt) {\n                fetchFunc(input, init)\n                    .then(function (response) {\n                    if (retryOnFn(attempt, frp.retries, null, response)) {\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        retry(attempt, null, response);\n                    }\n                    else {\n                        resolve(response);\n                    }\n                })\n                    .catch(function (error) {\n                    if (retryOnFn(attempt, frp.retries, error, null)) {\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        retry(attempt, error, null);\n                    }\n                    else {\n                        reject(error);\n                    }\n                });\n            };\n            function retry(attempt, error, response) {\n                setTimeout(function () {\n                    extendedFetch(++attempt);\n                }, retryDelayFn(attempt, error, response));\n            }\n            extendedFetch(0);\n        });\n    };\n}\nexports.default = default_1;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}