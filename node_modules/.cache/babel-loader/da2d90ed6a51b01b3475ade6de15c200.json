{"ast":null,"code":"import _slicedToArray from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport cn from 'classnames';\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nvar DropdownListInput = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var name = _ref.name,\n    autoComplete = _ref.autoComplete,\n    value = _ref.value,\n    allowSearch = _ref.allowSearch,\n    placeholder = _ref.placeholder,\n    textAccessor = _ref.textAccessor,\n    dataKeyAccessor = _ref.dataKeyAccessor,\n    searchTerm = _ref.searchTerm,\n    onSearch = _ref.onSearch,\n    onAutofill = _ref.onAutofill,\n    onAutofillChange = _ref.onAutofillChange,\n    renderValue = _ref.renderValue,\n    disabled = _ref.disabled,\n    readOnly = _ref.readOnly;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    autofilling = _useState2[0],\n    setAutofilling = _useState2[1];\n  var searchRef = useRef(null);\n  var handleAutofillDetect = function handleAutofillDetect(_ref2) {\n    var animationName = _ref2.animationName;\n    var autofilling;\n    if (animationName === 'react-widgets-autofill-start') autofilling = true;else if (animationName === 'react-widgets-autofill-cancel') autofilling = false;else return;\n    setAutofilling(autofilling);\n    onAutofill(autofilling);\n  };\n  var handleAutofill = function handleAutofill(e) {\n    setAutofilling(false);\n    onAutofillChange(e);\n  };\n  var dataKey = dataKeyAccessor(value);\n  var text = value == null ? '' : textAccessor(value);\n  var strValue = String(dataKey != null ? dataKey : '');\n  if (strValue === String({})) strValue = '';\n  var inputValue = !value && placeholder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rw-placeholder\"\n  }, placeholder) : renderValue ? renderValue({\n    item: value,\n    dataKey: dataKey,\n    text: text\n  }) : text;\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        if (searchRef.current) searchRef.current.focus();\n      }\n    };\n  }); // There is some interaction between unmounting the search and value inputs\n  // that cancels autofilling in Chrome, it may be due to an input the browser\n  // was considering suddenly disappeared. hiding it seems to avoid the issue\n\n  var style = autofilling ? {\n    display: 'none'\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rw-dropdown-list-input\"\n  }, autoComplete !== 'off' && /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    tabIndex: -1,\n    disabled: disabled,\n    readOnly: readOnly,\n    value: strValue == null ? '' : strValue,\n    autoComplete: autoComplete,\n    onChange: handleAutofill,\n    onAnimationStart: handleAutofillDetect,\n    \"aria-hidden\": !autofilling,\n    className: cn('rw-detect-autofill', !autofilling && 'rw-sr')\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, allowSearch && /*#__PURE__*/React.createElement(\"input\", {\n    ref: searchRef,\n    disabled: disabled,\n    readOnly: readOnly,\n    style: style,\n    className: \"rw-dropdownlist-search\",\n    autoComplete: \"off\",\n    value: searchTerm || '',\n    size: (searchTerm || '').length + 2,\n    onChange: onSearch\n  }), !searchTerm && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rw-dropdown-list-value\",\n    style: style\n  }, inputValue)));\n});\nDropdownListInput.displayName = 'DropdownListInput';\nexport default DropdownListInput;","map":{"version":3,"names":["cn","React","useImperativeHandle","useRef","useState","DropdownListInput","forwardRef","ref","name","autoComplete","value","allowSearch","placeholder","textAccessor","dataKeyAccessor","searchTerm","onSearch","onAutofill","onAutofillChange","renderValue","disabled","readOnly","autofilling","setAutofilling","searchRef","handleAutofillDetect","animationName","handleAutofill","e","dataKey","text","strValue","String","inputValue","createElement","className","item","focus","current","style","display","undefined","tabIndex","onChange","onAnimationStart","Fragment","size","length","displayName"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/react-widgets/esm/DropdownListInput.js"],"sourcesContent":["import cn from 'classnames';\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nconst DropdownListInput = /*#__PURE__*/React.forwardRef(function ({\n  name,\n  autoComplete,\n  value,\n  allowSearch,\n  placeholder,\n  textAccessor,\n  dataKeyAccessor,\n  searchTerm,\n  onSearch,\n  onAutofill,\n  onAutofillChange,\n  renderValue,\n  disabled,\n  readOnly\n}, ref) {\n  const [autofilling, setAutofilling] = useState(false);\n  const searchRef = useRef(null);\n\n  const handleAutofillDetect = ({\n    animationName\n  }) => {\n    let autofilling;\n    if (animationName === 'react-widgets-autofill-start') autofilling = true;else if (animationName === 'react-widgets-autofill-cancel') autofilling = false;else return;\n    setAutofilling(autofilling);\n    onAutofill(autofilling);\n  };\n\n  const handleAutofill = e => {\n    setAutofilling(false);\n    onAutofillChange(e);\n  };\n\n  let dataKey = dataKeyAccessor(value);\n  let text = value == null ? '' : textAccessor(value);\n  let strValue = String(dataKey != null ? dataKey : '');\n  if (strValue === String({})) strValue = '';\n  const inputValue = !value && placeholder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rw-placeholder\"\n  }, placeholder) : renderValue ? renderValue({\n    item: value,\n    dataKey,\n    text\n  }) : text;\n  useImperativeHandle(ref, () => ({\n    focus() {\n      if (searchRef.current) searchRef.current.focus();\n    }\n\n  })); // There is some interaction between unmounting the search and value inputs\n  // that cancels autofilling in Chrome, it may be due to an input the browser\n  // was considering suddenly disappeared. hiding it seems to avoid the issue\n\n  const style = autofilling ? {\n    display: 'none'\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rw-dropdown-list-input\"\n  }, autoComplete !== 'off' && /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    tabIndex: -1,\n    disabled: disabled,\n    readOnly: readOnly,\n    value: strValue == null ? '' : strValue,\n    autoComplete: autoComplete,\n    onChange: handleAutofill,\n    onAnimationStart: handleAutofillDetect,\n    \"aria-hidden\": !autofilling,\n    className: cn('rw-detect-autofill', !autofilling && 'rw-sr')\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, allowSearch && /*#__PURE__*/React.createElement(\"input\", {\n    ref: searchRef,\n    disabled: disabled,\n    readOnly: readOnly,\n    style: style,\n    className: \"rw-dropdownlist-search\",\n    autoComplete: \"off\",\n    value: searchTerm || '',\n    size: (searchTerm || '').length + 2,\n    onChange: onSearch\n  }), !searchTerm && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rw-dropdown-list-value\",\n    style: style\n  }, inputValue)));\n});\nDropdownListInput.displayName = 'DropdownListInput';\nexport default DropdownListInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}