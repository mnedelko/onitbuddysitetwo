{"ast":null,"code":"var _slicedToArray = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nvar satisfies = require('../functions/satisfies.js');\nvar compare = require('../functions/compare.js');\nmodule.exports = function (versions, range, options) {\n  var set = [];\n  var first = null;\n  var prev = null;\n  var v = versions.sort(function (a, b) {\n    return compare(a, b, options);\n  });\n  var _iterator = _createForOfIteratorHelper(v),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var version = _step.value;\n      var included = satisfies(version, range, options);\n      if (included) {\n        prev = version;\n        if (!first) {\n          first = version;\n        }\n      } else {\n        if (prev) {\n          set.push([first, prev]);\n        }\n        prev = null;\n        first = null;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (first) {\n    set.push([first, null]);\n  }\n  var ranges = [];\n  for (var _i = 0, _set = set; _i < _set.length; _i++) {\n    var _set$_i = _slicedToArray(_set[_i], 2),\n      min = _set$_i[0],\n      max = _set$_i[1];\n    if (min === max) {\n      ranges.push(min);\n    } else if (!max && min === v[0]) {\n      ranges.push('*');\n    } else if (!max) {\n      ranges.push(\">=\".concat(min));\n    } else if (min === v[0]) {\n      ranges.push(\"<=\".concat(max));\n    } else {\n      ranges.push(\"\".concat(min, \" - \").concat(max));\n    }\n  }\n  var simplified = ranges.join(' || ');\n  var original = typeof range.raw === 'string' ? range.raw : String(range);\n  return simplified.length < original.length ? simplified : range;\n};","map":{"version":3,"names":["satisfies","require","compare","module","exports","versions","range","options","set","first","prev","v","sort","a","b","version","included","push","ranges","min","max","simplified","join","original","raw","String","length"],"sources":["/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js"],"sourcesContent":["// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACtD,IAAMC,OAAO,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAClDE,MAAM,CAACC,OAAO,GAAG,UAACC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAK;EAC7C,IAAMC,GAAG,GAAG,EAAE;EACd,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAMC,CAAC,GAAGN,QAAQ,CAACO,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKZ,OAAO,CAACW,CAAC,EAAEC,CAAC,EAAEP,OAAO,CAAC;EAAA,EAAC;EAAA,2CACnCI,CAAC;IAAA;EAAA;IAAvB,oDAAyB;MAAA,IAAdI,OAAO;MAChB,IAAMC,QAAQ,GAAGhB,SAAS,CAACe,OAAO,EAAET,KAAK,EAAEC,OAAO,CAAC;MACnD,IAAIS,QAAQ,EAAE;QACZN,IAAI,GAAGK,OAAO;QACd,IAAI,CAACN,KAAK,EAAE;UACVA,KAAK,GAAGM,OAAO;QACjB;MACF,CAAC,MAAM;QACL,IAAIL,IAAI,EAAE;UACRF,GAAG,CAACS,IAAI,CAAC,CAACR,KAAK,EAAEC,IAAI,CAAC,CAAC;QACzB;QACAA,IAAI,GAAG,IAAI;QACXD,KAAK,GAAG,IAAI;MACd;IACF;EAAC;IAAA;EAAA;IAAA;EAAA;EACD,IAAIA,KAAK,EAAE;IACTD,GAAG,CAACS,IAAI,CAAC,CAACR,KAAK,EAAE,IAAI,CAAC,CAAC;EACzB;EAEA,IAAMS,MAAM,GAAG,EAAE;EACjB,wBAAyBV,GAAG,0BAAE;IAAzB;MAAOW,GAAG;MAAEC,GAAG;IAClB,IAAID,GAAG,KAAKC,GAAG,EAAE;MACfF,MAAM,CAACD,IAAI,CAACE,GAAG,CAAC;IAClB,CAAC,MAAM,IAAI,CAACC,GAAG,IAAID,GAAG,KAAKR,CAAC,CAAC,CAAC,CAAC,EAAE;MAC/BO,MAAM,CAACD,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC,MAAM,IAAI,CAACG,GAAG,EAAE;MACfF,MAAM,CAACD,IAAI,aAAME,GAAG,EAAG;IACzB,CAAC,MAAM,IAAIA,GAAG,KAAKR,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBO,MAAM,CAACD,IAAI,aAAMG,GAAG,EAAG;IACzB,CAAC,MAAM;MACLF,MAAM,CAACD,IAAI,WAAIE,GAAG,gBAAMC,GAAG,EAAG;IAChC;EACF;EACA,IAAMC,UAAU,GAAGH,MAAM,CAACI,IAAI,CAAC,MAAM,CAAC;EACtC,IAAMC,QAAQ,GAAG,OAAOjB,KAAK,CAACkB,GAAG,KAAK,QAAQ,GAAGlB,KAAK,CAACkB,GAAG,GAAGC,MAAM,CAACnB,KAAK,CAAC;EAC1E,OAAOe,UAAU,CAACK,MAAM,GAAGH,QAAQ,CAACG,MAAM,GAAGL,UAAU,GAAGf,KAAK;AACjE,CAAC"},"metadata":{},"sourceType":"script"}