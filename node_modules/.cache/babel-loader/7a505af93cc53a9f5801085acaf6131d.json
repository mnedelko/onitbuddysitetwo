{"ast":null,"code":"import _createClass from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/mnedelko/Library/Mobile Documents/com~apple~CloudDocs/Documents/comparativesite/onitbuddyprod/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nexport var IdlError = /*#__PURE__*/function (_Error) {\n  _inherits(IdlError, _Error);\n  var _super = _createSuper(IdlError);\n  function IdlError() {\n    _classCallCheck(this, IdlError);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(IdlError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n// An error from a user defined program.\nexport var ProgramError = /*#__PURE__*/function (_Error2) {\n  _inherits(ProgramError, _Error2);\n  var _super2 = _createSuper(ProgramError);\n  function ProgramError(code, msg) {\n    var _this;\n    _classCallCheck(this, ProgramError);\n    for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      params[_key - 2] = arguments[_key];\n    }\n    _this = _super2.call.apply(_super2, [this].concat(params));\n    _this.code = code;\n    _this.msg = msg;\n    return _this;\n  }\n  _createClass(ProgramError, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.msg;\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(err, idlErrors) {\n      // TODO: don't rely on the error string. web3.js should preserve the error\n      //       code information instead of giving us an untyped string.\n      var components = err.toString().split(\"custom program error: \");\n      if (components.length !== 2) {\n        return null;\n      }\n      var errorCode;\n      try {\n        errorCode = parseInt(components[1]);\n      } catch (parseErr) {\n        return null;\n      }\n      // Parse user error.\n      var errorMsg = idlErrors.get(errorCode);\n      if (errorMsg !== undefined) {\n        return new ProgramError(errorCode, errorMsg);\n      }\n      // Parse framework internal error.\n      errorMsg = LangErrorMessage.get(errorCode);\n      if (errorMsg !== undefined) {\n        return new ProgramError(errorCode, errorMsg);\n      }\n      // Unable to parse the error. Just return the untranslated error.\n      return null;\n    }\n  }]);\n  return ProgramError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar LangErrorCode = {\n  // Instructions.\n  InstructionMissing: 100,\n  InstructionFallbackNotFound: 101,\n  InstructionDidNotDeserialize: 102,\n  InstructionDidNotSerialize: 103,\n  // IDL instructions.\n  IdlInstructionStub: 120,\n  IdlInstructionInvalidProgram: 121,\n  // Constraints.\n  ConstraintMut: 140,\n  ConstraintHasOne: 141,\n  ConstraintSigner: 142,\n  ConstraintRaw: 143,\n  ConstraintOwner: 144,\n  ConstraintRentExempt: 145,\n  ConstraintSeeds: 146,\n  ConstraintExecutable: 147,\n  ConstraintState: 148,\n  ConstraintAssociated: 149,\n  ConstraintAssociatedInit: 150,\n  ConstraintClose: 151,\n  ConstraintAddress: 152,\n  // Accounts.\n  AccountDiscriminatorAlreadySet: 160,\n  AccountDiscriminatorNotFound: 161,\n  AccountDiscriminatorMismatch: 162,\n  AccountDidNotDeserialize: 163,\n  AccountDidNotSerialize: 164,\n  AccountNotEnoughKeys: 165,\n  AccountNotMutable: 166,\n  AccountNotProgramOwned: 167,\n  // State.\n  StateInvalidAddress: 180,\n  // Used for APIs that shouldn't be used anymore.\n  Deprecated: 299\n};\nvar LangErrorMessage = new Map([\n// Instructions.\n[LangErrorCode.InstructionMissing, \"8 byte instruction identifier not provided\"], [LangErrorCode.InstructionFallbackNotFound, \"Fallback functions are not supported\"], [LangErrorCode.InstructionDidNotDeserialize, \"The program could not deserialize the given instruction\"], [LangErrorCode.InstructionDidNotSerialize, \"The program could not serialize the given instruction\"],\n// Idl instructions.\n[LangErrorCode.IdlInstructionStub, \"The program was compiled without idl instructions\"], [LangErrorCode.IdlInstructionInvalidProgram, \"The transaction was given an invalid program for the IDL instruction\"],\n// Constraints.\n[LangErrorCode.ConstraintMut, \"A mut constraint was violated\"], [LangErrorCode.ConstraintHasOne, \"A has_one constraint was violated\"], [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"], [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"], [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"], [LangErrorCode.ConstraintRentExempt, \"A rent exempt constraint was violated\"], [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"], [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"], [LangErrorCode.ConstraintState, \"A state constraint was violated\"], [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"], [LangErrorCode.ConstraintAssociatedInit, \"An associated init constraint was violated\"], [LangErrorCode.ConstraintClose, \"A close constraint was violated\"], [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n// Accounts.\n[LangErrorCode.AccountDiscriminatorAlreadySet, \"The account discriminator was already set on this account\"], [LangErrorCode.AccountDiscriminatorNotFound, \"No 8 byte discriminator was found on the account\"], [LangErrorCode.AccountDiscriminatorMismatch, \"8 byte discriminator did not match what was expected\"], [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"], [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"], [LangErrorCode.AccountNotEnoughKeys, \"Not enough account keys given to the instruction\"], [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"], [LangErrorCode.AccountNotProgramOwned, \"The given account is not owned by the executing program\"],\n// State.\n[LangErrorCode.StateInvalidAddress, \"The given state account does not have the correct address\"],\n// Misc.\n[LangErrorCode.Deprecated, \"The API being used is deprecated and should no longer be used\"]]);","map":{"version":3,"sources":["../../src/error.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export class IdlError extends Error {\n}\n// An error from a user defined program.\nexport class ProgramError extends Error {\n    constructor(code, msg, ...params) {\n        super(...params);\n        this.code = code;\n        this.msg = msg;\n    }\n    static parse(err, idlErrors) {\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let components = err.toString().split(\"custom program error: \");\n        if (components.length !== 2) {\n            return null;\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(components[1]);\n        }\n        catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: 100,\n    InstructionFallbackNotFound: 101,\n    InstructionDidNotDeserialize: 102,\n    InstructionDidNotSerialize: 103,\n    // IDL instructions.\n    IdlInstructionStub: 120,\n    IdlInstructionInvalidProgram: 121,\n    // Constraints.\n    ConstraintMut: 140,\n    ConstraintHasOne: 141,\n    ConstraintSigner: 142,\n    ConstraintRaw: 143,\n    ConstraintOwner: 144,\n    ConstraintRentExempt: 145,\n    ConstraintSeeds: 146,\n    ConstraintExecutable: 147,\n    ConstraintState: 148,\n    ConstraintAssociated: 149,\n    ConstraintAssociatedInit: 150,\n    ConstraintClose: 151,\n    ConstraintAddress: 152,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: 160,\n    AccountDiscriminatorNotFound: 161,\n    AccountDiscriminatorMismatch: 162,\n    AccountDidNotDeserialize: 163,\n    AccountDidNotSerialize: 164,\n    AccountNotEnoughKeys: 165,\n    AccountNotMutable: 166,\n    AccountNotProgramOwned: 167,\n    // State.\n    StateInvalidAddress: 180,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: 299,\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [\n        LangErrorCode.InstructionMissing,\n        \"8 byte instruction identifier not provided\",\n    ],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\",\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\",\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\",\n    ],\n    // Constraints.\n    [LangErrorCode.ConstraintMut, \"A mut constraint was violated\"],\n    [LangErrorCode.ConstraintHasOne, \"A has_one constraint was violated\"],\n    [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"],\n    [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"],\n    [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"],\n    [LangErrorCode.ConstraintRentExempt, \"A rent exempt constraint was violated\"],\n    [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"],\n    [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"],\n    [LangErrorCode.ConstraintState, \"A state constraint was violated\"],\n    [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintClose, \"A close constraint was violated\"],\n    [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No 8 byte discriminator was found on the account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"8 byte discriminator did not match what was expected\",\n    ],\n    [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"],\n    [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\",\n    ],\n    [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"],\n    [\n        LangErrorCode.AccountNotProgramOwned,\n        \"The given account is not owned by the executing program\",\n    ],\n    // State.\n    [\n        LangErrorCode.StateInvalidAddress,\n        \"The given state account does not have the correct address\",\n    ],\n    // Misc.\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\",\n    ],\n]);\n//# sourceMappingURL=error.js.map"]},"metadata":{},"sourceType":"module"}